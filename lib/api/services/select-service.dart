// ** Warning ** this is a autogenerated code.
// Any changes made to this file will be removed.
// For making custom code changes, add code in custom select service.

import 'package:astro_mobile/framework/model/framework_model.dart';

class SelectService {
  List<Status> GetAllEnumGroupTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 1, type: 'Predefined Audit Operation Type'),
      Status(id: 2, type: 'Predefined Artist Group Type'),
      Status(id: 3, type: 'Predefined Artist Type'),
      Status(id: 4, type: 'Predefined Budget Category Type'),
      Status(id: 5, type: 'Predefined Budget Division Type'),
      Status(id: 6, type: 'Predefined Call Sheet Type'),
      Status(id: 7, type: 'Predefined Expense Sub Type'),
      Status(id: 8, type: 'Predefined Expense Type'),
      Status(id: 9, type: 'Predefined Genre Type'),
      Status(id: 10, type: 'Predefined Location Sub Type'),
      Status(id: 11, type: 'Predefined Location Type'),
      Status(id: 12, type: 'Predefined Movie Shoot Day Type'),
      Status(id: 13, type: 'Predefined Post Production Expense Type'),
      Status(id: 14, type: 'Predefined Rate Type'),
      Status(id: 15, type: 'Predefined Shooting Expense Type'),
      Status(id: 16, type: 'Predefined Technician Type'),
      Status(id: 17, type: 'Predefined Company Type'),
      Status(id: 18, type: 'Predefined User Type'),
      Status(id: 19, type: 'Predefined User Permission Type'),
      Status(id: 20, type: 'Predefined Resource Type'),
      Status(id: 21, type: 'Predefined Job Type'),
      Status(id: 22, type: 'Predefined Job Status Type'),
      Status(id: 23, type: 'Predefined Message To Send Type'),
      Status(id: 24, type: 'Predefined Field Control Type'),
      Status(id: 25, type: 'Predefined Field Type'),
      Status(id: 26, type: 'Predefined Field Populator Type'),
      Status(id: 27, type: 'Predefined Meta Data Group Type'),
      Status(id: 28, type: 'Predefined Message Priority Type'),
      Status(id: 29, type: 'Predefined Realtime Message Status Type'),
      Status(id: 30, type: 'Predefined Notification Message Type'),
      Status(id: 31, type: 'Predefined Job Or Report Type'),
      Status(id: 32, type: 'Predefined Buget Value Set Type'),
      Status(id: 33, type: 'Predefined Budget Category Expense Type'),
      Status(id: 34, type: 'Predefined File Storage Type'),
      Status(id: 35, type: 'Predefined Message Template Type'),
      Status(id: 36, type: 'Predefined Technician Group Type'),
      Status(id: 37, type: 'Predefined Equipment Group Type'),
      Status(id: 38, type: 'Predefined Equipment Type'),
      Status(id: 39, type: 'Predefined Movie Status Type'),
      Status(id: 40, type: 'Predefined Movie Stage Type'),
      Status(id: 41, type: 'Predefined Vendor Type'),
      Status(id: 42, type: 'Predefined Movie Shoot Day Status Type'),
      Status(id: 43, type: 'Predefined Movie Shoot Day Scene Status Type'),
      Status(id: 44, type: 'Predefined Contract Assignment Status Type'),
      Status(id: 45, type: 'Predefined Contract Status Type'),
      Status(id: 46, type: 'Predefined Vendor Group Type'),
      Status(id: 47, type: 'Predefined Movie Approval Status Type'),
      Status(id: 48, type: 'Predefined Movie Shoot Day Approval Type'),
      Status(id: 49, type: 'Predefined Requirement Type'),
      Status(id: 50, type: 'Predefined Budget Or Expense Type'),
      Status(id: 51, type: 'Predefined Contract Template For Type'),
      Status(id: 52, type: 'Predefined Contract For Type'),
      Status(id: 53, type: 'Predefined Single Sign On Server Type'),
      Status(id: 54, type: 'Predefined Job Usage For Type'),
      Status(id: 55, type: 'Predefined Call Time Value Type'),
      Status(id: 56, type: 'Predefined Currency Type'),
      Status(id: 57, type: 'Predefined Phone Call Notification Status Type'),
      Status(id: 58, type: 'Predefined Email Notification Status Type'),
      Status(id: 59, type: 'Predefined Sms And Voice Server Type'),
      Status(id: 60, type: 'Predefined Digital Signature Type'),
      Status(id: 61, type: 'Predefined Movie Script File Type'),
      Status(id: 62, type: 'Predefined Expense Payment Type'),
      Status(id: 63, type: 'Predefined Expense Payment Status Type'),
      Status(id: 64, type: 'Predefined Statement Template Type'),
      Status(id: 65, type: 'Predefined Ledger Group Type'),
      Status(id: 66, type: 'Predefined Push Notification Server Type'),
      Status(id: 67, type: 'Predefined Push Notification Status Type'),
      Status(id: 68, type: 'Predefined SMSNotification Status Type'),
      Status(id: 69, type: 'Predefined Whats App Notification Status Type'),
      Status(id: 70, type: 'Predefined Property Group Type'),
      Status(id: 71, type: 'Predefined Property Type'),
      Status(id: 72, type: 'Predefined Payment Status Type'),
      Status(id: 73, type: 'Predefined Movie Scene Status Type'),
      Status(id: 74, type: 'Predefined Contract File Index Type'),
      Status(id: 75, type: 'Predefined Search Index Server Type'),
      Status(id: 76, type: 'Predefined Pre Production Status Type'),
      Status(id: 77, type: 'Predefined Post Production Status Type'),
      Status(id: 78, type: 'Predefined Production Status Type'),
      Status(id: 79, type: 'Predefined Movie Location Visit Status Type'),
      Status(id: 80, type: 'Predefined Department Type'),
      Status(id: 83, type: 'Predefined Commitment Task Recurrence End Type'),
      Status(id: 84, type: 'Predefined Task For Type'),
      Status(id: 85, type: 'Predefined Property For Type'),
      Status(id: 86, type: 'Predefined Equipment For Type'),
      Status(id: 87, type: 'Predefined Rate Unit Type'),
      Status(id: 88, type: 'Predefined Commitment Task Status Type'),
      Status(id: 89, type: 'Predefined Commitment Task Priority Type'),
      Status(id: 90, type: 'Predefined Movie Status Notification Event Type'),
      Status(id: 91, type: 'Predefined Biometric Type'),
      Status(id: 92, type: 'Predefined Identification Document Type'),
      Status(id: 93, type: 'Predefined Property Transaction Type'),
      Status(id: 94, type: 'Predefined Equipment Transaction Type'),
      Status(
          id: 95, type: 'Predefined Property Or Equipment Requested By Type'),
    ];
  }

  List<Status> GetWithBlankEnumGroupTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 1, type: 'Predefined Audit Operation Type'),
      Status(id: 2, type: 'Predefined Artist Group Type'),
      Status(id: 3, type: 'Predefined Artist Type'),
      Status(id: 4, type: 'Predefined Budget Category Type'),
      Status(id: 5, type: 'Predefined Budget Division Type'),
      Status(id: 6, type: 'Predefined Call Sheet Type'),
      Status(id: 7, type: 'Predefined Expense Sub Type'),
      Status(id: 8, type: 'Predefined Expense Type'),
      Status(id: 9, type: 'Predefined Genre Type'),
      Status(id: 10, type: 'Predefined Location Sub Type'),
      Status(id: 11, type: 'Predefined Location Type'),
      Status(id: 12, type: 'Predefined Movie Shoot Day Type'),
      Status(id: 13, type: 'Predefined Post Production Expense Type'),
      Status(id: 14, type: 'Predefined Rate Type'),
      Status(id: 15, type: 'Predefined Shooting Expense Type'),
      Status(id: 16, type: 'Predefined Technician Type'),
      Status(id: 17, type: 'Predefined Company Type'),
      Status(id: 18, type: 'Predefined User Type'),
      Status(id: 19, type: 'Predefined User Permission Type'),
      Status(id: 20, type: 'Predefined Resource Type'),
      Status(id: 21, type: 'Predefined Job Type'),
      Status(id: 22, type: 'Predefined Job Status Type'),
      Status(id: 23, type: 'Predefined Message To Send Type'),
      Status(id: 24, type: 'Predefined Field Control Type'),
      Status(id: 25, type: 'Predefined Field Type'),
      Status(id: 26, type: 'Predefined Field Populator Type'),
      Status(id: 27, type: 'Predefined Meta Data Group Type'),
      Status(id: 28, type: 'Predefined Message Priority Type'),
      Status(id: 29, type: 'Predefined Realtime Message Status Type'),
      Status(id: 30, type: 'Predefined Notification Message Type'),
      Status(id: 31, type: 'Predefined Job Or Report Type'),
      Status(id: 32, type: 'Predefined Buget Value Set Type'),
      Status(id: 33, type: 'Predefined Budget Category Expense Type'),
      Status(id: 34, type: 'Predefined File Storage Type'),
      Status(id: 35, type: 'Predefined Message Template Type'),
      Status(id: 36, type: 'Predefined Technician Group Type'),
      Status(id: 37, type: 'Predefined Equipment Group Type'),
      Status(id: 38, type: 'Predefined Equipment Type'),
      Status(id: 39, type: 'Predefined Movie Status Type'),
      Status(id: 40, type: 'Predefined Movie Stage Type'),
      Status(id: 41, type: 'Predefined Vendor Type'),
      Status(id: 42, type: 'Predefined Movie Shoot Day Status Type'),
      Status(id: 43, type: 'Predefined Movie Shoot Day Scene Status Type'),
      Status(id: 44, type: 'Predefined Contract Assignment Status Type'),
      Status(id: 45, type: 'Predefined Contract Status Type'),
      Status(id: 46, type: 'Predefined Vendor Group Type'),
      Status(id: 47, type: 'Predefined Movie Approval Status Type'),
      Status(id: 48, type: 'Predefined Movie Shoot Day Approval Type'),
      Status(id: 49, type: 'Predefined Requirement Type'),
      Status(id: 50, type: 'Predefined Budget Or Expense Type'),
      Status(id: 51, type: 'Predefined Contract Template For Type'),
      Status(id: 52, type: 'Predefined Contract For Type'),
      Status(id: 53, type: 'Predefined Single Sign On Server Type'),
      Status(id: 54, type: 'Predefined Job Usage For Type'),
      Status(id: 55, type: 'Predefined Call Time Value Type'),
      Status(id: 56, type: 'Predefined Currency Type'),
      Status(id: 57, type: 'Predefined Phone Call Notification Status Type'),
      Status(id: 58, type: 'Predefined Email Notification Status Type'),
      Status(id: 59, type: 'Predefined Sms And Voice Server Type'),
      Status(id: 60, type: 'Predefined Digital Signature Type'),
      Status(id: 61, type: 'Predefined Movie Script File Type'),
      Status(id: 62, type: 'Predefined Expense Payment Type'),
      Status(id: 63, type: 'Predefined Expense Payment Status Type'),
      Status(id: 64, type: 'Predefined Statement Template Type'),
      Status(id: 65, type: 'Predefined Ledger Group Type'),
      Status(id: 66, type: 'Predefined Push Notification Server Type'),
      Status(id: 67, type: 'Predefined Push Notification Status Type'),
      Status(id: 68, type: 'Predefined SMSNotification Status Type'),
      Status(id: 69, type: 'Predefined Whats App Notification Status Type'),
      Status(id: 70, type: 'Predefined Property Group Type'),
      Status(id: 71, type: 'Predefined Property Type'),
      Status(id: 72, type: 'Predefined Payment Status Type'),
      Status(id: 73, type: 'Predefined Movie Scene Status Type'),
      Status(id: 74, type: 'Predefined Contract File Index Type'),
      Status(id: 75, type: 'Predefined Search Index Server Type'),
      Status(id: 76, type: 'Predefined Pre Production Status Type'),
      Status(id: 77, type: 'Predefined Post Production Status Type'),
      Status(id: 78, type: 'Predefined Production Status Type'),
      Status(id: 79, type: 'Predefined Movie Location Visit Status Type'),
      Status(id: 80, type: 'Predefined Department Type'),
      Status(id: 83, type: 'Predefined Commitment Task Recurrence End Type'),
      Status(id: 84, type: 'Predefined Task For Type'),
      Status(id: 85, type: 'Predefined Property For Type'),
      Status(id: 86, type: 'Predefined Equipment For Type'),
      Status(id: 87, type: 'Predefined Rate Unit Type'),
      Status(id: 88, type: 'Predefined Commitment Task Status Type'),
      Status(id: 89, type: 'Predefined Commitment Task Priority Type'),
      Status(id: 90, type: 'Predefined Movie Status Notification Event Type'),
      Status(id: 91, type: 'Predefined Biometric Type'),
      Status(id: 92, type: 'Predefined Identification Document Type'),
      Status(id: 93, type: 'Predefined Property Transaction Type'),
      Status(id: 94, type: 'Predefined Equipment Transaction Type'),
      Status(
          id: 95, type: 'Predefined Property Or Equipment Requested By Type'),
    ];
  }

  List<Status> GetEnumGroupTypes() {
    return [
      Status(id: 1, type: 'Predefined Audit Operation Type'),
      Status(id: 2, type: 'Predefined Artist Group Type'),
      Status(id: 3, type: 'Predefined Artist Type'),
      Status(id: 4, type: 'Predefined Budget Category Type'),
      Status(id: 5, type: 'Predefined Budget Division Type'),
      Status(id: 6, type: 'Predefined Call Sheet Type'),
      Status(id: 7, type: 'Predefined Expense Sub Type'),
      Status(id: 8, type: 'Predefined Expense Type'),
      Status(id: 9, type: 'Predefined Genre Type'),
      Status(id: 10, type: 'Predefined Location Sub Type'),
      Status(id: 11, type: 'Predefined Location Type'),
      Status(id: 12, type: 'Predefined Movie Shoot Day Type'),
      Status(id: 13, type: 'Predefined Post Production Expense Type'),
      Status(id: 14, type: 'Predefined Rate Type'),
      Status(id: 15, type: 'Predefined Shooting Expense Type'),
      Status(id: 16, type: 'Predefined Technician Type'),
      Status(id: 17, type: 'Predefined Company Type'),
      Status(id: 18, type: 'Predefined User Type'),
      Status(id: 19, type: 'Predefined User Permission Type'),
      Status(id: 20, type: 'Predefined Resource Type'),
      Status(id: 21, type: 'Predefined Job Type'),
      Status(id: 22, type: 'Predefined Job Status Type'),
      Status(id: 23, type: 'Predefined Message To Send Type'),
      Status(id: 24, type: 'Predefined Field Control Type'),
      Status(id: 25, type: 'Predefined Field Type'),
      Status(id: 26, type: 'Predefined Field Populator Type'),
      Status(id: 27, type: 'Predefined Meta Data Group Type'),
      Status(id: 28, type: 'Predefined Message Priority Type'),
      Status(id: 29, type: 'Predefined Realtime Message Status Type'),
      Status(id: 30, type: 'Predefined Notification Message Type'),
      Status(id: 31, type: 'Predefined Job Or Report Type'),
      Status(id: 32, type: 'Predefined Buget Value Set Type'),
      Status(id: 33, type: 'Predefined Budget Category Expense Type'),
      Status(id: 34, type: 'Predefined File Storage Type'),
      Status(id: 35, type: 'Predefined Message Template Type'),
      Status(id: 36, type: 'Predefined Technician Group Type'),
      Status(id: 37, type: 'Predefined Equipment Group Type'),
      Status(id: 38, type: 'Predefined Equipment Type'),
      Status(id: 39, type: 'Predefined Movie Status Type'),
      Status(id: 40, type: 'Predefined Movie Stage Type'),
      Status(id: 41, type: 'Predefined Vendor Type'),
      Status(id: 42, type: 'Predefined Movie Shoot Day Status Type'),
      Status(id: 43, type: 'Predefined Movie Shoot Day Scene Status Type'),
      Status(id: 44, type: 'Predefined Contract Assignment Status Type'),
      Status(id: 45, type: 'Predefined Contract Status Type'),
      Status(id: 46, type: 'Predefined Vendor Group Type'),
      Status(id: 47, type: 'Predefined Movie Approval Status Type'),
      Status(id: 48, type: 'Predefined Movie Shoot Day Approval Type'),
      Status(id: 49, type: 'Predefined Requirement Type'),
      Status(id: 50, type: 'Predefined Budget Or Expense Type'),
      Status(id: 51, type: 'Predefined Contract Template For Type'),
      Status(id: 52, type: 'Predefined Contract For Type'),
      Status(id: 53, type: 'Predefined Single Sign On Server Type'),
      Status(id: 54, type: 'Predefined Job Usage For Type'),
      Status(id: 55, type: 'Predefined Call Time Value Type'),
      Status(id: 56, type: 'Predefined Currency Type'),
      Status(id: 57, type: 'Predefined Phone Call Notification Status Type'),
      Status(id: 58, type: 'Predefined Email Notification Status Type'),
      Status(id: 59, type: 'Predefined Sms And Voice Server Type'),
      Status(id: 60, type: 'Predefined Digital Signature Type'),
      Status(id: 61, type: 'Predefined Movie Script File Type'),
      Status(id: 62, type: 'Predefined Expense Payment Type'),
      Status(id: 63, type: 'Predefined Expense Payment Status Type'),
      Status(id: 64, type: 'Predefined Statement Template Type'),
      Status(id: 65, type: 'Predefined Ledger Group Type'),
      Status(id: 66, type: 'Predefined Push Notification Server Type'),
      Status(id: 67, type: 'Predefined Push Notification Status Type'),
      Status(id: 68, type: 'Predefined SMSNotification Status Type'),
      Status(id: 69, type: 'Predefined Whats App Notification Status Type'),
      Status(id: 70, type: 'Predefined Property Group Type'),
      Status(id: 71, type: 'Predefined Property Type'),
      Status(id: 72, type: 'Predefined Payment Status Type'),
      Status(id: 73, type: 'Predefined Movie Scene Status Type'),
      Status(id: 74, type: 'Predefined Contract File Index Type'),
      Status(id: 75, type: 'Predefined Search Index Server Type'),
      Status(id: 76, type: 'Predefined Pre Production Status Type'),
      Status(id: 77, type: 'Predefined Post Production Status Type'),
      Status(id: 78, type: 'Predefined Production Status Type'),
      Status(id: 79, type: 'Predefined Movie Location Visit Status Type'),
      Status(id: 80, type: 'Predefined Department Type'),
      Status(id: 83, type: 'Predefined Commitment Task Recurrence End Type'),
      Status(id: 84, type: 'Predefined Task For Type'),
      Status(id: 85, type: 'Predefined Property For Type'),
      Status(id: 86, type: 'Predefined Equipment For Type'),
      Status(id: 87, type: 'Predefined Rate Unit Type'),
      Status(id: 88, type: 'Predefined Commitment Task Status Type'),
      Status(id: 89, type: 'Predefined Commitment Task Priority Type'),
      Status(id: 90, type: 'Predefined Movie Status Notification Event Type'),
      Status(id: 91, type: 'Predefined Biometric Type'),
      Status(id: 92, type: 'Predefined Identification Document Type'),
      Status(id: 93, type: 'Predefined Property Transaction Type'),
      Status(id: 94, type: 'Predefined Equipment Transaction Type'),
      Status(
          id: 95, type: 'Predefined Property Or Equipment Requested By Type'),
    ];
  }

  List<Status> GetAllPredefinedArtistGroupTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 200001, type: 'Custom'),
      Status(id: 200002, type: 'Actors'),
      Status(id: 200003, type: 'Sides'),
      Status(id: 200004, type: 'Stunts'),
    ];
  }

  List<Status> GetWithBlankPredefinedArtistGroupTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 200001, type: 'Custom'),
      Status(id: 200002, type: 'Actors'),
      Status(id: 200003, type: 'Sides'),
      Status(id: 200004, type: 'Stunts'),
    ];
  }

  List<Status> GetPredefinedArtistGroupTypes() {
    return [
      Status(id: 200001, type: 'Custom'),
      Status(id: 200002, type: 'Actors'),
      Status(id: 200003, type: 'Sides'),
      Status(id: 200004, type: 'Stunts'),
    ];
  }

  List<Status> GetAllPredefinedArtistTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 300001, type: 'Main Actor'),
      Status(id: 300002, type: 'Main Actress'),
      Status(id: 300003, type: 'Support Actor'),
      Status(id: 300004, type: 'Support Actress'),
      Status(id: 300005, type: 'Villain'),
      Status(id: 300006, type: 'Extras'),
      Status(id: 300007, type: 'Stunt Double'),
      Status(id: 300008, type: 'Other'),
      Status(id: 300009, type: 'Lead Actor'),
      Status(id: 300010, type: 'Lead Actress'),
    ];
  }

  List<Status> GetWithBlankPredefinedArtistTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 300001, type: 'Main Actor'),
      Status(id: 300002, type: 'Main Actress'),
      Status(id: 300003, type: 'Support Actor'),
      Status(id: 300004, type: 'Support Actress'),
      Status(id: 300005, type: 'Villain'),
      Status(id: 300006, type: 'Extras'),
      Status(id: 300007, type: 'Stunt Double'),
      Status(id: 300008, type: 'Other'),
      Status(id: 300009, type: 'Lead Actor'),
      Status(id: 300010, type: 'Lead Actress'),
    ];
  }

  List<Status> GetPredefinedArtistTypes() {
    return [
      Status(id: 300001, type: 'Main Actor'),
      Status(id: 300002, type: 'Main Actress'),
      Status(id: 300003, type: 'Support Actor'),
      Status(id: 300004, type: 'Support Actress'),
      Status(id: 300005, type: 'Villain'),
      Status(id: 300006, type: 'Extras'),
      Status(id: 300007, type: 'Stunt Double'),
      Status(id: 300008, type: 'Other'),
      Status(id: 300009, type: 'Lead Actor'),
      Status(id: 300010, type: 'Lead Actress'),
    ];
  }

  List<Status> GetAllPredefinedAuditOperationTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 100001, type: 'Resource Created'),
      Status(id: 100002, type: 'Resource Updated'),
      Status(id: 100003, type: 'Resource Deleted'),
      Status(id: 100004, type: 'Resource Undeleted'),
      Status(id: 100005, type: 'Resource Hard Deleted'),
      Status(id: 100006, type: 'Resource Enable'),
      Status(id: 100007, type: 'Resource Disable'),
      Status(id: 101001, type: 'Super Admin Login'),
      Status(id: 101002, type: 'Login'),
      Status(id: 101003, type: 'Logout'),
      Status(id: 101004, type: 'Login Failed'),
      Status(id: 101005, type: 'Forgot Password Failed Request'),
      Status(id: 101006, type: 'Reset Password'),
      Status(id: 101007, type: 'Social Login'),
      Status(id: 101008, type: 'Social Login Failed'),
      Status(id: 101009, type: 'Alternate Login'),
      Status(id: 101010, type: 'Alternate Login Failed'),
      Status(id: 101011, type: 'Changed Password'),
      Status(id: 101012, type: 'Forgot Password Request'),
      Status(id: 101015, type: 'User Created'),
      Status(id: 101016, type: 'User Updated'),
      Status(id: 101017, type: 'User Deleted'),
      Status(id: 101018, type: 'Login Enabled'),
      Status(id: 101019, type: 'Login Disabled'),
      Status(id: 101020, type: 'Update Configuration'),
      Status(id: 101021, type: 'Report'),
      Status(id: 101022, type: 'Run Report'),
      Status(id: 101023, type: 'View Report'),
      Status(id: 101024, type: 'Download Report'),
    ];
  }

  List<Status> GetWithBlankPredefinedAuditOperationTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 100001, type: 'Resource Created'),
      Status(id: 100002, type: 'Resource Updated'),
      Status(id: 100003, type: 'Resource Deleted'),
      Status(id: 100004, type: 'Resource Undeleted'),
      Status(id: 100005, type: 'Resource Hard Deleted'),
      Status(id: 100006, type: 'Resource Enable'),
      Status(id: 100007, type: 'Resource Disable'),
      Status(id: 101001, type: 'Super Admin Login'),
      Status(id: 101002, type: 'Login'),
      Status(id: 101003, type: 'Logout'),
      Status(id: 101004, type: 'Login Failed'),
      Status(id: 101005, type: 'Forgot Password Failed Request'),
      Status(id: 101006, type: 'Reset Password'),
      Status(id: 101007, type: 'Social Login'),
      Status(id: 101008, type: 'Social Login Failed'),
      Status(id: 101009, type: 'Alternate Login'),
      Status(id: 101010, type: 'Alternate Login Failed'),
      Status(id: 101011, type: 'Changed Password'),
      Status(id: 101012, type: 'Forgot Password Request'),
      Status(id: 101015, type: 'User Created'),
      Status(id: 101016, type: 'User Updated'),
      Status(id: 101017, type: 'User Deleted'),
      Status(id: 101018, type: 'Login Enabled'),
      Status(id: 101019, type: 'Login Disabled'),
      Status(id: 101020, type: 'Update Configuration'),
      Status(id: 101021, type: 'Report'),
      Status(id: 101022, type: 'Run Report'),
      Status(id: 101023, type: 'View Report'),
      Status(id: 101024, type: 'Download Report'),
    ];
  }

  List<Status> GetPredefinedAuditOperationTypes() {
    return [
      Status(id: 100001, type: 'Resource Created'),
      Status(id: 100002, type: 'Resource Updated'),
      Status(id: 100003, type: 'Resource Deleted'),
      Status(id: 100004, type: 'Resource Undeleted'),
      Status(id: 100005, type: 'Resource Hard Deleted'),
      Status(id: 100006, type: 'Resource Enable'),
      Status(id: 100007, type: 'Resource Disable'),
      Status(id: 101001, type: 'Super Admin Login'),
      Status(id: 101002, type: 'Login'),
      Status(id: 101003, type: 'Logout'),
      Status(id: 101004, type: 'Login Failed'),
      Status(id: 101005, type: 'Forgot Password Failed Request'),
      Status(id: 101006, type: 'Reset Password'),
      Status(id: 101007, type: 'Social Login'),
      Status(id: 101008, type: 'Social Login Failed'),
      Status(id: 101009, type: 'Alternate Login'),
      Status(id: 101010, type: 'Alternate Login Failed'),
      Status(id: 101011, type: 'Changed Password'),
      Status(id: 101012, type: 'Forgot Password Request'),
      Status(id: 101015, type: 'User Created'),
      Status(id: 101016, type: 'User Updated'),
      Status(id: 101017, type: 'User Deleted'),
      Status(id: 101018, type: 'Login Enabled'),
      Status(id: 101019, type: 'Login Disabled'),
      Status(id: 101020, type: 'Update Configuration'),
      Status(id: 101021, type: 'Report'),
      Status(id: 101022, type: 'Run Report'),
      Status(id: 101023, type: 'View Report'),
      Status(id: 101024, type: 'Download Report'),
    ];
  }

  List<Status> GetAllPredefinedBiometricTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 9100001, type: 'Finger Print'),
    ];
  }

  List<Status> GetWithBlankPredefinedBiometricTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 9100001, type: 'Finger Print'),
    ];
  }

  List<Status> GetPredefinedBiometricTypes() {
    return [
      Status(id: 9100001, type: 'Finger Print'),
    ];
  }

  List<Status> GetAllPredefinedBudgetCategoryExpenseTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 3300001, type: 'Camera'),
      Status(id: 3300002, type: 'Dit'),
      Status(id: 3300003, type: 'Mixer'),
      Status(id: 3300004, type: 'Lightman'),
      Status(id: 3300005, type: 'Crane'),
      Status(id: 3300006, type: 'Unit Technicians'),
      Status(id: 3300007, type: 'Make Up'),
      Status(id: 3300008, type: 'Costumers'),
      Status(id: 3300009, type: 'Set Assistant'),
      Status(id: 3300010, type: 'Production Assistant'),
      Status(id: 3300011, type: 'Production Assistant Ladies'),
      Status(id: 3300012, type: 'Drivers Batta'),
      Status(id: 3300013, type: 'Photo Flood Batta'),
      Status(id: 3300015, type: 'Caravan Driver And Assistant'),
      Status(id: 3300016, type: 'Carpenter And Painter'),
      Status(id: 3300017, type: 'Hero Escort'),
      Status(id: 3300018, type: 'Assistant Directors Batta'),
      Status(id: 3300019, type: 'Assistant Cameramans Batta'),
      Status(id: 3300020, type: 'Managers And Cashier Batta'),
      Status(id: 3300021, type: 'Art Assistant Batta'),
      Status(id: 3300022, type: 'Stills Batta'),
      Status(id: 3300023, type: 'Hero Assistant Batta'),
      Status(id: 3300024, type: 'Diesel'),
      Status(id: 3300025, type: 'Animals'),
      Status(id: 3300026, type: 'Drone'),
      Status(id: 3300027, type: 'Caravan'),
      Status(id: 3300028, type: 'Gym Boys'),
      Status(id: 3300029, type: 'Goda'),
      Status(id: 3300030, type: 'Steadi Cam'),
      Status(id: 3300031, type: 'Photo Flood Hire'),
      Status(id: 3300032, type: 'Vehicle Hire'),
      Status(id: 3309999, type: 'Custom'),
    ];
  }

  List<Status> GetWithBlankPredefinedBudgetCategoryExpenseTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 3300001, type: 'Camera'),
      Status(id: 3300002, type: 'Dit'),
      Status(id: 3300003, type: 'Mixer'),
      Status(id: 3300004, type: 'Lightman'),
      Status(id: 3300005, type: 'Crane'),
      Status(id: 3300006, type: 'Unit Technicians'),
      Status(id: 3300007, type: 'Make Up'),
      Status(id: 3300008, type: 'Costumers'),
      Status(id: 3300009, type: 'Set Assistant'),
      Status(id: 3300010, type: 'Production Assistant'),
      Status(id: 3300011, type: 'Production Assistant Ladies'),
      Status(id: 3300012, type: 'Drivers Batta'),
      Status(id: 3300013, type: 'Photo Flood Batta'),
      Status(id: 3300015, type: 'Caravan Driver And Assistant'),
      Status(id: 3300016, type: 'Carpenter And Painter'),
      Status(id: 3300017, type: 'Hero Escort'),
      Status(id: 3300018, type: 'Assistant Directors Batta'),
      Status(id: 3300019, type: 'Assistant Cameramans Batta'),
      Status(id: 3300020, type: 'Managers And Cashier Batta'),
      Status(id: 3300021, type: 'Art Assistant Batta'),
      Status(id: 3300022, type: 'Stills Batta'),
      Status(id: 3300023, type: 'Hero Assistant Batta'),
      Status(id: 3300024, type: 'Diesel'),
      Status(id: 3300025, type: 'Animals'),
      Status(id: 3300026, type: 'Drone'),
      Status(id: 3300027, type: 'Caravan'),
      Status(id: 3300028, type: 'Gym Boys'),
      Status(id: 3300029, type: 'Goda'),
      Status(id: 3300030, type: 'Steadi Cam'),
      Status(id: 3300031, type: 'Photo Flood Hire'),
      Status(id: 3300032, type: 'Vehicle Hire'),
      Status(id: 3309999, type: 'Custom'),
    ];
  }

  List<Status> GetPredefinedBudgetCategoryExpenseTypes() {
    return [
      Status(id: 3300001, type: 'Camera'),
      Status(id: 3300002, type: 'Dit'),
      Status(id: 3300003, type: 'Mixer'),
      Status(id: 3300004, type: 'Lightman'),
      Status(id: 3300005, type: 'Crane'),
      Status(id: 3300006, type: 'Unit Technicians'),
      Status(id: 3300007, type: 'Make Up'),
      Status(id: 3300008, type: 'Costumers'),
      Status(id: 3300009, type: 'Set Assistant'),
      Status(id: 3300010, type: 'Production Assistant'),
      Status(id: 3300011, type: 'Production Assistant Ladies'),
      Status(id: 3300012, type: 'Drivers Batta'),
      Status(id: 3300013, type: 'Photo Flood Batta'),
      Status(id: 3300015, type: 'Caravan Driver And Assistant'),
      Status(id: 3300016, type: 'Carpenter And Painter'),
      Status(id: 3300017, type: 'Hero Escort'),
      Status(id: 3300018, type: 'Assistant Directors Batta'),
      Status(id: 3300019, type: 'Assistant Cameramans Batta'),
      Status(id: 3300020, type: 'Managers And Cashier Batta'),
      Status(id: 3300021, type: 'Art Assistant Batta'),
      Status(id: 3300022, type: 'Stills Batta'),
      Status(id: 3300023, type: 'Hero Assistant Batta'),
      Status(id: 3300024, type: 'Diesel'),
      Status(id: 3300025, type: 'Animals'),
      Status(id: 3300026, type: 'Drone'),
      Status(id: 3300027, type: 'Caravan'),
      Status(id: 3300028, type: 'Gym Boys'),
      Status(id: 3300029, type: 'Goda'),
      Status(id: 3300030, type: 'Steadi Cam'),
      Status(id: 3300031, type: 'Photo Flood Hire'),
      Status(id: 3300032, type: 'Vehicle Hire'),
      Status(id: 3309999, type: 'Custom'),
    ];
  }

  List<Status> GetAllPredefinedBudgetCategoryTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 400001, type: 'Daily Battas'),
      Status(id: 400002, type: 'Junior Artist And Artist'),
      Status(id: 400003, type: 'Shot Vehicles'),
      Status(id: 400004, type: 'Location Hire'),
      Status(id: 400005, type: 'Mess'),
      Status(id: 400006, type: 'Tea And Snacks'),
      Status(id: 400007, type: 'Dancers'),
      Status(id: 400009, type: 'Fighters And Dancers'),
      Status(id: 400010, type: 'Unit And Camera Hire'),
      Status(id: 400100, type: 'Location Hunting Recce'),
      Status(id: 400101, type: 'Office Rent'),
      Status(id: 400102, type: 'Electricity'),
      Status(id: 400103, type: 'Office Maintainance'),
      Status(id: 400104, type: 'Pre Production Food'),
      Status(id: 400105, type: 'Pre Production Daily Battas'),
      Status(id: 400106, type: 'Auditions'),
      Status(id: 400107, type: 'Audition Conveyances'),
      Status(id: 400200, type: 'Dubbing'),
      Status(id: 400201, type: 'Color Correction DI'),
      Status(id: 400202, type: 'VFX'),
      Status(id: 400203, type: 'SFX'),
      Status(id: 400204, type: 'Music'),
      Status(id: 400205, type: 'Mixing'),
      Status(id: 400206, type: 'Animal Welfarepermission'),
      Status(id: 400207, type: 'Censor'),
      Status(id: 400208, type: 'Subtitles'),
      Status(id: 400209, type: 'General'),
      Status(id: 409901, type: 'Miscellaneous'),
      Status(id: 409902, type: 'Custom'),
    ];
  }

  List<Status> GetWithBlankPredefinedBudgetCategoryTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 400001, type: 'Daily Battas'),
      Status(id: 400002, type: 'Junior Artist And Artist'),
      Status(id: 400003, type: 'Shot Vehicles'),
      Status(id: 400004, type: 'Location Hire'),
      Status(id: 400005, type: 'Mess'),
      Status(id: 400006, type: 'Tea And Snacks'),
      Status(id: 400007, type: 'Dancers'),
      Status(id: 400009, type: 'Fighters And Dancers'),
      Status(id: 400010, type: 'Unit And Camera Hire'),
      Status(id: 400100, type: 'Location Hunting Recce'),
      Status(id: 400101, type: 'Office Rent'),
      Status(id: 400102, type: 'Electricity'),
      Status(id: 400103, type: 'Office Maintainance'),
      Status(id: 400104, type: 'Pre Production Food'),
      Status(id: 400105, type: 'Pre Production Daily Battas'),
      Status(id: 400106, type: 'Auditions'),
      Status(id: 400107, type: 'Audition Conveyances'),
      Status(id: 400200, type: 'Dubbing'),
      Status(id: 400201, type: 'Color Correction DI'),
      Status(id: 400202, type: 'VFX'),
      Status(id: 400203, type: 'SFX'),
      Status(id: 400204, type: 'Music'),
      Status(id: 400205, type: 'Mixing'),
      Status(id: 400206, type: 'Animal Welfarepermission'),
      Status(id: 400207, type: 'Censor'),
      Status(id: 400208, type: 'Subtitles'),
      Status(id: 400209, type: 'General'),
      Status(id: 409901, type: 'Miscellaneous'),
      Status(id: 409902, type: 'Custom'),
    ];
  }

  List<Status> GetPredefinedBudgetCategoryTypes() {
    return [
      Status(id: 400001, type: 'Daily Battas'),
      Status(id: 400002, type: 'Junior Artist And Artist'),
      Status(id: 400003, type: 'Shot Vehicles'),
      Status(id: 400004, type: 'Location Hire'),
      Status(id: 400005, type: 'Mess'),
      Status(id: 400006, type: 'Tea And Snacks'),
      Status(id: 400007, type: 'Dancers'),
      Status(id: 400009, type: 'Fighters And Dancers'),
      Status(id: 400010, type: 'Unit And Camera Hire'),
      Status(id: 400100, type: 'Location Hunting Recce'),
      Status(id: 400101, type: 'Office Rent'),
      Status(id: 400102, type: 'Electricity'),
      Status(id: 400103, type: 'Office Maintainance'),
      Status(id: 400104, type: 'Pre Production Food'),
      Status(id: 400105, type: 'Pre Production Daily Battas'),
      Status(id: 400106, type: 'Auditions'),
      Status(id: 400107, type: 'Audition Conveyances'),
      Status(id: 400200, type: 'Dubbing'),
      Status(id: 400201, type: 'Color Correction DI'),
      Status(id: 400202, type: 'VFX'),
      Status(id: 400203, type: 'SFX'),
      Status(id: 400204, type: 'Music'),
      Status(id: 400205, type: 'Mixing'),
      Status(id: 400206, type: 'Animal Welfarepermission'),
      Status(id: 400207, type: 'Censor'),
      Status(id: 400208, type: 'Subtitles'),
      Status(id: 400209, type: 'General'),
      Status(id: 409901, type: 'Miscellaneous'),
      Status(id: 409902, type: 'Custom'),
    ];
  }

  List<Status> GetAllPredefinedBudgetDivisionTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 500001, type: 'Pre Production'),
      Status(id: 500002, type: 'Production'),
      Status(id: 500003, type: 'Post Production'),
      Status(id: 500004, type: 'After Release'),
      Status(id: 500005, type: 'Artist'),
      Status(id: 500006, type: 'Technicians'),
      Status(id: 500007, type: 'Others'),
    ];
  }

  List<Status> GetWithBlankPredefinedBudgetDivisionTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 500001, type: 'Pre Production'),
      Status(id: 500002, type: 'Production'),
      Status(id: 500003, type: 'Post Production'),
      Status(id: 500004, type: 'After Release'),
      Status(id: 500005, type: 'Artist'),
      Status(id: 500006, type: 'Technicians'),
      Status(id: 500007, type: 'Others'),
    ];
  }

  List<Status> GetPredefinedBudgetDivisionTypes() {
    return [
      Status(id: 500001, type: 'Pre Production'),
      Status(id: 500002, type: 'Production'),
      Status(id: 500003, type: 'Post Production'),
      Status(id: 500004, type: 'After Release'),
      Status(id: 500005, type: 'Artist'),
      Status(id: 500006, type: 'Technicians'),
      Status(id: 500007, type: 'Others'),
    ];
  }

  List<Status> GetAllPredefinedBudgetOrExpenseTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 5000001, type: 'Movie Artist'),
      Status(id: 5000002, type: 'Movie Technician'),
      Status(id: 5000003, type: 'Movie Equipment'),
      Status(id: 5000004, type: 'Movie Vendor'),
      Status(id: 5000005, type: 'Movie Property'),
      Status(id: 5000006, type: 'Movie Location'),
      Status(id: 5000100, type: 'Custom'),
    ];
  }

  List<Status> GetWithBlankPredefinedBudgetOrExpenseTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 5000001, type: 'Movie Artist'),
      Status(id: 5000002, type: 'Movie Technician'),
      Status(id: 5000003, type: 'Movie Equipment'),
      Status(id: 5000004, type: 'Movie Vendor'),
      Status(id: 5000005, type: 'Movie Property'),
      Status(id: 5000006, type: 'Movie Location'),
      Status(id: 5000100, type: 'Custom'),
    ];
  }

  List<Status> GetPredefinedBudgetOrExpenseTypes() {
    return [
      Status(id: 5000001, type: 'Movie Artist'),
      Status(id: 5000002, type: 'Movie Technician'),
      Status(id: 5000003, type: 'Movie Equipment'),
      Status(id: 5000004, type: 'Movie Vendor'),
      Status(id: 5000005, type: 'Movie Property'),
      Status(id: 5000006, type: 'Movie Location'),
      Status(id: 5000100, type: 'Custom'),
    ];
  }

  List<Status> GetAllPredefinedBugetValueSetTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 3200001, type: 'Direct Input'),
      Status(id: 3200002, type: 'Auto Rollup'),
      Status(id: 3200003, type: 'Both'),
    ];
  }

  List<Status> GetWithBlankPredefinedBugetValueSetTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 3200001, type: 'Direct Input'),
      Status(id: 3200002, type: 'Auto Rollup'),
      Status(id: 3200003, type: 'Both'),
    ];
  }

  List<Status> GetPredefinedBugetValueSetTypes() {
    return [
      Status(id: 3200001, type: 'Direct Input'),
      Status(id: 3200002, type: 'Auto Rollup'),
      Status(id: 3200003, type: 'Both'),
    ];
  }

  List<Status> GetAllPredefinedCallSheetTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 600001, type: 'Single'),
      Status(id: 600002, type: 'One And Half'),
      Status(id: 600003, type: 'Double'),
      Status(id: 600004, type: 'Two And Half'),
      Status(id: 600005, type: 'Three'),
      Status(id: 600006, type: 'Not Applicable'),
    ];
  }

  List<Status> GetWithBlankPredefinedCallSheetTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 600001, type: 'Single'),
      Status(id: 600002, type: 'One And Half'),
      Status(id: 600003, type: 'Double'),
      Status(id: 600004, type: 'Two And Half'),
      Status(id: 600005, type: 'Three'),
      Status(id: 600006, type: 'Not Applicable'),
    ];
  }

  List<Status> GetPredefinedCallSheetTypes() {
    return [
      Status(id: 600001, type: 'Single'),
      Status(id: 600002, type: 'One And Half'),
      Status(id: 600003, type: 'Double'),
      Status(id: 600004, type: 'Two And Half'),
      Status(id: 600005, type: 'Three'),
      Status(id: 600006, type: 'Not Applicable'),
    ];
  }

  List<Status> GetAllPredefinedCallTimeValueTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 5500001, type: 'NA'),
      Status(id: 5500002, type: 'OC'),
      Status(id: 5500003, type: 'NR'),
      Status(id: 5500004, type: 'Time'),
    ];
  }

  List<Status> GetWithBlankPredefinedCallTimeValueTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 5500001, type: 'NA'),
      Status(id: 5500002, type: 'OC'),
      Status(id: 5500003, type: 'NR'),
      Status(id: 5500004, type: 'Time'),
    ];
  }

  List<Status> GetPredefinedCallTimeValueTypes() {
    return [
      Status(id: 5500001, type: 'NA'),
      Status(id: 5500002, type: 'OC'),
      Status(id: 5500003, type: 'NR'),
      Status(id: 5500004, type: 'Time'),
    ];
  }

  List<Status> GetAllPredefinedCommitmentTaskPriorityTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 8900001, type: 'High'),
      Status(id: 8900002, type: 'Medium'),
      Status(id: 8900003, type: 'Low'),
    ];
  }

  List<Status> GetWithBlankPredefinedCommitmentTaskPriorityTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 8900001, type: 'High'),
      Status(id: 8900002, type: 'Medium'),
      Status(id: 8900003, type: 'Low'),
    ];
  }

  List<Status> GetPredefinedCommitmentTaskPriorityTypes() {
    return [
      Status(id: 8900001, type: 'High'),
      Status(id: 8900002, type: 'Medium'),
      Status(id: 8900003, type: 'Low'),
    ];
  }

  List<Status> GetAllPredefinedCommitmentTaskRecurrenceEndTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 8300001, type: 'No End Date'),
      Status(id: 8300002, type: 'Specific Date'),
      Status(id: 8300003, type: 'Contract Expiration'),
      Status(id: 8300004, type: 'After Nth Occurrence'),
    ];
  }

  List<Status> GetWithBlankPredefinedCommitmentTaskRecurrenceEndTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 8300001, type: 'No End Date'),
      Status(id: 8300002, type: 'Specific Date'),
      Status(id: 8300003, type: 'Contract Expiration'),
      Status(id: 8300004, type: 'After Nth Occurrence'),
    ];
  }

  List<Status> GetPredefinedCommitmentTaskRecurrenceEndTypes() {
    return [
      Status(id: 8300001, type: 'No End Date'),
      Status(id: 8300002, type: 'Specific Date'),
      Status(id: 8300003, type: 'Contract Expiration'),
      Status(id: 8300004, type: 'After Nth Occurrence'),
    ];
  }

  List<Status> GetAllPredefinedCommitmentTaskStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 8800001, type: 'No Started'),
      Status(id: 8800002, type: 'Active'),
      Status(id: 8800003, type: 'Completed'),
      Status(id: 8800004, type: 'Ignored'),
      Status(id: 8800005, type: 'Will Do Later'),
    ];
  }

  List<Status> GetWithBlankPredefinedCommitmentTaskStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 8800001, type: 'No Started'),
      Status(id: 8800002, type: 'Active'),
      Status(id: 8800003, type: 'Completed'),
      Status(id: 8800004, type: 'Ignored'),
      Status(id: 8800005, type: 'Will Do Later'),
    ];
  }

  List<Status> GetPredefinedCommitmentTaskStatusTypes() {
    return [
      Status(id: 8800001, type: 'No Started'),
      Status(id: 8800002, type: 'Active'),
      Status(id: 8800003, type: 'Completed'),
      Status(id: 8800004, type: 'Ignored'),
      Status(id: 8800005, type: 'Will Do Later'),
    ];
  }

  List<Status> GetAllPredefinedCompanyTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 1700001, type: 'System'),
      Status(id: 1700100, type: 'Production House'),
    ];
  }

  List<Status> GetWithBlankPredefinedCompanyTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 1700001, type: 'System'),
      Status(id: 1700100, type: 'Production House'),
    ];
  }

  List<Status> GetPredefinedCompanyTypes() {
    return [
      Status(id: 1700001, type: 'System'),
      Status(id: 1700100, type: 'Production House'),
    ];
  }

  List<Status> GetAllPredefinedContractAssignmentStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 4400001, type: 'Un Assigned'),
      Status(id: 4400002, type: 'Assigned'),
      Status(id: 4400003, type: 'Not Needed'),
    ];
  }

  List<Status> GetWithBlankPredefinedContractAssignmentStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 4400001, type: 'Un Assigned'),
      Status(id: 4400002, type: 'Assigned'),
      Status(id: 4400003, type: 'Not Needed'),
    ];
  }

  List<Status> GetPredefinedContractAssignmentStatusTypes() {
    return [
      Status(id: 4400001, type: 'Un Assigned'),
      Status(id: 4400002, type: 'Assigned'),
      Status(id: 4400003, type: 'Not Needed'),
    ];
  }

  List<Status> GetAllPredefinedContractFieldWordTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 1, type: 'Text'),
      Status(id: 2, type: 'Table'),
      Status(id: 3, type: 'Image'),
    ];
  }

  List<Status> GetWithBlankPredefinedContractFieldWordTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 1, type: 'Text'),
      Status(id: 2, type: 'Table'),
      Status(id: 3, type: 'Image'),
    ];
  }

  List<Status> GetPredefinedContractFieldWordTypes() {
    return [
      Status(id: 1, type: 'Text'),
      Status(id: 2, type: 'Table'),
      Status(id: 3, type: 'Image'),
    ];
  }

  List<Status> GetAllPredefinedContractFileIndexTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 7400001, type: 'Latest'),
      Status(id: 7400002, type: 'Versioned'),
      Status(id: 7400003, type: 'Attachment'),
    ];
  }

  List<Status> GetWithBlankPredefinedContractFileIndexTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 7400001, type: 'Latest'),
      Status(id: 7400002, type: 'Versioned'),
      Status(id: 7400003, type: 'Attachment'),
    ];
  }

  List<Status> GetPredefinedContractFileIndexTypes() {
    return [
      Status(id: 7400001, type: 'Latest'),
      Status(id: 7400002, type: 'Versioned'),
      Status(id: 7400003, type: 'Attachment'),
    ];
  }

  List<Status> GetAllPredefinedContractForTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 5200001, type: 'General'),
      Status(id: 5200002, type: 'Artist'),
      Status(id: 5200003, type: 'Technician'),
      Status(id: 5200004, type: 'Equipment'),
      Status(id: 5200005, type: 'Vendor'),
      Status(id: 5200006, type: 'Movie Artist'),
      Status(id: 5200007, type: 'Movie Technician'),
      Status(id: 5200008, type: 'Movie Equipment'),
      Status(id: 5200009, type: 'Movie Vendor'),
      Status(id: 5200010, type: 'Movie Property'),
      Status(id: 5200011, type: 'Property'),
      Status(id: 5200012, type: 'Movie Location'),
    ];
  }

  List<Status> GetWithBlankPredefinedContractForTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 5200001, type: 'General'),
      Status(id: 5200002, type: 'Artist'),
      Status(id: 5200003, type: 'Technician'),
      Status(id: 5200004, type: 'Equipment'),
      Status(id: 5200005, type: 'Vendor'),
      Status(id: 5200006, type: 'Movie Artist'),
      Status(id: 5200007, type: 'Movie Technician'),
      Status(id: 5200008, type: 'Movie Equipment'),
      Status(id: 5200009, type: 'Movie Vendor'),
      Status(id: 5200010, type: 'Movie Property'),
      Status(id: 5200011, type: 'Property'),
      Status(id: 5200012, type: 'Movie Location'),
    ];
  }

  List<Status> GetPredefinedContractForTypes() {
    return [
      Status(id: 5200001, type: 'General'),
      Status(id: 5200002, type: 'Artist'),
      Status(id: 5200003, type: 'Technician'),
      Status(id: 5200004, type: 'Equipment'),
      Status(id: 5200005, type: 'Vendor'),
      Status(id: 5200006, type: 'Movie Artist'),
      Status(id: 5200007, type: 'Movie Technician'),
      Status(id: 5200008, type: 'Movie Equipment'),
      Status(id: 5200009, type: 'Movie Vendor'),
      Status(id: 5200010, type: 'Movie Property'),
      Status(id: 5200011, type: 'Property'),
      Status(id: 5200012, type: 'Movie Location'),
    ];
  }

  List<Status> GetAllPredefinedContractStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 4500001, type: 'Not Started'),
      Status(id: 4500002, type: 'In Progress'),
      Status(id: 4500003, type: 'Signature In Progress'),
      Status(id: 4500004, type: 'Signed'),
      Status(id: 4500005, type: 'Cancelled'),
    ];
  }

  List<Status> GetWithBlankPredefinedContractStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 4500001, type: 'Not Started'),
      Status(id: 4500002, type: 'In Progress'),
      Status(id: 4500003, type: 'Signature In Progress'),
      Status(id: 4500004, type: 'Signed'),
      Status(id: 4500005, type: 'Cancelled'),
    ];
  }

  List<Status> GetPredefinedContractStatusTypes() {
    return [
      Status(id: 4500001, type: 'Not Started'),
      Status(id: 4500002, type: 'In Progress'),
      Status(id: 4500003, type: 'Signature In Progress'),
      Status(id: 4500004, type: 'Signed'),
      Status(id: 4500005, type: 'Cancelled'),
    ];
  }

  List<Status> GetAllPredefinedContractTemplateForTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 5100001, type: 'Artist Type'),
      Status(id: 5100002, type: 'Technician Type'),
      Status(id: 5100003, type: 'Equipment Type'),
      Status(id: 5100004, type: 'Vendor Type'),
      Status(id: 5100005, type: 'Property Type'),
    ];
  }

  List<Status> GetWithBlankPredefinedContractTemplateForTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 5100001, type: 'Artist Type'),
      Status(id: 5100002, type: 'Technician Type'),
      Status(id: 5100003, type: 'Equipment Type'),
      Status(id: 5100004, type: 'Vendor Type'),
      Status(id: 5100005, type: 'Property Type'),
    ];
  }

  List<Status> GetPredefinedContractTemplateForTypes() {
    return [
      Status(id: 5100001, type: 'Artist Type'),
      Status(id: 5100002, type: 'Technician Type'),
      Status(id: 5100003, type: 'Equipment Type'),
      Status(id: 5100004, type: 'Vendor Type'),
      Status(id: 5100005, type: 'Property Type'),
    ];
  }

  List<Status> GetAllPredefinedCurrencyTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 5600001, type: 'INR'),
      Status(id: 5600002, type: 'USD'),
    ];
  }

  List<Status> GetWithBlankPredefinedCurrencyTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 5600001, type: 'INR'),
      Status(id: 5600002, type: 'USD'),
    ];
  }

  List<Status> GetPredefinedCurrencyTypes() {
    return [
      Status(id: 5600001, type: 'INR'),
      Status(id: 5600002, type: 'USD'),
    ];
  }

  List<Status> GetAllPredefinedDepartmentTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 8000001, type: 'Custom'),
      Status(id: 8000002, type: 'Costume'),
      Status(id: 8000003, type: 'Art'),
    ];
  }

  List<Status> GetWithBlankPredefinedDepartmentTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 8000001, type: 'Custom'),
      Status(id: 8000002, type: 'Costume'),
      Status(id: 8000003, type: 'Art'),
    ];
  }

  List<Status> GetPredefinedDepartmentTypes() {
    return [
      Status(id: 8000001, type: 'Custom'),
      Status(id: 8000002, type: 'Costume'),
      Status(id: 8000003, type: 'Art'),
    ];
  }

  List<Status> GetAllPredefinedDigitalSignatureTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 6000001, type: 'Docusign'),
    ];
  }

  List<Status> GetWithBlankPredefinedDigitalSignatureTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 6000001, type: 'Docusign'),
    ];
  }

  List<Status> GetPredefinedDigitalSignatureTypes() {
    return [
      Status(id: 6000001, type: 'Docusign'),
    ];
  }

  List<Status> GetAllPredefinedEmailNotificationStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 5800001, type: 'Not Needed'),
      Status(id: 5800002, type: 'Scheduled'),
      Status(id: 5800003, type: 'Sent'),
      Status(id: 5800004, type: 'Confirmed'),
      Status(id: 5800005, type: 'Not Confirmed'),
      Status(id: 5800006, type: 'Viewed And Not Confirmed'),
      Status(id: 5800007, type: 'Declined'),
      Status(id: 5800008, type: 'Notification Error'),
      Status(id: 5800009, type: 'Server Not Configured'),
    ];
  }

  List<Status> GetWithBlankPredefinedEmailNotificationStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 5800001, type: 'Not Needed'),
      Status(id: 5800002, type: 'Scheduled'),
      Status(id: 5800003, type: 'Sent'),
      Status(id: 5800004, type: 'Confirmed'),
      Status(id: 5800005, type: 'Not Confirmed'),
      Status(id: 5800006, type: 'Viewed And Not Confirmed'),
      Status(id: 5800007, type: 'Declined'),
      Status(id: 5800008, type: 'Notification Error'),
      Status(id: 5800009, type: 'Server Not Configured'),
    ];
  }

  List<Status> GetPredefinedEmailNotificationStatusTypes() {
    return [
      Status(id: 5800001, type: 'Not Needed'),
      Status(id: 5800002, type: 'Scheduled'),
      Status(id: 5800003, type: 'Sent'),
      Status(id: 5800004, type: 'Confirmed'),
      Status(id: 5800005, type: 'Not Confirmed'),
      Status(id: 5800006, type: 'Viewed And Not Confirmed'),
      Status(id: 5800007, type: 'Declined'),
      Status(id: 5800008, type: 'Notification Error'),
      Status(id: 5800009, type: 'Server Not Configured'),
    ];
  }

  List<Status> GetAllPredefinedEquipmentForTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 8600001, type: 'Common'),
      Status(id: 8600002, type: 'Movie Artist'),
      Status(id: 8600003, type: 'Movie Technician'),
      Status(id: 8600004, type: 'Movie Vendor'),
    ];
  }

  List<Status> GetWithBlankPredefinedEquipmentForTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 8600001, type: 'Common'),
      Status(id: 8600002, type: 'Movie Artist'),
      Status(id: 8600003, type: 'Movie Technician'),
      Status(id: 8600004, type: 'Movie Vendor'),
    ];
  }

  List<Status> GetPredefinedEquipmentForTypes() {
    return [
      Status(id: 8600001, type: 'Common'),
      Status(id: 8600002, type: 'Movie Artist'),
      Status(id: 8600003, type: 'Movie Technician'),
      Status(id: 8600004, type: 'Movie Vendor'),
    ];
  }

  List<Status> GetAllPredefinedEquipmentGroupTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 3700001, type: 'Custom'),
      Status(id: 3700002, type: 'Camera'),
    ];
  }

  List<Status> GetWithBlankPredefinedEquipmentGroupTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 3700001, type: 'Custom'),
      Status(id: 3700002, type: 'Camera'),
    ];
  }

  List<Status> GetPredefinedEquipmentGroupTypes() {
    return [
      Status(id: 3700001, type: 'Custom'),
      Status(id: 3700002, type: 'Camera'),
    ];
  }

  List<Status> GetAllPredefinedEquipmentTransactionTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 9400001, type: 'Received'),
      Status(id: 9400002, type: 'Returned'),
    ];
  }

  List<Status> GetWithBlankPredefinedEquipmentTransactionTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 9400001, type: 'Received'),
      Status(id: 9400002, type: 'Returned'),
    ];
  }

  List<Status> GetPredefinedEquipmentTransactionTypes() {
    return [
      Status(id: 9400001, type: 'Received'),
      Status(id: 9400002, type: 'Returned'),
    ];
  }

  List<Status> GetAllPredefinedEquipmentTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 3800001, type: 'Custom'),
      Status(id: 3800002, type: 'Digicam'),
    ];
  }

  List<Status> GetWithBlankPredefinedEquipmentTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 3800001, type: 'Custom'),
      Status(id: 3800002, type: 'Digicam'),
    ];
  }

  List<Status> GetPredefinedEquipmentTypes() {
    return [
      Status(id: 3800001, type: 'Custom'),
      Status(id: 3800002, type: 'Digicam'),
    ];
  }

  List<Status> GetAllPredefinedExpensePaymentStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 6300001, type: 'Not Paid'),
      Status(id: 6300002, type: 'Paid'),
    ];
  }

  List<Status> GetWithBlankPredefinedExpensePaymentStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 6300001, type: 'Not Paid'),
      Status(id: 6300002, type: 'Paid'),
    ];
  }

  List<Status> GetPredefinedExpensePaymentStatusTypes() {
    return [
      Status(id: 6300001, type: 'Not Paid'),
      Status(id: 6300002, type: 'Paid'),
    ];
  }

  List<Status> GetAllPredefinedExpensePaymentTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 6200001, type: 'Cash'),
      Status(id: 6200002, type: 'Cheque'),
      Status(id: 6200003, type: 'Bank Transfer'),
    ];
  }

  List<Status> GetWithBlankPredefinedExpensePaymentTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 6200001, type: 'Cash'),
      Status(id: 6200002, type: 'Cheque'),
      Status(id: 6200003, type: 'Bank Transfer'),
    ];
  }

  List<Status> GetPredefinedExpensePaymentTypes() {
    return [
      Status(id: 6200001, type: 'Cash'),
      Status(id: 6200002, type: 'Cheque'),
      Status(id: 6200003, type: 'Bank Transfer'),
    ];
  }

  List<Status> GetAllPredefinedExpenseSubTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 701000, type: 'Other'),
    ];
  }

  List<Status> GetWithBlankPredefinedExpenseSubTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 701000, type: 'Other'),
    ];
  }

  List<Status> GetPredefinedExpenseSubTypes() {
    return [
      Status(id: 701000, type: 'Other'),
    ];
  }

  List<Status> GetAllPredefinedExpenseTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 800100, type: 'Bata'),
      Status(id: 800101, type: 'Per Day Expense'),
      Status(id: 800102, type: 'Art Department'),
      Status(id: 800103, type: 'Transport'),
      Status(id: 800104, type: 'Costume'),
      Status(id: 800105, type: 'Catering'),
      Status(id: 800106, type: 'Vehicles'),
      Status(id: 800200, type: 'Dubbing'),
      Status(id: 800201, type: 'DI'),
      Status(id: 800202, type: 'VFX'),
      Status(id: 800203, type: 'SFX'),
      Status(id: 800204, type: 'Mixing And Atmos'),
      Status(id: 800205, type: 'Censor'),
      Status(id: 800206, type: 'Animal Permission'),
      Status(id: 801000, type: 'Other'),
    ];
  }

  List<Status> GetWithBlankPredefinedExpenseTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 800100, type: 'Bata'),
      Status(id: 800101, type: 'Per Day Expense'),
      Status(id: 800102, type: 'Art Department'),
      Status(id: 800103, type: 'Transport'),
      Status(id: 800104, type: 'Costume'),
      Status(id: 800105, type: 'Catering'),
      Status(id: 800106, type: 'Vehicles'),
      Status(id: 800200, type: 'Dubbing'),
      Status(id: 800201, type: 'DI'),
      Status(id: 800202, type: 'VFX'),
      Status(id: 800203, type: 'SFX'),
      Status(id: 800204, type: 'Mixing And Atmos'),
      Status(id: 800205, type: 'Censor'),
      Status(id: 800206, type: 'Animal Permission'),
      Status(id: 801000, type: 'Other'),
    ];
  }

  List<Status> GetPredefinedExpenseTypes() {
    return [
      Status(id: 800100, type: 'Bata'),
      Status(id: 800101, type: 'Per Day Expense'),
      Status(id: 800102, type: 'Art Department'),
      Status(id: 800103, type: 'Transport'),
      Status(id: 800104, type: 'Costume'),
      Status(id: 800105, type: 'Catering'),
      Status(id: 800106, type: 'Vehicles'),
      Status(id: 800200, type: 'Dubbing'),
      Status(id: 800201, type: 'DI'),
      Status(id: 800202, type: 'VFX'),
      Status(id: 800203, type: 'SFX'),
      Status(id: 800204, type: 'Mixing And Atmos'),
      Status(id: 800205, type: 'Censor'),
      Status(id: 800206, type: 'Animal Permission'),
      Status(id: 801000, type: 'Other'),
    ];
  }

  List<Status> GetAllPredefinedFieldControlTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 2400001, type: 'Single Line Text'),
      Status(id: 2400002, type: 'Multi Line Text'),
      Status(id: 2400003, type: 'Check Box'),
      Status(id: 2400004, type: 'Single Selection Combo'),
      Status(id: 2400005, type: 'Multiple Selection Combo'),
      Status(id: 2400006, type: 'Integer'),
      Status(id: 2400007, type: 'Positive Integer'),
      Status(id: 2400008, type: 'Double'),
      Status(id: 2400009, type: 'Positive Double'),
      Status(id: 2400010, type: 'Any Date Time'),
      Status(id: 2400011, type: 'Future Date Time'),
      Status(id: 2400012, type: 'Any Date'),
      Status(id: 2400013, type: 'Future Date'),
      Status(id: 2400014, type: 'Any Time'),
    ];
  }

  List<Status> GetWithBlankPredefinedFieldControlTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 2400001, type: 'Single Line Text'),
      Status(id: 2400002, type: 'Multi Line Text'),
      Status(id: 2400003, type: 'Check Box'),
      Status(id: 2400004, type: 'Single Selection Combo'),
      Status(id: 2400005, type: 'Multiple Selection Combo'),
      Status(id: 2400006, type: 'Integer'),
      Status(id: 2400007, type: 'Positive Integer'),
      Status(id: 2400008, type: 'Double'),
      Status(id: 2400009, type: 'Positive Double'),
      Status(id: 2400010, type: 'Any Date Time'),
      Status(id: 2400011, type: 'Future Date Time'),
      Status(id: 2400012, type: 'Any Date'),
      Status(id: 2400013, type: 'Future Date'),
      Status(id: 2400014, type: 'Any Time'),
    ];
  }

  List<Status> GetPredefinedFieldControlTypes() {
    return [
      Status(id: 2400001, type: 'Single Line Text'),
      Status(id: 2400002, type: 'Multi Line Text'),
      Status(id: 2400003, type: 'Check Box'),
      Status(id: 2400004, type: 'Single Selection Combo'),
      Status(id: 2400005, type: 'Multiple Selection Combo'),
      Status(id: 2400006, type: 'Integer'),
      Status(id: 2400007, type: 'Positive Integer'),
      Status(id: 2400008, type: 'Double'),
      Status(id: 2400009, type: 'Positive Double'),
      Status(id: 2400010, type: 'Any Date Time'),
      Status(id: 2400011, type: 'Future Date Time'),
      Status(id: 2400012, type: 'Any Date'),
      Status(id: 2400013, type: 'Future Date'),
      Status(id: 2400014, type: 'Any Time'),
    ];
  }

  List<Status> GetAllPredefinedFieldPopulatorTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 2600001, type: 'None'),
      Status(id: 2600002, type: 'Json String List From Url'),
      Status(id: 2600003, type: 'String List'),
    ];
  }

  List<Status> GetWithBlankPredefinedFieldPopulatorTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 2600001, type: 'None'),
      Status(id: 2600002, type: 'Json String List From Url'),
      Status(id: 2600003, type: 'String List'),
    ];
  }

  List<Status> GetPredefinedFieldPopulatorTypes() {
    return [
      Status(id: 2600001, type: 'None'),
      Status(id: 2600002, type: 'Json String List From Url'),
      Status(id: 2600003, type: 'String List'),
    ];
  }

  List<Status> GetAllPredefinedFieldTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 2500001, type: 'String'),
      Status(id: 2500002, type: 'String List'),
      Status(id: 2500010, type: 'Integer'),
      Status(id: 2500011, type: 'Integer List'),
      Status(id: 2500020, type: 'Double'),
      Status(id: 2500021, type: 'Double List'),
      Status(id: 2500030, type: 'Boolean'),
      Status(id: 2500040, type: 'Date Time'),
    ];
  }

  List<Status> GetWithBlankPredefinedFieldTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 2500001, type: 'String'),
      Status(id: 2500002, type: 'String List'),
      Status(id: 2500010, type: 'Integer'),
      Status(id: 2500011, type: 'Integer List'),
      Status(id: 2500020, type: 'Double'),
      Status(id: 2500021, type: 'Double List'),
      Status(id: 2500030, type: 'Boolean'),
      Status(id: 2500040, type: 'Date Time'),
    ];
  }

  List<Status> GetPredefinedFieldTypes() {
    return [
      Status(id: 2500001, type: 'String'),
      Status(id: 2500002, type: 'String List'),
      Status(id: 2500010, type: 'Integer'),
      Status(id: 2500011, type: 'Integer List'),
      Status(id: 2500020, type: 'Double'),
      Status(id: 2500021, type: 'Double List'),
      Status(id: 2500030, type: 'Boolean'),
      Status(id: 2500040, type: 'Date Time'),
    ];
  }

  List<Status> GetAllPredefinedFileAttachmentShowModeTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 1001, type: 'Company'),
      Status(id: 1002, type: 'Movie'),
    ];
  }

  List<Status> GetWithBlankPredefinedFileAttachmentShowModeTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 1001, type: 'Company'),
      Status(id: 1002, type: 'Movie'),
    ];
  }

  List<Status> GetPredefinedFileAttachmentShowModeTypes() {
    return [
      Status(id: 1001, type: 'Company'),
      Status(id: 1002, type: 'Movie'),
    ];
  }

  List<Status> GetAllPredefinedFileStorageTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 3400001, type: 'Report Server File Storage'),
      Status(id: 3400002, type: 'Profile Picture File Storage'),
      Status(id: 3400003, type: 'Letter Template File Storage'),
      Status(id: 3400004, type: 'Contract File Storage'),
      Status(id: 3400005, type: 'File Attachment File Storage'),
      Status(id: 3400006, type: 'Statement File Storage'),
      Status(id: 3400007, type: 'Ml Model File Storage'),
      Status(
          id: 3400008, type: 'Resource Identification Document File Storage'),
      Status(id: 3400009, type: 'Resource Biometric Record File Storage'),
    ];
  }

  List<Status> GetWithBlankPredefinedFileStorageTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 3400001, type: 'Report Server File Storage'),
      Status(id: 3400002, type: 'Profile Picture File Storage'),
      Status(id: 3400003, type: 'Letter Template File Storage'),
      Status(id: 3400004, type: 'Contract File Storage'),
      Status(id: 3400005, type: 'File Attachment File Storage'),
      Status(id: 3400006, type: 'Statement File Storage'),
      Status(id: 3400007, type: 'Ml Model File Storage'),
      Status(
          id: 3400008, type: 'Resource Identification Document File Storage'),
      Status(id: 3400009, type: 'Resource Biometric Record File Storage'),
    ];
  }

  List<Status> GetPredefinedFileStorageTypes() {
    return [
      Status(id: 3400001, type: 'Report Server File Storage'),
      Status(id: 3400002, type: 'Profile Picture File Storage'),
      Status(id: 3400003, type: 'Letter Template File Storage'),
      Status(id: 3400004, type: 'Contract File Storage'),
      Status(id: 3400005, type: 'File Attachment File Storage'),
      Status(id: 3400006, type: 'Statement File Storage'),
      Status(id: 3400007, type: 'Ml Model File Storage'),
      Status(
          id: 3400008, type: 'Resource Identification Document File Storage'),
      Status(id: 3400009, type: 'Resource Biometric Record File Storage'),
    ];
  }

  List<Status> GetAllPredefinedGenreTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 900001, type: 'Action'),
      Status(id: 900002, type: 'Adventure'),
      Status(id: 900003, type: 'Animated'),
      Status(id: 900004, type: 'Comedy'),
      Status(id: 900005, type: 'Drama'),
      Status(id: 900006, type: 'Fantasy'),
      Status(id: 900007, type: 'Historical'),
      Status(id: 900008, type: 'Horror'),
      Status(id: 900009, type: 'Musical'),
      Status(id: 900010, type: 'Noir'),
      Status(id: 900011, type: 'Romance'),
      Status(id: 900012, type: 'Science'),
      Status(id: 900013, type: 'Thriller'),
      Status(id: 900014, type: 'Western'),
      Status(id: 900015, type: 'Mystry'),
      Status(id: 900016, type: 'Sports'),
      Status(id: 900017, type: 'Sci Fi'),
      Status(id: 900018, type: 'Other'),
    ];
  }

  List<Status> GetWithBlankPredefinedGenreTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 900001, type: 'Action'),
      Status(id: 900002, type: 'Adventure'),
      Status(id: 900003, type: 'Animated'),
      Status(id: 900004, type: 'Comedy'),
      Status(id: 900005, type: 'Drama'),
      Status(id: 900006, type: 'Fantasy'),
      Status(id: 900007, type: 'Historical'),
      Status(id: 900008, type: 'Horror'),
      Status(id: 900009, type: 'Musical'),
      Status(id: 900010, type: 'Noir'),
      Status(id: 900011, type: 'Romance'),
      Status(id: 900012, type: 'Science'),
      Status(id: 900013, type: 'Thriller'),
      Status(id: 900014, type: 'Western'),
      Status(id: 900015, type: 'Mystry'),
      Status(id: 900016, type: 'Sports'),
      Status(id: 900017, type: 'Sci Fi'),
      Status(id: 900018, type: 'Other'),
    ];
  }

  List<Status> GetPredefinedGenreTypes() {
    return [
      Status(id: 900001, type: 'Action'),
      Status(id: 900002, type: 'Adventure'),
      Status(id: 900003, type: 'Animated'),
      Status(id: 900004, type: 'Comedy'),
      Status(id: 900005, type: 'Drama'),
      Status(id: 900006, type: 'Fantasy'),
      Status(id: 900007, type: 'Historical'),
      Status(id: 900008, type: 'Horror'),
      Status(id: 900009, type: 'Musical'),
      Status(id: 900010, type: 'Noir'),
      Status(id: 900011, type: 'Romance'),
      Status(id: 900012, type: 'Science'),
      Status(id: 900013, type: 'Thriller'),
      Status(id: 900014, type: 'Western'),
      Status(id: 900015, type: 'Mystry'),
      Status(id: 900016, type: 'Sports'),
      Status(id: 900017, type: 'Sci Fi'),
      Status(id: 900018, type: 'Other'),
    ];
  }

  List<Status> GetAllPredefinedHasAdditionCountTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 0, type: 'Yes'),
      Status(id: 1, type: 'No'),
    ];
  }

  List<Status> GetWithBlankPredefinedHasAdditionCountTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 0, type: 'Yes'),
      Status(id: 1, type: 'No'),
    ];
  }

  List<Status> GetPredefinedHasAdditionCountTypes() {
    return [
      Status(id: 0, type: 'Yes'),
      Status(id: 1, type: 'No'),
    ];
  }

  List<Status> GetAllPredefinedIdentificationDocumentTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 9200001, type: 'Drivers License'),
      Status(id: 9200002, type: 'Aadhar Card'),
      Status(id: 9200003, type: 'Pan Card'),
    ];
  }

  List<Status> GetWithBlankPredefinedIdentificationDocumentTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 9200001, type: 'Drivers License'),
      Status(id: 9200002, type: 'Aadhar Card'),
      Status(id: 9200003, type: 'Pan Card'),
    ];
  }

  List<Status> GetPredefinedIdentificationDocumentTypes() {
    return [
      Status(id: 9200001, type: 'Drivers License'),
      Status(id: 9200002, type: 'Aadhar Card'),
      Status(id: 9200003, type: 'Pan Card'),
    ];
  }

  List<Status> GetAllPredefinedJobOrReportTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 3100001, type: 'None'),
      Status(id: 3100002, type: 'User List'),
    ];
  }

  List<Status> GetWithBlankPredefinedJobOrReportTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 3100001, type: 'None'),
      Status(id: 3100002, type: 'User List'),
    ];
  }

  List<Status> GetPredefinedJobOrReportTypes() {
    return [
      Status(id: 3100001, type: 'None'),
      Status(id: 3100002, type: 'User List'),
    ];
  }

  List<Status> GetAllPredefinedJobOutputFormatTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 0, type: 'View'),
      Status(id: 1, type: 'Print'),
      Status(id: 2, type: 'Pdf'),
      Status(id: 3, type: 'Rtf'),
      Status(id: 4, type: 'Xls'),
      Status(id: 5, type: 'Xlsx'),
      Status(id: 6, type: 'Docx'),
      Status(id: 7, type: 'Odt'),
      Status(id: 8, type: 'Ods'),
      Status(id: 9, type: 'Pptx'),
      Status(id: 10, type: 'Csv'),
      Status(id: 11, type: 'Html'),
      Status(id: 12, type: 'Xhtml'),
      Status(id: 13, type: 'Xml'),
      Status(id: 14, type: 'Jrprint'),
      Status(id: 15, type: 'Zip'),
      Status(id: 16, type: 'Custom'),
      Status(id: 17, type: 'Datasource'),
    ];
  }

  List<Status> GetWithBlankPredefinedJobOutputFormatTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 0, type: 'View'),
      Status(id: 1, type: 'Print'),
      Status(id: 2, type: 'Pdf'),
      Status(id: 3, type: 'Rtf'),
      Status(id: 4, type: 'Xls'),
      Status(id: 5, type: 'Xlsx'),
      Status(id: 6, type: 'Docx'),
      Status(id: 7, type: 'Odt'),
      Status(id: 8, type: 'Ods'),
      Status(id: 9, type: 'Pptx'),
      Status(id: 10, type: 'Csv'),
      Status(id: 11, type: 'Html'),
      Status(id: 12, type: 'Xhtml'),
      Status(id: 13, type: 'Xml'),
      Status(id: 14, type: 'Jrprint'),
      Status(id: 15, type: 'Zip'),
      Status(id: 16, type: 'Custom'),
      Status(id: 17, type: 'Datasource'),
    ];
  }

  List<Status> GetPredefinedJobOutputFormatTypes() {
    return [
      Status(id: 0, type: 'View'),
      Status(id: 1, type: 'Print'),
      Status(id: 2, type: 'Pdf'),
      Status(id: 3, type: 'Rtf'),
      Status(id: 4, type: 'Xls'),
      Status(id: 5, type: 'Xlsx'),
      Status(id: 6, type: 'Docx'),
      Status(id: 7, type: 'Odt'),
      Status(id: 8, type: 'Ods'),
      Status(id: 9, type: 'Pptx'),
      Status(id: 10, type: 'Csv'),
      Status(id: 11, type: 'Html'),
      Status(id: 12, type: 'Xhtml'),
      Status(id: 13, type: 'Xml'),
      Status(id: 14, type: 'Jrprint'),
      Status(id: 15, type: 'Zip'),
      Status(id: 16, type: 'Custom'),
      Status(id: 17, type: 'Datasource'),
    ];
  }

  List<Status> GetAllPredefinedJobStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 2200001, type: 'Submitted'),
      Status(id: 2200002, type: 'Running'),
      Status(id: 2200003, type: 'Error'),
      Status(id: 2200004, type: 'Completed'),
      Status(id: 2200005, type: 'Waiting'),
      Status(id: 2200006, type: 'Cancelled'),
      Status(id: 2200007, type: 'Skipped'),
      Status(id: 2200008, type: 'None'),
    ];
  }

  List<Status> GetWithBlankPredefinedJobStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 2200001, type: 'Submitted'),
      Status(id: 2200002, type: 'Running'),
      Status(id: 2200003, type: 'Error'),
      Status(id: 2200004, type: 'Completed'),
      Status(id: 2200005, type: 'Waiting'),
      Status(id: 2200006, type: 'Cancelled'),
      Status(id: 2200007, type: 'Skipped'),
      Status(id: 2200008, type: 'None'),
    ];
  }

  List<Status> GetPredefinedJobStatusTypes() {
    return [
      Status(id: 2200001, type: 'Submitted'),
      Status(id: 2200002, type: 'Running'),
      Status(id: 2200003, type: 'Error'),
      Status(id: 2200004, type: 'Completed'),
      Status(id: 2200005, type: 'Waiting'),
      Status(id: 2200006, type: 'Cancelled'),
      Status(id: 2200007, type: 'Skipped'),
      Status(id: 2200008, type: 'None'),
    ];
  }

  List<Status> GetAllPredefinedJobTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 2100001, type: 'None'),
      Status(id: 2100002, type: 'Report'),
      Status(id: 2100003, type: 'Job'),
      Status(id: 2100004, type: 'User List'),
      Status(id: 2100005, type: 'Disable Movie Processor'),
      Status(id: 2100006, type: 'Wakeup Notification Processor'),
      Status(id: 2100007, type: 'Contract Content Index Generator'),
      Status(id: 2100008, type: 'Movie Status Notification Processor'),
      Status(
          id: 2100009, type: 'Save Movie Shoot Day Summary Session Processor'),
    ];
  }

  List<Status> GetWithBlankPredefinedJobTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 2100001, type: 'None'),
      Status(id: 2100002, type: 'Report'),
      Status(id: 2100003, type: 'Job'),
      Status(id: 2100004, type: 'User List'),
      Status(id: 2100005, type: 'Disable Movie Processor'),
      Status(id: 2100006, type: 'Wakeup Notification Processor'),
      Status(id: 2100007, type: 'Contract Content Index Generator'),
      Status(id: 2100008, type: 'Movie Status Notification Processor'),
      Status(
          id: 2100009, type: 'Save Movie Shoot Day Summary Session Processor'),
    ];
  }

  List<Status> GetPredefinedJobTypes() {
    return [
      Status(id: 2100001, type: 'None'),
      Status(id: 2100002, type: 'Report'),
      Status(id: 2100003, type: 'Job'),
      Status(id: 2100004, type: 'User List'),
      Status(id: 2100005, type: 'Disable Movie Processor'),
      Status(id: 2100006, type: 'Wakeup Notification Processor'),
      Status(id: 2100007, type: 'Contract Content Index Generator'),
      Status(id: 2100008, type: 'Movie Status Notification Processor'),
      Status(
          id: 2100009, type: 'Save Movie Shoot Day Summary Session Processor'),
    ];
  }

  List<Status> GetAllPredefinedJobUsageForTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 5400001, type: 'All'),
      Status(id: 5400002, type: 'Super Admins'),
      Status(id: 5400003, type: 'Company Admins'),
    ];
  }

  List<Status> GetWithBlankPredefinedJobUsageForTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 5400001, type: 'All'),
      Status(id: 5400002, type: 'Super Admins'),
      Status(id: 5400003, type: 'Company Admins'),
    ];
  }

  List<Status> GetPredefinedJobUsageForTypes() {
    return [
      Status(id: 5400001, type: 'All'),
      Status(id: 5400002, type: 'Super Admins'),
      Status(id: 5400003, type: 'Company Admins'),
    ];
  }

  List<Status> GetAllPredefinedLedgerGroupTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 650000, type: 'Bank Accounts'),
      Status(id: 650001, type: 'Bank OCC A/c'),
      Status(id: 650002, type: 'Bank OD A/c'),
      Status(id: 650003, type: 'Branch / Divisions'),
      Status(id: 650004, type: 'Cash-in-Hand'),
      Status(id: 650005, type: 'Capital Account'),
      Status(id: 650006, type: 'Current Assets'),
      Status(id: 650007, type: 'Current Liabilities'),
      Status(id: 650008, type: 'Deposits (Asset)'),
      Status(id: 650009, type: 'Direct Expenses'),
      Status(id: 650010, type: 'Direct Incomes'),
      Status(id: 650011, type: 'Duties & Taxes'),
      Status(id: 650012, type: 'Expenses (Direct)'),
      Status(id: 650013, type: 'Expenses (Indirect)'),
      Status(id: 650014, type: 'Fixed Assets'),
      Status(id: 650015, type: 'Income (Direct)'),
      Status(id: 650016, type: 'Income (Indirect)'),
      Status(id: 650017, type: 'Indirect Expenses'),
      Status(id: 650018, type: 'Indirect Incomes'),
      Status(id: 650019, type: 'Investments'),
      Status(id: 650020, type: 'Loans & Advances (Asset)'),
      Status(id: 650021, type: 'Loans (Liability)'),
      Status(id: 650022, type: 'Misc. Expenses (ASSET)'),
      Status(id: 650023, type: 'Provisions'),
      Status(id: 650024, type: 'Purchase Accounts'),
      Status(id: 650025, type: 'Reserves & Surplus'),
      Status(id: 650026, type: 'Retained Earnings'),
      Status(id: 650027, type: 'Sales Accounts'),
      Status(id: 650028, type: 'Secured Loans'),
      Status(id: 650029, type: 'Stock-in-Hand'),
      Status(id: 650030, type: 'Sundry Creditors'),
      Status(id: 650031, type: 'Sundry Debtors'),
      Status(id: 650032, type: 'Suspense A/c'),
      Status(id: 650033, type: 'Unsecured Loans'),
    ];
  }

  List<Status> GetWithBlankPredefinedLedgerGroupTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 650000, type: 'Bank Accounts'),
      Status(id: 650001, type: 'Bank OCC A/c'),
      Status(id: 650002, type: 'Bank OD A/c'),
      Status(id: 650003, type: 'Branch / Divisions'),
      Status(id: 650004, type: 'Cash-in-Hand'),
      Status(id: 650005, type: 'Capital Account'),
      Status(id: 650006, type: 'Current Assets'),
      Status(id: 650007, type: 'Current Liabilities'),
      Status(id: 650008, type: 'Deposits (Asset)'),
      Status(id: 650009, type: 'Direct Expenses'),
      Status(id: 650010, type: 'Direct Incomes'),
      Status(id: 650011, type: 'Duties & Taxes'),
      Status(id: 650012, type: 'Expenses (Direct)'),
      Status(id: 650013, type: 'Expenses (Indirect)'),
      Status(id: 650014, type: 'Fixed Assets'),
      Status(id: 650015, type: 'Income (Direct)'),
      Status(id: 650016, type: 'Income (Indirect)'),
      Status(id: 650017, type: 'Indirect Expenses'),
      Status(id: 650018, type: 'Indirect Incomes'),
      Status(id: 650019, type: 'Investments'),
      Status(id: 650020, type: 'Loans & Advances (Asset)'),
      Status(id: 650021, type: 'Loans (Liability)'),
      Status(id: 650022, type: 'Misc. Expenses (ASSET)'),
      Status(id: 650023, type: 'Provisions'),
      Status(id: 650024, type: 'Purchase Accounts'),
      Status(id: 650025, type: 'Reserves & Surplus'),
      Status(id: 650026, type: 'Retained Earnings'),
      Status(id: 650027, type: 'Sales Accounts'),
      Status(id: 650028, type: 'Secured Loans'),
      Status(id: 650029, type: 'Stock-in-Hand'),
      Status(id: 650030, type: 'Sundry Creditors'),
      Status(id: 650031, type: 'Sundry Debtors'),
      Status(id: 650032, type: 'Suspense A/c'),
      Status(id: 650033, type: 'Unsecured Loans'),
    ];
  }

  List<Status> GetPredefinedLedgerGroupTypes() {
    return [
      Status(id: 650000, type: 'Bank Accounts'),
      Status(id: 650001, type: 'Bank OCC A/c'),
      Status(id: 650002, type: 'Bank OD A/c'),
      Status(id: 650003, type: 'Branch / Divisions'),
      Status(id: 650004, type: 'Cash-in-Hand'),
      Status(id: 650005, type: 'Capital Account'),
      Status(id: 650006, type: 'Current Assets'),
      Status(id: 650007, type: 'Current Liabilities'),
      Status(id: 650008, type: 'Deposits (Asset)'),
      Status(id: 650009, type: 'Direct Expenses'),
      Status(id: 650010, type: 'Direct Incomes'),
      Status(id: 650011, type: 'Duties & Taxes'),
      Status(id: 650012, type: 'Expenses (Direct)'),
      Status(id: 650013, type: 'Expenses (Indirect)'),
      Status(id: 650014, type: 'Fixed Assets'),
      Status(id: 650015, type: 'Income (Direct)'),
      Status(id: 650016, type: 'Income (Indirect)'),
      Status(id: 650017, type: 'Indirect Expenses'),
      Status(id: 650018, type: 'Indirect Incomes'),
      Status(id: 650019, type: 'Investments'),
      Status(id: 650020, type: 'Loans & Advances (Asset)'),
      Status(id: 650021, type: 'Loans (Liability)'),
      Status(id: 650022, type: 'Misc. Expenses (ASSET)'),
      Status(id: 650023, type: 'Provisions'),
      Status(id: 650024, type: 'Purchase Accounts'),
      Status(id: 650025, type: 'Reserves & Surplus'),
      Status(id: 650026, type: 'Retained Earnings'),
      Status(id: 650027, type: 'Sales Accounts'),
      Status(id: 650028, type: 'Secured Loans'),
      Status(id: 650029, type: 'Stock-in-Hand'),
      Status(id: 650030, type: 'Sundry Creditors'),
      Status(id: 650031, type: 'Sundry Debtors'),
      Status(id: 650032, type: 'Suspense A/c'),
      Status(id: 650033, type: 'Unsecured Loans'),
    ];
  }

  List<Status> GetAllPredefinedLocationSubTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 1000001, type: 'In City'),
      Status(id: 1000002, type: 'In State'),
      Status(id: 1000003, type: 'Out Of State'),
      Status(id: 1000004, type: 'Out Of Country'),
    ];
  }

  List<Status> GetWithBlankPredefinedLocationSubTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 1000001, type: 'In City'),
      Status(id: 1000002, type: 'In State'),
      Status(id: 1000003, type: 'Out Of State'),
      Status(id: 1000004, type: 'Out Of Country'),
    ];
  }

  List<Status> GetPredefinedLocationSubTypes() {
    return [
      Status(id: 1000001, type: 'In City'),
      Status(id: 1000002, type: 'In State'),
      Status(id: 1000003, type: 'Out Of State'),
      Status(id: 1000004, type: 'Out Of Country'),
    ];
  }

  List<Status> GetAllPredefinedLocationTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 1100001, type: 'Indoor'),
      Status(id: 1100002, type: 'Outdoor'),
    ];
  }

  List<Status> GetWithBlankPredefinedLocationTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 1100001, type: 'Indoor'),
      Status(id: 1100002, type: 'Outdoor'),
    ];
  }

  List<Status> GetPredefinedLocationTypes() {
    return [
      Status(id: 1100001, type: 'Indoor'),
      Status(id: 1100002, type: 'Outdoor'),
    ];
  }

  List<Status> GetAllPredefinedLoggedInUserTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 7400001, type: 'Normal User'),
      Status(id: 7400002, type: 'Anonymous User'),
    ];
  }

  List<Status> GetWithBlankPredefinedLoggedInUserTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 7400001, type: 'Normal User'),
      Status(id: 7400002, type: 'Anonymous User'),
    ];
  }

  List<Status> GetPredefinedLoggedInUserTypes() {
    return [
      Status(id: 7400001, type: 'Normal User'),
      Status(id: 7400002, type: 'Anonymous User'),
    ];
  }

  List<Status> GetAllPredefinedMessagePriorityTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 2800001, type: 'Error'),
      Status(id: 2800002, type: 'High'),
      Status(id: 2800003, type: 'Normal'),
    ];
  }

  List<Status> GetWithBlankPredefinedMessagePriorityTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 2800001, type: 'Error'),
      Status(id: 2800002, type: 'High'),
      Status(id: 2800003, type: 'Normal'),
    ];
  }

  List<Status> GetPredefinedMessagePriorityTypes() {
    return [
      Status(id: 2800001, type: 'Error'),
      Status(id: 2800002, type: 'High'),
      Status(id: 2800003, type: 'Normal'),
    ];
  }

  List<Status> GetAllPredefinedMessageTemplateTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 3500001, type: 'User List'),
      Status(id: 3500002, type: 'User Creation'),
      Status(id: 3500003, type: 'Forgot Password'),
      Status(id: 3500004, type: 'Changed Password'),
      Status(id: 3500005, type: 'Report Success'),
      Status(id: 3500006, type: 'Report Error'),
      Status(id: 3500007, type: 'Member Otp'),
    ];
  }

  List<Status> GetWithBlankPredefinedMessageTemplateTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 3500001, type: 'User List'),
      Status(id: 3500002, type: 'User Creation'),
      Status(id: 3500003, type: 'Forgot Password'),
      Status(id: 3500004, type: 'Changed Password'),
      Status(id: 3500005, type: 'Report Success'),
      Status(id: 3500006, type: 'Report Error'),
      Status(id: 3500007, type: 'Member Otp'),
    ];
  }

  List<Status> GetPredefinedMessageTemplateTypes() {
    return [
      Status(id: 3500001, type: 'User List'),
      Status(id: 3500002, type: 'User Creation'),
      Status(id: 3500003, type: 'Forgot Password'),
      Status(id: 3500004, type: 'Changed Password'),
      Status(id: 3500005, type: 'Report Success'),
      Status(id: 3500006, type: 'Report Error'),
      Status(id: 3500007, type: 'Member Otp'),
    ];
  }

  List<Status> GetAllPredefinedMessageToSendTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 2300001, type: 'Email'),
      Status(id: 2300002, type: 'Sms'),
      Status(id: 2300003, type: 'Realtime Message'),
    ];
  }

  List<Status> GetWithBlankPredefinedMessageToSendTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 2300001, type: 'Email'),
      Status(id: 2300002, type: 'Sms'),
      Status(id: 2300003, type: 'Realtime Message'),
    ];
  }

  List<Status> GetPredefinedMessageToSendTypes() {
    return [
      Status(id: 2300001, type: 'Email'),
      Status(id: 2300002, type: 'Sms'),
      Status(id: 2300003, type: 'Realtime Message'),
    ];
  }

  List<Status> GetAllPredefinedMetaDataGroupTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 270001, type: 'Actor Type'),
    ];
  }

  List<Status> GetWithBlankPredefinedMetaDataGroupTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 270001, type: 'Actor Type'),
    ];
  }

  List<Status> GetPredefinedMetaDataGroupTypes() {
    return [
      Status(id: 270001, type: 'Actor Type'),
    ];
  }

  List<Status> GetAllPredefinedMovieApprovalStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 4700001, type: 'Not Approved'),
      Status(id: 4700002, type: 'In Approval'),
      Status(id: 4700003, type: 'Approved'),
      Status(id: 4700004, type: 'Rejected'),
    ];
  }

  List<Status> GetWithBlankPredefinedMovieApprovalStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 4700001, type: 'Not Approved'),
      Status(id: 4700002, type: 'In Approval'),
      Status(id: 4700003, type: 'Approved'),
      Status(id: 4700004, type: 'Rejected'),
    ];
  }

  List<Status> GetPredefinedMovieApprovalStatusTypes() {
    return [
      Status(id: 4700001, type: 'Not Approved'),
      Status(id: 4700002, type: 'In Approval'),
      Status(id: 4700003, type: 'Approved'),
      Status(id: 4700004, type: 'Rejected'),
    ];
  }

  List<Status> GetAllPredefinedMovieLocationVisitStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 7900001, type: 'Visited'),
      Status(id: 7900002, type: 'Not Visited'),
      Status(id: 7900003, type: 'Scheduled'),
      Status(id: 7900004, type: 'Ignored'),
    ];
  }

  List<Status> GetWithBlankPredefinedMovieLocationVisitStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 7900001, type: 'Visited'),
      Status(id: 7900002, type: 'Not Visited'),
      Status(id: 7900003, type: 'Scheduled'),
      Status(id: 7900004, type: 'Ignored'),
    ];
  }

  List<Status> GetPredefinedMovieLocationVisitStatusTypes() {
    return [
      Status(id: 7900001, type: 'Visited'),
      Status(id: 7900002, type: 'Not Visited'),
      Status(id: 7900003, type: 'Scheduled'),
      Status(id: 7900004, type: 'Ignored'),
    ];
  }

  List<Status> GetAllPredefinedMovieResourceTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 1, type: 'Artist'),
      Status(id: 2, type: 'Technician'),
      Status(id: 3, type: 'Equipment'),
      Status(id: 4, type: 'Vendor'),
      Status(id: 5, type: 'Property'),
    ];
  }

  List<Status> GetWithBlankPredefinedMovieResourceTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 1, type: 'Artist'),
      Status(id: 2, type: 'Technician'),
      Status(id: 3, type: 'Equipment'),
      Status(id: 4, type: 'Vendor'),
      Status(id: 5, type: 'Property'),
    ];
  }

  List<Status> GetPredefinedMovieResourceTypes() {
    return [
      Status(id: 1, type: 'Artist'),
      Status(id: 2, type: 'Technician'),
      Status(id: 3, type: 'Equipment'),
      Status(id: 4, type: 'Vendor'),
      Status(id: 5, type: 'Property'),
    ];
  }

  List<Status> GetAllPredefinedMovieSceneStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 7300001, type: 'Planned'),
      Status(id: 7300002, type: 'Started'),
      Status(id: 7300003, type: 'Completed'),
      Status(id: 7300004, type: 'Partially Completed'),
      Status(id: 7300005, type: 'Cancelled'),
    ];
  }

  List<Status> GetWithBlankPredefinedMovieSceneStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 7300001, type: 'Planned'),
      Status(id: 7300002, type: 'Started'),
      Status(id: 7300003, type: 'Completed'),
      Status(id: 7300004, type: 'Partially Completed'),
      Status(id: 7300005, type: 'Cancelled'),
    ];
  }

  List<Status> GetPredefinedMovieSceneStatusTypes() {
    return [
      Status(id: 7300001, type: 'Planned'),
      Status(id: 7300002, type: 'Started'),
      Status(id: 7300003, type: 'Completed'),
      Status(id: 7300004, type: 'Partially Completed'),
      Status(id: 7300005, type: 'Cancelled'),
    ];
  }

  List<Status> GetAllPredefinedMovieScriptFileTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 6100001, type: 'Check With Suki'),
    ];
  }

  List<Status> GetWithBlankPredefinedMovieScriptFileTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 6100001, type: 'Check With Suki'),
    ];
  }

  List<Status> GetPredefinedMovieScriptFileTypes() {
    return [
      Status(id: 6100001, type: 'Check With Suki'),
    ];
  }

  List<Status> GetAllPredefinedMovieShootDayApprovalTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 4800001, type: 'Call Sheet'),
      Status(id: 4800002, type: 'Budget'),
    ];
  }

  List<Status> GetWithBlankPredefinedMovieShootDayApprovalTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 4800001, type: 'Call Sheet'),
      Status(id: 4800002, type: 'Budget'),
    ];
  }

  List<Status> GetPredefinedMovieShootDayApprovalTypes() {
    return [
      Status(id: 4800001, type: 'Call Sheet'),
      Status(id: 4800002, type: 'Budget'),
    ];
  }

  List<Status> GetAllPredefinedMovieShootDayResourceTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 1, type: 'Movie Shoot Day Artist'),
      Status(id: 2, type: 'Movie Shoot Day Technician'),
      Status(id: 3, type: 'Movie Shoot Day Equipment'),
      Status(id: 4, type: 'Movie Shoot Day Vendor'),
      Status(id: 5, type: 'Movie Shoot Day Property'),
    ];
  }

  List<Status> GetWithBlankPredefinedMovieShootDayResourceTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 1, type: 'Movie Shoot Day Artist'),
      Status(id: 2, type: 'Movie Shoot Day Technician'),
      Status(id: 3, type: 'Movie Shoot Day Equipment'),
      Status(id: 4, type: 'Movie Shoot Day Vendor'),
      Status(id: 5, type: 'Movie Shoot Day Property'),
    ];
  }

  List<Status> GetPredefinedMovieShootDayResourceTypes() {
    return [
      Status(id: 1, type: 'Movie Shoot Day Artist'),
      Status(id: 2, type: 'Movie Shoot Day Technician'),
      Status(id: 3, type: 'Movie Shoot Day Equipment'),
      Status(id: 4, type: 'Movie Shoot Day Vendor'),
      Status(id: 5, type: 'Movie Shoot Day Property'),
    ];
  }

  List<Status> GetAllPredefinedMovieShootDaySceneStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 4300001, type: 'Planned'),
      Status(id: 4300002, type: 'Started'),
      Status(id: 4300003, type: 'Completed'),
      Status(id: 4300004, type: 'Partially Completed'),
      Status(id: 4300005, type: 'Cancelled'),
    ];
  }

  List<Status> GetWithBlankPredefinedMovieShootDaySceneStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 4300001, type: 'Planned'),
      Status(id: 4300002, type: 'Started'),
      Status(id: 4300003, type: 'Completed'),
      Status(id: 4300004, type: 'Partially Completed'),
      Status(id: 4300005, type: 'Cancelled'),
    ];
  }

  List<Status> GetPredefinedMovieShootDaySceneStatusTypes() {
    return [
      Status(id: 4300001, type: 'Planned'),
      Status(id: 4300002, type: 'Started'),
      Status(id: 4300003, type: 'Completed'),
      Status(id: 4300004, type: 'Partially Completed'),
      Status(id: 4300005, type: 'Cancelled'),
    ];
  }

  List<Status> GetAllPredefinedMovieShootDayStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 4200001, type: 'Not Planned'),
      Status(id: 4200002, type: 'Planning'),
      Status(id: 4200003, type: 'Planned'),
      Status(id: 4200004, type: 'Started'),
      Status(id: 4200005, type: 'Completed'),
      Status(id: 4200006, type: 'Cancelled'),
    ];
  }

  List<Status> GetWithBlankPredefinedMovieShootDayStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 4200001, type: 'Not Planned'),
      Status(id: 4200002, type: 'Planning'),
      Status(id: 4200003, type: 'Planned'),
      Status(id: 4200004, type: 'Started'),
      Status(id: 4200005, type: 'Completed'),
      Status(id: 4200006, type: 'Cancelled'),
    ];
  }

  List<Status> GetPredefinedMovieShootDayStatusTypes() {
    return [
      Status(id: 4200001, type: 'Not Planned'),
      Status(id: 4200002, type: 'Planning'),
      Status(id: 4200003, type: 'Planned'),
      Status(id: 4200004, type: 'Started'),
      Status(id: 4200005, type: 'Completed'),
      Status(id: 4200006, type: 'Cancelled'),
    ];
  }

  List<Status> GetAllPredefinedMovieShootDayTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 1200001, type: 'Actual'),
      Status(id: 1200002, type: 'Prepwork'),
    ];
  }

  List<Status> GetWithBlankPredefinedMovieShootDayTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 1200001, type: 'Actual'),
      Status(id: 1200002, type: 'Prepwork'),
    ];
  }

  List<Status> GetPredefinedMovieShootDayTypes() {
    return [
      Status(id: 1200001, type: 'Actual'),
      Status(id: 1200002, type: 'Prepwork'),
    ];
  }

  List<Status> GetAllPredefinedMovieStageTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 4000001, type: 'Not Started'),
      Status(id: 4000002, type: 'Pre Production'),
      Status(id: 4000003, type: 'Production'),
      Status(id: 4000004, type: 'Post Production'),
      Status(id: 4000005, type: 'Completed'),
    ];
  }

  List<Status> GetWithBlankPredefinedMovieStageTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 4000001, type: 'Not Started'),
      Status(id: 4000002, type: 'Pre Production'),
      Status(id: 4000003, type: 'Production'),
      Status(id: 4000004, type: 'Post Production'),
      Status(id: 4000005, type: 'Completed'),
    ];
  }

  List<Status> GetPredefinedMovieStageTypes() {
    return [
      Status(id: 4000001, type: 'Not Started'),
      Status(id: 4000002, type: 'Pre Production'),
      Status(id: 4000003, type: 'Production'),
      Status(id: 4000004, type: 'Post Production'),
      Status(id: 4000005, type: 'Completed'),
    ];
  }

  List<Status> GetAllPredefinedMovieStatusNotificationEventTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 9000001, type: 'Daily Expense And Budget Report'),
      Status(id: 9000002, type: 'Movie Commitment Task Completion Report'),
    ];
  }

  List<Status> GetWithBlankPredefinedMovieStatusNotificationEventTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 9000001, type: 'Daily Expense And Budget Report'),
      Status(id: 9000002, type: 'Movie Commitment Task Completion Report'),
    ];
  }

  List<Status> GetPredefinedMovieStatusNotificationEventTypes() {
    return [
      Status(id: 9000001, type: 'Daily Expense And Budget Report'),
      Status(id: 9000002, type: 'Movie Commitment Task Completion Report'),
    ];
  }

  List<Status> GetAllPredefinedMovieStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 3900001, type: 'Not Started'),
      Status(id: 3900002, type: 'In Progress'),
      Status(id: 3900003, type: 'Completed'),
      Status(id: 3900004, type: 'Read Only'),
      Status(id: 3900005, type: 'Archived'),
    ];
  }

  List<Status> GetWithBlankPredefinedMovieStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 3900001, type: 'Not Started'),
      Status(id: 3900002, type: 'In Progress'),
      Status(id: 3900003, type: 'Completed'),
      Status(id: 3900004, type: 'Read Only'),
      Status(id: 3900005, type: 'Archived'),
    ];
  }

  List<Status> GetPredefinedMovieStatusTypes() {
    return [
      Status(id: 3900001, type: 'Not Started'),
      Status(id: 3900002, type: 'In Progress'),
      Status(id: 3900003, type: 'Completed'),
      Status(id: 3900004, type: 'Read Only'),
      Status(id: 3900005, type: 'Archived'),
    ];
  }

  List<Status> GetAllPredefinedNotificationMessageTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 3000001, type: 'Task Assigned'),
    ];
  }

  List<Status> GetWithBlankPredefinedNotificationMessageTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 3000001, type: 'Task Assigned'),
    ];
  }

  List<Status> GetPredefinedNotificationMessageTypes() {
    return [
      Status(id: 3000001, type: 'Task Assigned'),
    ];
  }

  List<Status> GetAllPredefinedNotificationTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 1, type: 'Voice Notification'),
      Status(id: 2, type: 'Email Notification'),
      Status(id: 3, type: 'SMSNotification'),
      Status(id: 4, type: 'Whats App Notification'),
      Status(id: 5, type: 'Push Notification'),
    ];
  }

  List<Status> GetWithBlankPredefinedNotificationTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 1, type: 'Voice Notification'),
      Status(id: 2, type: 'Email Notification'),
      Status(id: 3, type: 'SMSNotification'),
      Status(id: 4, type: 'Whats App Notification'),
      Status(id: 5, type: 'Push Notification'),
    ];
  }

  List<Status> GetPredefinedNotificationTypes() {
    return [
      Status(id: 1, type: 'Voice Notification'),
      Status(id: 2, type: 'Email Notification'),
      Status(id: 3, type: 'SMSNotification'),
      Status(id: 4, type: 'Whats App Notification'),
      Status(id: 5, type: 'Push Notification'),
    ];
  }

  List<Status> GetAllPredefinedPaymentStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 7200001, type: 'Not Paid'),
      Status(id: 7200002, type: 'Paid'),
      Status(id: 7200003, type: 'Partially Paid'),
      Status(id: 7200004, type: 'Should Be Paid Immediately'),
      Status(id: 7200005, type: 'Can Pay Later'),
      Status(id: 7200006, type: 'Manually Paid'),
      Status(id: 7200007, type: 'Dispute'),
    ];
  }

  List<Status> GetWithBlankPredefinedPaymentStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 7200001, type: 'Not Paid'),
      Status(id: 7200002, type: 'Paid'),
      Status(id: 7200003, type: 'Partially Paid'),
      Status(id: 7200004, type: 'Should Be Paid Immediately'),
      Status(id: 7200005, type: 'Can Pay Later'),
      Status(id: 7200006, type: 'Manually Paid'),
      Status(id: 7200007, type: 'Dispute'),
    ];
  }

  List<Status> GetPredefinedPaymentStatusTypes() {
    return [
      Status(id: 7200001, type: 'Not Paid'),
      Status(id: 7200002, type: 'Paid'),
      Status(id: 7200003, type: 'Partially Paid'),
      Status(id: 7200004, type: 'Should Be Paid Immediately'),
      Status(id: 7200005, type: 'Can Pay Later'),
      Status(id: 7200006, type: 'Manually Paid'),
      Status(id: 7200007, type: 'Dispute'),
    ];
  }

  List<Status> GetAllPredefinedPhoneCallNotificationStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 5700001, type: 'Not Needed'),
      Status(id: 5700002, type: 'Scheduled'),
      Status(id: 5700003, type: 'Confirmed'),
      Status(id: 5700004, type: 'Not Confirmed'),
      Status(id: 5700006, type: 'Declined'),
      Status(id: 5700007, type: 'Notification Error'),
      Status(id: 5700008, type: 'Server Not Configured'),
    ];
  }

  List<Status> GetWithBlankPredefinedPhoneCallNotificationStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 5700001, type: 'Not Needed'),
      Status(id: 5700002, type: 'Scheduled'),
      Status(id: 5700003, type: 'Confirmed'),
      Status(id: 5700004, type: 'Not Confirmed'),
      Status(id: 5700006, type: 'Declined'),
      Status(id: 5700007, type: 'Notification Error'),
      Status(id: 5700008, type: 'Server Not Configured'),
    ];
  }

  List<Status> GetPredefinedPhoneCallNotificationStatusTypes() {
    return [
      Status(id: 5700001, type: 'Not Needed'),
      Status(id: 5700002, type: 'Scheduled'),
      Status(id: 5700003, type: 'Confirmed'),
      Status(id: 5700004, type: 'Not Confirmed'),
      Status(id: 5700006, type: 'Declined'),
      Status(id: 5700007, type: 'Notification Error'),
      Status(id: 5700008, type: 'Server Not Configured'),
    ];
  }

  List<Status> GetAllPredefinedPostProductionExpenseTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 1300001, type: 'Dubbing'),
      Status(id: 1300002, type: 'DI'),
      Status(id: 1300003, type: 'VFX'),
      Status(id: 1300004, type: 'SFX'),
      Status(id: 1300005, type: 'Mixing And Atmos'),
      Status(id: 1300006, type: 'Censor'),
      Status(id: 1300007, type: 'Animal Permission'),
    ];
  }

  List<Status> GetWithBlankPredefinedPostProductionExpenseTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 1300001, type: 'Dubbing'),
      Status(id: 1300002, type: 'DI'),
      Status(id: 1300003, type: 'VFX'),
      Status(id: 1300004, type: 'SFX'),
      Status(id: 1300005, type: 'Mixing And Atmos'),
      Status(id: 1300006, type: 'Censor'),
      Status(id: 1300007, type: 'Animal Permission'),
    ];
  }

  List<Status> GetPredefinedPostProductionExpenseTypes() {
    return [
      Status(id: 1300001, type: 'Dubbing'),
      Status(id: 1300002, type: 'DI'),
      Status(id: 1300003, type: 'VFX'),
      Status(id: 1300004, type: 'SFX'),
      Status(id: 1300005, type: 'Mixing And Atmos'),
      Status(id: 1300006, type: 'Censor'),
      Status(id: 1300007, type: 'Animal Permission'),
    ];
  }

  List<Status> GetAllPredefinedPostProductionStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 7700000, type: 'Not Needed'),
      Status(id: 7700001, type: 'Not Started'),
      Status(id: 7700002, type: 'In Progress'),
      Status(id: 7700003, type: 'Completed'),
      Status(id: 7700004, type: 'Cancelled'),
      Status(id: 7700005, type: 'Custom'),
    ];
  }

  List<Status> GetWithBlankPredefinedPostProductionStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 7700000, type: 'Not Needed'),
      Status(id: 7700001, type: 'Not Started'),
      Status(id: 7700002, type: 'In Progress'),
      Status(id: 7700003, type: 'Completed'),
      Status(id: 7700004, type: 'Cancelled'),
      Status(id: 7700005, type: 'Custom'),
    ];
  }

  List<Status> GetPredefinedPostProductionStatusTypes() {
    return [
      Status(id: 7700000, type: 'Not Needed'),
      Status(id: 7700001, type: 'Not Started'),
      Status(id: 7700002, type: 'In Progress'),
      Status(id: 7700003, type: 'Completed'),
      Status(id: 7700004, type: 'Cancelled'),
      Status(id: 7700005, type: 'Custom'),
    ];
  }

  List<Status> GetAllPredefinedPreProductionStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 7600000, type: 'Not Needed'),
      Status(id: 7600001, type: 'Not Started'),
      Status(id: 7600002, type: 'In Progress'),
      Status(id: 7600003, type: 'Completed'),
      Status(id: 7600004, type: 'Cancelled'),
      Status(id: 7600005, type: 'Custom'),
    ];
  }

  List<Status> GetWithBlankPredefinedPreProductionStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 7600000, type: 'Not Needed'),
      Status(id: 7600001, type: 'Not Started'),
      Status(id: 7600002, type: 'In Progress'),
      Status(id: 7600003, type: 'Completed'),
      Status(id: 7600004, type: 'Cancelled'),
      Status(id: 7600005, type: 'Custom'),
    ];
  }

  List<Status> GetPredefinedPreProductionStatusTypes() {
    return [
      Status(id: 7600000, type: 'Not Needed'),
      Status(id: 7600001, type: 'Not Started'),
      Status(id: 7600002, type: 'In Progress'),
      Status(id: 7600003, type: 'Completed'),
      Status(id: 7600004, type: 'Cancelled'),
      Status(id: 7600005, type: 'Custom'),
    ];
  }

  List<Status> GetAllPredefinedProductionStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 7800000, type: 'Not Needed'),
      Status(id: 7800001, type: 'Not Started'),
      Status(id: 7800002, type: 'In Progress'),
      Status(id: 7800003, type: 'Completed'),
      Status(id: 7800004, type: 'Cancelled'),
      Status(id: 7800005, type: 'Custom'),
    ];
  }

  List<Status> GetWithBlankPredefinedProductionStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 7800000, type: 'Not Needed'),
      Status(id: 7800001, type: 'Not Started'),
      Status(id: 7800002, type: 'In Progress'),
      Status(id: 7800003, type: 'Completed'),
      Status(id: 7800004, type: 'Cancelled'),
      Status(id: 7800005, type: 'Custom'),
    ];
  }

  List<Status> GetPredefinedProductionStatusTypes() {
    return [
      Status(id: 7800000, type: 'Not Needed'),
      Status(id: 7800001, type: 'Not Started'),
      Status(id: 7800002, type: 'In Progress'),
      Status(id: 7800003, type: 'Completed'),
      Status(id: 7800004, type: 'Cancelled'),
      Status(id: 7800005, type: 'Custom'),
    ];
  }

  List<Status> GetAllPredefinedPropertyForTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 8500001, type: 'Common'),
      Status(id: 8500002, type: 'Movie Artist'),
      Status(id: 8500003, type: 'Movie Technician'),
      Status(id: 8500004, type: 'Movie Equipment'),
      Status(id: 8500005, type: 'Movie Vendor'),
    ];
  }

  List<Status> GetWithBlankPredefinedPropertyForTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 8500001, type: 'Common'),
      Status(id: 8500002, type: 'Movie Artist'),
      Status(id: 8500003, type: 'Movie Technician'),
      Status(id: 8500004, type: 'Movie Equipment'),
      Status(id: 8500005, type: 'Movie Vendor'),
    ];
  }

  List<Status> GetPredefinedPropertyForTypes() {
    return [
      Status(id: 8500001, type: 'Common'),
      Status(id: 8500002, type: 'Movie Artist'),
      Status(id: 8500003, type: 'Movie Technician'),
      Status(id: 8500004, type: 'Movie Equipment'),
      Status(id: 8500005, type: 'Movie Vendor'),
    ];
  }

  List<Status> GetAllPredefinedPropertyGroupTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 7000001, type: 'Custom'),
      Status(id: 7000002, type: 'Clothing'),
      Status(id: 7000003, type: 'Accessories'),
      Status(id: 7000004, type: 'Footwear'),
      Status(id: 7000005, type: 'Props'),
      Status(id: 7000006, type: 'Makeup And Grooming'),
      Status(id: 7000007, type: 'Tech Equipment'),
    ];
  }

  List<Status> GetWithBlankPredefinedPropertyGroupTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 7000001, type: 'Custom'),
      Status(id: 7000002, type: 'Clothing'),
      Status(id: 7000003, type: 'Accessories'),
      Status(id: 7000004, type: 'Footwear'),
      Status(id: 7000005, type: 'Props'),
      Status(id: 7000006, type: 'Makeup And Grooming'),
      Status(id: 7000007, type: 'Tech Equipment'),
    ];
  }

  List<Status> GetPredefinedPropertyGroupTypes() {
    return [
      Status(id: 7000001, type: 'Custom'),
      Status(id: 7000002, type: 'Clothing'),
      Status(id: 7000003, type: 'Accessories'),
      Status(id: 7000004, type: 'Footwear'),
      Status(id: 7000005, type: 'Props'),
      Status(id: 7000006, type: 'Makeup And Grooming'),
      Status(id: 7000007, type: 'Tech Equipment'),
    ];
  }

  List<Status> GetAllPredefinedPropertyOrEquipmentRequestedByTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 9500001, type: 'Movie Artist'),
      Status(id: 9500002, type: 'Movie Technician'),
      Status(id: 9500003, type: 'Movie User'),
    ];
  }

  List<Status> GetWithBlankPredefinedPropertyOrEquipmentRequestedByTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 9500001, type: 'Movie Artist'),
      Status(id: 9500002, type: 'Movie Technician'),
      Status(id: 9500003, type: 'Movie User'),
    ];
  }

  List<Status> GetPredefinedPropertyOrEquipmentRequestedByTypes() {
    return [
      Status(id: 9500001, type: 'Movie Artist'),
      Status(id: 9500002, type: 'Movie Technician'),
      Status(id: 9500003, type: 'Movie User'),
    ];
  }

  List<Status> GetAllPredefinedPropertyTransactionTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 9300001, type: 'Received'),
      Status(id: 9300002, type: 'Returned'),
    ];
  }

  List<Status> GetWithBlankPredefinedPropertyTransactionTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 9300001, type: 'Received'),
      Status(id: 9300002, type: 'Returned'),
    ];
  }

  List<Status> GetPredefinedPropertyTransactionTypes() {
    return [
      Status(id: 9300001, type: 'Received'),
      Status(id: 9300002, type: 'Returned'),
    ];
  }

  List<Status> GetAllPredefinedPropertyTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 7100001, type: 'Custom'),
      Status(id: 7100002, type: 'Shirt'),
      Status(id: 7100003, type: 'Pants'),
      Status(id: 7100004, type: 'Jacket'),
      Status(id: 7100005, type: 'Dress'),
      Status(id: 7100006, type: 'Hat'),
      Status(id: 7100007, type: 'Watch'),
      Status(id: 7100008, type: 'Sunglasses'),
      Status(id: 7100009, type: 'Necklace'),
      Status(id: 7100010, type: 'Belt'),
      Status(id: 7100011, type: 'Earrings'),
      Status(id: 7100012, type: 'Shoes'),
      Status(id: 7100013, type: 'Boots'),
      Status(id: 7100014, type: 'Sandals'),
      Status(id: 7100015, type: 'Sword'),
      Status(id: 7100016, type: 'Shield'),
      Status(id: 7100017, type: 'Book'),
      Status(id: 7100018, type: 'Glass'),
      Status(id: 7100019, type: 'Cigarette'),
      Status(id: 7100020, type: 'Lipstick'),
      Status(id: 7100021, type: 'Foundation'),
      Status(id: 7100022, type: 'Hair Gel'),
      Status(id: 7100023, type: 'Perfume'),
      Status(id: 7100024, type: 'Walkie Talkie'),
      Status(id: 7100025, type: 'Laptop'),
      Status(id: 7100026, type: 'Drone'),
      Status(id: 7100027, type: 'Microphone'),
      Status(id: 7100028, type: 'Camera Rig'),
    ];
  }

  List<Status> GetWithBlankPredefinedPropertyTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 7100001, type: 'Custom'),
      Status(id: 7100002, type: 'Shirt'),
      Status(id: 7100003, type: 'Pants'),
      Status(id: 7100004, type: 'Jacket'),
      Status(id: 7100005, type: 'Dress'),
      Status(id: 7100006, type: 'Hat'),
      Status(id: 7100007, type: 'Watch'),
      Status(id: 7100008, type: 'Sunglasses'),
      Status(id: 7100009, type: 'Necklace'),
      Status(id: 7100010, type: 'Belt'),
      Status(id: 7100011, type: 'Earrings'),
      Status(id: 7100012, type: 'Shoes'),
      Status(id: 7100013, type: 'Boots'),
      Status(id: 7100014, type: 'Sandals'),
      Status(id: 7100015, type: 'Sword'),
      Status(id: 7100016, type: 'Shield'),
      Status(id: 7100017, type: 'Book'),
      Status(id: 7100018, type: 'Glass'),
      Status(id: 7100019, type: 'Cigarette'),
      Status(id: 7100020, type: 'Lipstick'),
      Status(id: 7100021, type: 'Foundation'),
      Status(id: 7100022, type: 'Hair Gel'),
      Status(id: 7100023, type: 'Perfume'),
      Status(id: 7100024, type: 'Walkie Talkie'),
      Status(id: 7100025, type: 'Laptop'),
      Status(id: 7100026, type: 'Drone'),
      Status(id: 7100027, type: 'Microphone'),
      Status(id: 7100028, type: 'Camera Rig'),
    ];
  }

  List<Status> GetPredefinedPropertyTypes() {
    return [
      Status(id: 7100001, type: 'Custom'),
      Status(id: 7100002, type: 'Shirt'),
      Status(id: 7100003, type: 'Pants'),
      Status(id: 7100004, type: 'Jacket'),
      Status(id: 7100005, type: 'Dress'),
      Status(id: 7100006, type: 'Hat'),
      Status(id: 7100007, type: 'Watch'),
      Status(id: 7100008, type: 'Sunglasses'),
      Status(id: 7100009, type: 'Necklace'),
      Status(id: 7100010, type: 'Belt'),
      Status(id: 7100011, type: 'Earrings'),
      Status(id: 7100012, type: 'Shoes'),
      Status(id: 7100013, type: 'Boots'),
      Status(id: 7100014, type: 'Sandals'),
      Status(id: 7100015, type: 'Sword'),
      Status(id: 7100016, type: 'Shield'),
      Status(id: 7100017, type: 'Book'),
      Status(id: 7100018, type: 'Glass'),
      Status(id: 7100019, type: 'Cigarette'),
      Status(id: 7100020, type: 'Lipstick'),
      Status(id: 7100021, type: 'Foundation'),
      Status(id: 7100022, type: 'Hair Gel'),
      Status(id: 7100023, type: 'Perfume'),
      Status(id: 7100024, type: 'Walkie Talkie'),
      Status(id: 7100025, type: 'Laptop'),
      Status(id: 7100026, type: 'Drone'),
      Status(id: 7100027, type: 'Microphone'),
      Status(id: 7100028, type: 'Camera Rig'),
    ];
  }

  List<Status> GetAllPredefinedPushNotificationServerTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 660000, type: 'FCM'),
      Status(id: 660001, type: 'Azure Notification Hubs'),
      Status(id: 660002, type: 'One Signal'),
      Status(id: 660003, type: 'Apple Push Notification Service'),
      Status(id: 660004, type: 'Custom Web Socket'),
    ];
  }

  List<Status> GetWithBlankPredefinedPushNotificationServerTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 660000, type: 'FCM'),
      Status(id: 660001, type: 'Azure Notification Hubs'),
      Status(id: 660002, type: 'One Signal'),
      Status(id: 660003, type: 'Apple Push Notification Service'),
      Status(id: 660004, type: 'Custom Web Socket'),
    ];
  }

  List<Status> GetPredefinedPushNotificationServerTypes() {
    return [
      Status(id: 660000, type: 'FCM'),
      Status(id: 660001, type: 'Azure Notification Hubs'),
      Status(id: 660002, type: 'One Signal'),
      Status(id: 660003, type: 'Apple Push Notification Service'),
      Status(id: 660004, type: 'Custom Web Socket'),
    ];
  }

  List<Status> GetAllPredefinedPushNotificationStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 6700001, type: 'Not Needed'),
      Status(id: 6700002, type: 'Scheduled'),
      Status(id: 6700003, type: 'Sent'),
      Status(id: 6700004, type: 'Confirmed'),
      Status(id: 6700005, type: 'Not Confirmed'),
      Status(id: 6700006, type: 'Viewed And Not Confirmed'),
      Status(id: 6700007, type: 'Declined'),
      Status(id: 6700008, type: 'Notification Error'),
      Status(id: 6700009, type: 'Server Not Configured'),
    ];
  }

  List<Status> GetWithBlankPredefinedPushNotificationStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 6700001, type: 'Not Needed'),
      Status(id: 6700002, type: 'Scheduled'),
      Status(id: 6700003, type: 'Sent'),
      Status(id: 6700004, type: 'Confirmed'),
      Status(id: 6700005, type: 'Not Confirmed'),
      Status(id: 6700006, type: 'Viewed And Not Confirmed'),
      Status(id: 6700007, type: 'Declined'),
      Status(id: 6700008, type: 'Notification Error'),
      Status(id: 6700009, type: 'Server Not Configured'),
    ];
  }

  List<Status> GetPredefinedPushNotificationStatusTypes() {
    return [
      Status(id: 6700001, type: 'Not Needed'),
      Status(id: 6700002, type: 'Scheduled'),
      Status(id: 6700003, type: 'Sent'),
      Status(id: 6700004, type: 'Confirmed'),
      Status(id: 6700005, type: 'Not Confirmed'),
      Status(id: 6700006, type: 'Viewed And Not Confirmed'),
      Status(id: 6700007, type: 'Declined'),
      Status(id: 6700008, type: 'Notification Error'),
      Status(id: 6700009, type: 'Server Not Configured'),
    ];
  }

  List<Status> GetAllPredefinedRateTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 1400001, type: 'Per Hour'),
      Status(id: 1400002, type: 'Per Day'),
      Status(id: 1400003, type: 'Per Week'),
      Status(id: 1400004, type: 'Per Month'),
      Status(id: 1400005, type: 'Per Movie'),
      Status(id: 1400006, type: 'Per Episode'),
      Status(id: 1400007, type: 'Flat'),
      Status(id: 1400008, type: 'Allowance'),
      Status(id: 1400040, type: 'Not Applicable'),
      Status(id: 1400050, type: 'Custom'),
    ];
  }

  List<Status> GetWithBlankPredefinedRateTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 1400001, type: 'Per Hour'),
      Status(id: 1400002, type: 'Per Day'),
      Status(id: 1400003, type: 'Per Week'),
      Status(id: 1400004, type: 'Per Month'),
      Status(id: 1400005, type: 'Per Movie'),
      Status(id: 1400006, type: 'Per Episode'),
      Status(id: 1400007, type: 'Flat'),
      Status(id: 1400008, type: 'Allowance'),
      Status(id: 1400040, type: 'Not Applicable'),
      Status(id: 1400050, type: 'Custom'),
    ];
  }

  List<Status> GetPredefinedRateTypes() {
    return [
      Status(id: 1400001, type: 'Per Hour'),
      Status(id: 1400002, type: 'Per Day'),
      Status(id: 1400003, type: 'Per Week'),
      Status(id: 1400004, type: 'Per Month'),
      Status(id: 1400005, type: 'Per Movie'),
      Status(id: 1400006, type: 'Per Episode'),
      Status(id: 1400007, type: 'Flat'),
      Status(id: 1400008, type: 'Allowance'),
      Status(id: 1400040, type: 'Not Applicable'),
      Status(id: 1400050, type: 'Custom'),
    ];
  }

  List<Status> GetAllPredefinedRateUnitTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 8700001, type: 'Hour'),
      Status(id: 8700002, type: 'Day'),
      Status(id: 8700003, type: 'Week'),
      Status(id: 8700004, type: 'Month'),
      Status(id: 8700005, type: 'Year'),
    ];
  }

  List<Status> GetWithBlankPredefinedRateUnitTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 8700001, type: 'Hour'),
      Status(id: 8700002, type: 'Day'),
      Status(id: 8700003, type: 'Week'),
      Status(id: 8700004, type: 'Month'),
      Status(id: 8700005, type: 'Year'),
    ];
  }

  List<Status> GetPredefinedRateUnitTypes() {
    return [
      Status(id: 8700001, type: 'Hour'),
      Status(id: 8700002, type: 'Day'),
      Status(id: 8700003, type: 'Week'),
      Status(id: 8700004, type: 'Month'),
      Status(id: 8700005, type: 'Year'),
    ];
  }

  List<Status> GetAllPredefinedRealtimeMessageStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 2900001, type: 'Not Yet Sent'),
      Status(id: 2900002, type: 'Sent'),
      Status(id: 2900003, type: 'Viewed'),
      Status(id: 2900004, type: 'Deleted'),
      Status(id: 2900005, type: 'Error'),
    ];
  }

  List<Status> GetWithBlankPredefinedRealtimeMessageStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 2900001, type: 'Not Yet Sent'),
      Status(id: 2900002, type: 'Sent'),
      Status(id: 2900003, type: 'Viewed'),
      Status(id: 2900004, type: 'Deleted'),
      Status(id: 2900005, type: 'Error'),
    ];
  }

  List<Status> GetPredefinedRealtimeMessageStatusTypes() {
    return [
      Status(id: 2900001, type: 'Not Yet Sent'),
      Status(id: 2900002, type: 'Sent'),
      Status(id: 2900003, type: 'Viewed'),
      Status(id: 2900004, type: 'Deleted'),
      Status(id: 2900005, type: 'Error'),
    ];
  }

  List<Status> GetAllPredefinedRequirementTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 4900001, type: 'General'),
      Status(id: 4900002, type: 'Movie Artist'),
      Status(id: 4900003, type: 'Artist Type'),
      Status(id: 4900004, type: 'Movie Technician'),
      Status(id: 4900005, type: 'Technician Type'),
      Status(id: 4900006, type: 'Movie Equipment'),
      Status(id: 4900007, type: 'Equipment Type'),
      Status(id: 4900008, type: 'Movie Vendor'),
      Status(id: 4900009, type: 'Vendor Type'),
      Status(id: 4900010, type: 'Movie Budget Category'),
      Status(id: 4900011, type: 'Movie Property'),
      Status(id: 4900012, type: 'Property Type'),
    ];
  }

  List<Status> GetWithBlankPredefinedRequirementTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 4900001, type: 'General'),
      Status(id: 4900002, type: 'Movie Artist'),
      Status(id: 4900003, type: 'Artist Type'),
      Status(id: 4900004, type: 'Movie Technician'),
      Status(id: 4900005, type: 'Technician Type'),
      Status(id: 4900006, type: 'Movie Equipment'),
      Status(id: 4900007, type: 'Equipment Type'),
      Status(id: 4900008, type: 'Movie Vendor'),
      Status(id: 4900009, type: 'Vendor Type'),
      Status(id: 4900010, type: 'Movie Budget Category'),
      Status(id: 4900011, type: 'Movie Property'),
      Status(id: 4900012, type: 'Property Type'),
    ];
  }

  List<Status> GetPredefinedRequirementTypes() {
    return [
      Status(id: 4900001, type: 'General'),
      Status(id: 4900002, type: 'Movie Artist'),
      Status(id: 4900003, type: 'Artist Type'),
      Status(id: 4900004, type: 'Movie Technician'),
      Status(id: 4900005, type: 'Technician Type'),
      Status(id: 4900006, type: 'Movie Equipment'),
      Status(id: 4900007, type: 'Equipment Type'),
      Status(id: 4900008, type: 'Movie Vendor'),
      Status(id: 4900009, type: 'Vendor Type'),
      Status(id: 4900010, type: 'Movie Budget Category'),
      Status(id: 4900011, type: 'Movie Property'),
      Status(id: 4900012, type: 'Property Type'),
    ];
  }

  List<Status> GetAllPredefinedResourceTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 2000001, type: 'Company'),
      Status(id: 2000002, type: 'User'),
      Status(id: 2000003, type: 'State'),
      Status(id: 2000004, type: 'Movie'),
      Status(id: 2000005, type: 'Movie Artist Or Technician'),
      Status(id: 2000006, type: 'Movie User'),
      Status(id: 2000007, type: 'Movie Unit'),
      Status(id: 2000008, type: 'Movie Shoot Day Scene'),
      Status(id: 2000009, type: 'Movie Shoot Day Requirement'),
      Status(id: 2000010, type: 'Movie Shoot Day Expense'),
      Status(id: 2000011, type: 'Movie Shoot Day Budget'),
      Status(id: 2000012, type: 'Movie Shoot Day Artist Or Technician'),
      Status(id: 2000013, type: 'Movie Shoot Day'),
      Status(id: 2000014, type: 'Movie Scene Artist Or Technician'),
      Status(id: 2000015, type: 'Movie Scene'),
      Status(id: 2000016, type: 'Movie Location'),
      Status(id: 2000017, type: 'Movie Genre'),
      Status(id: 2000018, type: 'Contract'),
      Status(id: 2000019, type: 'Movie Budget Division'),
      Status(id: 2000020, type: 'Movie Budget Category Expense'),
      Status(id: 2000021, type: 'Movie Budget Category'),
      Status(id: 2000022, type: 'Movie Artist Or Technician Rate'),
      Status(id: 2000023, type: 'User Permission'),
      Status(id: 2000024, type: 'Technician Type Rate'),
      Status(id: 2000025, type: 'Technician Type'),
      Status(id: 2000026, type: 'Technician Rate'),
      Status(id: 2000027, type: 'Technician'),
      Status(id: 2000028, type: 'Genre'),
      Status(id: 2000029, type: 'Expense Type'),
      Status(id: 2000030, type: 'Contract Template'),
      Status(id: 2000031, type: 'Budget Division'),
      Status(id: 2000032, type: 'Budget Category Expense'),
      Status(id: 2000033, type: 'Budget Category'),
      Status(id: 2000034, type: 'Artist Type'),
      Status(id: 2000035, type: 'Artist'),
      Status(id: 2000036, type: 'Audit Operation'),
      Status(id: 2000037, type: 'Configuration Group'),
      Status(id: 2000038, type: 'Configuration Item'),
      Status(id: 2000039, type: 'Enum Group'),
      Status(id: 2000040, type: 'Enum Type'),
      Status(id: 2000041, type: 'Job'),
      Status(id: 2000042, type: 'Job Attachment'),
      Status(id: 2000043, type: 'Job Notification Email'),
      Status(id: 2000044, type: 'Job Template'),
      Status(id: 2000045, type: 'Job Template Parameter'),
      Status(id: 2000046, type: 'Meta Data'),
      Status(id: 2000047, type: 'Meta Data Group'),
      Status(id: 2000048, type: 'Meta Data Group Section'),
      Status(id: 2000049, type: 'Realtime Message'),
      Status(id: 2000050, type: 'Scheduled Job'),
      Status(id: 2000051, type: 'Job Template Category'),
      Status(id: 2000052, type: 'Saved Job'),
      Status(id: 2000053, type: 'Message To Send'),
      Status(id: 2000054, type: 'Artist Rate'),
      Status(id: 2000055, type: 'Artist Type Rate'),
      Status(id: 2000056, type: 'Movie Shoot Day Scene Artist Or Technician'),
      Status(id: 2000057, type: 'Saved Job Notification Email'),
      Status(id: 2000058, type: 'Scheduled Job History'),
      Status(id: 2000059, type: 'Scheduled Job Notification Email'),
      Status(id: 2000060, type: 'Company Storage Configuration'),
      Status(id: 2000061, type: 'Mail Server'),
      Status(id: 2000062, type: 'Artist Group Type'),
      Status(id: 2000063, type: 'Technician Group Type'),
      Status(id: 2000064, type: 'Movie Artist Rate'),
      Status(id: 2000065, type: 'Movie Technician'),
      Status(id: 2000066, type: 'Movie Artist'),
      Status(id: 2000067, type: 'Movie Equipment'),
      Status(id: 2000068, type: 'Movie Equipment Rate'),
      Status(id: 2000069, type: 'Movie Scene Equipment'),
      Status(id: 2000070, type: 'Movie Scene Technician'),
      Status(id: 2000071, type: 'Movie Scene Requirement'),
      Status(id: 2000072, type: 'Movie Shoot Day Artist'),
      Status(id: 2000073, type: 'Movie Shoot Day Technician'),
      Status(id: 2000074, type: 'Movie Shoot Day Equipment'),
      Status(id: 2000075, type: 'Movie Technician Rate'),
      Status(id: 2000076, type: 'Movie Scene Artist'),
      Status(id: 2000077, type: 'Equipment'),
      Status(id: 2000078, type: 'Equipment Rate'),
      Status(id: 2000079, type: 'Equipment Type'),
      Status(id: 2000080, type: 'Equipment Type Rate'),
      Status(id: 2000081, type: 'Equipment Group Type'),
      Status(id: 2000082, type: 'Vendor'),
      Status(id: 2000083, type: 'Vendor Type'),
      Status(id: 2000084, type: 'Movie Vendor'),
      Status(id: 2000085, type: 'Note Attachment'),
      Status(id: 2000086, type: 'Vendor Group Type'),
      Status(id: 2000087, type: 'Movie Setting'),
      Status(id: 2000088, type: 'Movie Shoot Day Approval'),
      Status(id: 2000089, type: 'Movie Scene Vendor'),
      Status(id: 2000090, type: 'Movie Shoot Day Vendor'),
      Status(id: 2000091, type: 'Vendor Type Rate'),
      Status(id: 2000092, type: 'Vendor Rate'),
      Status(id: 2000093, type: 'Movie Vendor Rate'),
      Status(id: 2000094, type: 'Single Sign On Server'),
      Status(id: 2000095, type: 'Message Template'),
      Status(id: 2000096, type: 'Audit Operation Detail'),
      Status(id: 2000097, type: 'File Attachment'),
      Status(id: 2000098, type: 'File Attachment Folder'),
      Status(id: 2000099, type: 'Sms Server'),
      Status(id: 2000100, type: 'Movie Shoot Day Script File'),
      Status(id: 2000101, type: 'Movie Script File'),
      Status(id: 2000102, type: 'Digital Signature Server'),
      Status(id: 2000103, type: 'Statement Template'),
      Status(id: 2000104, type: 'Movie Voucher'),
      Status(id: 2000105, type: 'Chat'),
      Status(id: 2000106, type: 'Chat Message Status'),
      Status(id: 2000107, type: 'Chat User'),
      Status(id: 2000108, type: 'Chat Message'),
      Status(id: 2000109, type: 'Ledger Type'),
      Status(id: 2000110, type: 'Push Notification Server'),
      Status(id: 2000111, type: 'Voice Notification Server'),
      Status(id: 2000112, type: 'Whats App Notification Server'),
      Status(id: 2000113, type: 'Property'),
      Status(id: 2000114, type: 'Property Rate'),
      Status(id: 2000115, type: 'Property Type'),
      Status(id: 2000116, type: 'Property Type Rate'),
      Status(id: 2000117, type: 'Property Group Type'),
      Status(id: 2000118, type: 'Movie Property'),
      Status(id: 2000119, type: 'Movie Property Rate'),
      Status(id: 2000120, type: 'Movie Scene Property'),
      Status(id: 2000121, type: 'Movie Shoot Day Property'),
      Status(id: 2000122, type: 'Anonymous User'),
      Status(id: 2000123, type: 'Pre Production Status Type'),
      Status(id: 2000124, type: 'Production Status Type'),
      Status(id: 2000125, type: 'Post Production Status Type'),
      Status(id: 2000126, type: 'Department'),
      Status(id: 2000127, type: 'Movie Location Category'),
      Status(id: 2000128, type: 'Movie Location Candidate'),
      Status(id: 2000130, type: 'Movie Commitment Task'),
      Status(id: 2000131, type: 'Movie Status Notification Event User'),
      Status(id: 2000132, type: 'Movie Status Notification Event Session'),
      Status(id: 2000133, type: 'Movie Shoot Day Summary Session'),
      Status(id: 2000134, type: 'Color Type'),
      Status(id: 2000135, type: 'Default User Type Permission'),
      Status(id: 2000136, type: 'Client Log'),
      Status(id: 2000137, type: 'Equipment Transaction'),
      Status(id: 2000138, type: 'Property Transaction'),
      Status(id: 2000139, type: 'Resource Biometric Record'),
      Status(id: 2000140, type: 'Resource Identification Document'),
      Status(id: 2000141, type: 'Ml Model Training Session'),
    ];
  }

  List<Status> GetWithBlankPredefinedResourceTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 2000001, type: 'Company'),
      Status(id: 2000002, type: 'User'),
      Status(id: 2000003, type: 'State'),
      Status(id: 2000004, type: 'Movie'),
      Status(id: 2000005, type: 'Movie Artist Or Technician'),
      Status(id: 2000006, type: 'Movie User'),
      Status(id: 2000007, type: 'Movie Unit'),
      Status(id: 2000008, type: 'Movie Shoot Day Scene'),
      Status(id: 2000009, type: 'Movie Shoot Day Requirement'),
      Status(id: 2000010, type: 'Movie Shoot Day Expense'),
      Status(id: 2000011, type: 'Movie Shoot Day Budget'),
      Status(id: 2000012, type: 'Movie Shoot Day Artist Or Technician'),
      Status(id: 2000013, type: 'Movie Shoot Day'),
      Status(id: 2000014, type: 'Movie Scene Artist Or Technician'),
      Status(id: 2000015, type: 'Movie Scene'),
      Status(id: 2000016, type: 'Movie Location'),
      Status(id: 2000017, type: 'Movie Genre'),
      Status(id: 2000018, type: 'Contract'),
      Status(id: 2000019, type: 'Movie Budget Division'),
      Status(id: 2000020, type: 'Movie Budget Category Expense'),
      Status(id: 2000021, type: 'Movie Budget Category'),
      Status(id: 2000022, type: 'Movie Artist Or Technician Rate'),
      Status(id: 2000023, type: 'User Permission'),
      Status(id: 2000024, type: 'Technician Type Rate'),
      Status(id: 2000025, type: 'Technician Type'),
      Status(id: 2000026, type: 'Technician Rate'),
      Status(id: 2000027, type: 'Technician'),
      Status(id: 2000028, type: 'Genre'),
      Status(id: 2000029, type: 'Expense Type'),
      Status(id: 2000030, type: 'Contract Template'),
      Status(id: 2000031, type: 'Budget Division'),
      Status(id: 2000032, type: 'Budget Category Expense'),
      Status(id: 2000033, type: 'Budget Category'),
      Status(id: 2000034, type: 'Artist Type'),
      Status(id: 2000035, type: 'Artist'),
      Status(id: 2000036, type: 'Audit Operation'),
      Status(id: 2000037, type: 'Configuration Group'),
      Status(id: 2000038, type: 'Configuration Item'),
      Status(id: 2000039, type: 'Enum Group'),
      Status(id: 2000040, type: 'Enum Type'),
      Status(id: 2000041, type: 'Job'),
      Status(id: 2000042, type: 'Job Attachment'),
      Status(id: 2000043, type: 'Job Notification Email'),
      Status(id: 2000044, type: 'Job Template'),
      Status(id: 2000045, type: 'Job Template Parameter'),
      Status(id: 2000046, type: 'Meta Data'),
      Status(id: 2000047, type: 'Meta Data Group'),
      Status(id: 2000048, type: 'Meta Data Group Section'),
      Status(id: 2000049, type: 'Realtime Message'),
      Status(id: 2000050, type: 'Scheduled Job'),
      Status(id: 2000051, type: 'Job Template Category'),
      Status(id: 2000052, type: 'Saved Job'),
      Status(id: 2000053, type: 'Message To Send'),
      Status(id: 2000054, type: 'Artist Rate'),
      Status(id: 2000055, type: 'Artist Type Rate'),
      Status(id: 2000056, type: 'Movie Shoot Day Scene Artist Or Technician'),
      Status(id: 2000057, type: 'Saved Job Notification Email'),
      Status(id: 2000058, type: 'Scheduled Job History'),
      Status(id: 2000059, type: 'Scheduled Job Notification Email'),
      Status(id: 2000060, type: 'Company Storage Configuration'),
      Status(id: 2000061, type: 'Mail Server'),
      Status(id: 2000062, type: 'Artist Group Type'),
      Status(id: 2000063, type: 'Technician Group Type'),
      Status(id: 2000064, type: 'Movie Artist Rate'),
      Status(id: 2000065, type: 'Movie Technician'),
      Status(id: 2000066, type: 'Movie Artist'),
      Status(id: 2000067, type: 'Movie Equipment'),
      Status(id: 2000068, type: 'Movie Equipment Rate'),
      Status(id: 2000069, type: 'Movie Scene Equipment'),
      Status(id: 2000070, type: 'Movie Scene Technician'),
      Status(id: 2000071, type: 'Movie Scene Requirement'),
      Status(id: 2000072, type: 'Movie Shoot Day Artist'),
      Status(id: 2000073, type: 'Movie Shoot Day Technician'),
      Status(id: 2000074, type: 'Movie Shoot Day Equipment'),
      Status(id: 2000075, type: 'Movie Technician Rate'),
      Status(id: 2000076, type: 'Movie Scene Artist'),
      Status(id: 2000077, type: 'Equipment'),
      Status(id: 2000078, type: 'Equipment Rate'),
      Status(id: 2000079, type: 'Equipment Type'),
      Status(id: 2000080, type: 'Equipment Type Rate'),
      Status(id: 2000081, type: 'Equipment Group Type'),
      Status(id: 2000082, type: 'Vendor'),
      Status(id: 2000083, type: 'Vendor Type'),
      Status(id: 2000084, type: 'Movie Vendor'),
      Status(id: 2000085, type: 'Note Attachment'),
      Status(id: 2000086, type: 'Vendor Group Type'),
      Status(id: 2000087, type: 'Movie Setting'),
      Status(id: 2000088, type: 'Movie Shoot Day Approval'),
      Status(id: 2000089, type: 'Movie Scene Vendor'),
      Status(id: 2000090, type: 'Movie Shoot Day Vendor'),
      Status(id: 2000091, type: 'Vendor Type Rate'),
      Status(id: 2000092, type: 'Vendor Rate'),
      Status(id: 2000093, type: 'Movie Vendor Rate'),
      Status(id: 2000094, type: 'Single Sign On Server'),
      Status(id: 2000095, type: 'Message Template'),
      Status(id: 2000096, type: 'Audit Operation Detail'),
      Status(id: 2000097, type: 'File Attachment'),
      Status(id: 2000098, type: 'File Attachment Folder'),
      Status(id: 2000099, type: 'Sms Server'),
      Status(id: 2000100, type: 'Movie Shoot Day Script File'),
      Status(id: 2000101, type: 'Movie Script File'),
      Status(id: 2000102, type: 'Digital Signature Server'),
      Status(id: 2000103, type: 'Statement Template'),
      Status(id: 2000104, type: 'Movie Voucher'),
      Status(id: 2000105, type: 'Chat'),
      Status(id: 2000106, type: 'Chat Message Status'),
      Status(id: 2000107, type: 'Chat User'),
      Status(id: 2000108, type: 'Chat Message'),
      Status(id: 2000109, type: 'Ledger Type'),
      Status(id: 2000110, type: 'Push Notification Server'),
      Status(id: 2000111, type: 'Voice Notification Server'),
      Status(id: 2000112, type: 'Whats App Notification Server'),
      Status(id: 2000113, type: 'Property'),
      Status(id: 2000114, type: 'Property Rate'),
      Status(id: 2000115, type: 'Property Type'),
      Status(id: 2000116, type: 'Property Type Rate'),
      Status(id: 2000117, type: 'Property Group Type'),
      Status(id: 2000118, type: 'Movie Property'),
      Status(id: 2000119, type: 'Movie Property Rate'),
      Status(id: 2000120, type: 'Movie Scene Property'),
      Status(id: 2000121, type: 'Movie Shoot Day Property'),
      Status(id: 2000122, type: 'Anonymous User'),
      Status(id: 2000123, type: 'Pre Production Status Type'),
      Status(id: 2000124, type: 'Production Status Type'),
      Status(id: 2000125, type: 'Post Production Status Type'),
      Status(id: 2000126, type: 'Department'),
      Status(id: 2000127, type: 'Movie Location Category'),
      Status(id: 2000128, type: 'Movie Location Candidate'),
      Status(id: 2000130, type: 'Movie Commitment Task'),
      Status(id: 2000131, type: 'Movie Status Notification Event User'),
      Status(id: 2000132, type: 'Movie Status Notification Event Session'),
      Status(id: 2000133, type: 'Movie Shoot Day Summary Session'),
      Status(id: 2000134, type: 'Color Type'),
      Status(id: 2000135, type: 'Default User Type Permission'),
      Status(id: 2000136, type: 'Client Log'),
      Status(id: 2000137, type: 'Equipment Transaction'),
      Status(id: 2000138, type: 'Property Transaction'),
      Status(id: 2000139, type: 'Resource Biometric Record'),
      Status(id: 2000140, type: 'Resource Identification Document'),
      Status(id: 2000141, type: 'Ml Model Training Session'),
    ];
  }

  List<Status> GetPredefinedResourceTypes() {
    return [
      Status(id: 2000001, type: 'Company'),
      Status(id: 2000002, type: 'User'),
      Status(id: 2000003, type: 'State'),
      Status(id: 2000004, type: 'Movie'),
      Status(id: 2000005, type: 'Movie Artist Or Technician'),
      Status(id: 2000006, type: 'Movie User'),
      Status(id: 2000007, type: 'Movie Unit'),
      Status(id: 2000008, type: 'Movie Shoot Day Scene'),
      Status(id: 2000009, type: 'Movie Shoot Day Requirement'),
      Status(id: 2000010, type: 'Movie Shoot Day Expense'),
      Status(id: 2000011, type: 'Movie Shoot Day Budget'),
      Status(id: 2000012, type: 'Movie Shoot Day Artist Or Technician'),
      Status(id: 2000013, type: 'Movie Shoot Day'),
      Status(id: 2000014, type: 'Movie Scene Artist Or Technician'),
      Status(id: 2000015, type: 'Movie Scene'),
      Status(id: 2000016, type: 'Movie Location'),
      Status(id: 2000017, type: 'Movie Genre'),
      Status(id: 2000018, type: 'Contract'),
      Status(id: 2000019, type: 'Movie Budget Division'),
      Status(id: 2000020, type: 'Movie Budget Category Expense'),
      Status(id: 2000021, type: 'Movie Budget Category'),
      Status(id: 2000022, type: 'Movie Artist Or Technician Rate'),
      Status(id: 2000023, type: 'User Permission'),
      Status(id: 2000024, type: 'Technician Type Rate'),
      Status(id: 2000025, type: 'Technician Type'),
      Status(id: 2000026, type: 'Technician Rate'),
      Status(id: 2000027, type: 'Technician'),
      Status(id: 2000028, type: 'Genre'),
      Status(id: 2000029, type: 'Expense Type'),
      Status(id: 2000030, type: 'Contract Template'),
      Status(id: 2000031, type: 'Budget Division'),
      Status(id: 2000032, type: 'Budget Category Expense'),
      Status(id: 2000033, type: 'Budget Category'),
      Status(id: 2000034, type: 'Artist Type'),
      Status(id: 2000035, type: 'Artist'),
      Status(id: 2000036, type: 'Audit Operation'),
      Status(id: 2000037, type: 'Configuration Group'),
      Status(id: 2000038, type: 'Configuration Item'),
      Status(id: 2000039, type: 'Enum Group'),
      Status(id: 2000040, type: 'Enum Type'),
      Status(id: 2000041, type: 'Job'),
      Status(id: 2000042, type: 'Job Attachment'),
      Status(id: 2000043, type: 'Job Notification Email'),
      Status(id: 2000044, type: 'Job Template'),
      Status(id: 2000045, type: 'Job Template Parameter'),
      Status(id: 2000046, type: 'Meta Data'),
      Status(id: 2000047, type: 'Meta Data Group'),
      Status(id: 2000048, type: 'Meta Data Group Section'),
      Status(id: 2000049, type: 'Realtime Message'),
      Status(id: 2000050, type: 'Scheduled Job'),
      Status(id: 2000051, type: 'Job Template Category'),
      Status(id: 2000052, type: 'Saved Job'),
      Status(id: 2000053, type: 'Message To Send'),
      Status(id: 2000054, type: 'Artist Rate'),
      Status(id: 2000055, type: 'Artist Type Rate'),
      Status(id: 2000056, type: 'Movie Shoot Day Scene Artist Or Technician'),
      Status(id: 2000057, type: 'Saved Job Notification Email'),
      Status(id: 2000058, type: 'Scheduled Job History'),
      Status(id: 2000059, type: 'Scheduled Job Notification Email'),
      Status(id: 2000060, type: 'Company Storage Configuration'),
      Status(id: 2000061, type: 'Mail Server'),
      Status(id: 2000062, type: 'Artist Group Type'),
      Status(id: 2000063, type: 'Technician Group Type'),
      Status(id: 2000064, type: 'Movie Artist Rate'),
      Status(id: 2000065, type: 'Movie Technician'),
      Status(id: 2000066, type: 'Movie Artist'),
      Status(id: 2000067, type: 'Movie Equipment'),
      Status(id: 2000068, type: 'Movie Equipment Rate'),
      Status(id: 2000069, type: 'Movie Scene Equipment'),
      Status(id: 2000070, type: 'Movie Scene Technician'),
      Status(id: 2000071, type: 'Movie Scene Requirement'),
      Status(id: 2000072, type: 'Movie Shoot Day Artist'),
      Status(id: 2000073, type: 'Movie Shoot Day Technician'),
      Status(id: 2000074, type: 'Movie Shoot Day Equipment'),
      Status(id: 2000075, type: 'Movie Technician Rate'),
      Status(id: 2000076, type: 'Movie Scene Artist'),
      Status(id: 2000077, type: 'Equipment'),
      Status(id: 2000078, type: 'Equipment Rate'),
      Status(id: 2000079, type: 'Equipment Type'),
      Status(id: 2000080, type: 'Equipment Type Rate'),
      Status(id: 2000081, type: 'Equipment Group Type'),
      Status(id: 2000082, type: 'Vendor'),
      Status(id: 2000083, type: 'Vendor Type'),
      Status(id: 2000084, type: 'Movie Vendor'),
      Status(id: 2000085, type: 'Note Attachment'),
      Status(id: 2000086, type: 'Vendor Group Type'),
      Status(id: 2000087, type: 'Movie Setting'),
      Status(id: 2000088, type: 'Movie Shoot Day Approval'),
      Status(id: 2000089, type: 'Movie Scene Vendor'),
      Status(id: 2000090, type: 'Movie Shoot Day Vendor'),
      Status(id: 2000091, type: 'Vendor Type Rate'),
      Status(id: 2000092, type: 'Vendor Rate'),
      Status(id: 2000093, type: 'Movie Vendor Rate'),
      Status(id: 2000094, type: 'Single Sign On Server'),
      Status(id: 2000095, type: 'Message Template'),
      Status(id: 2000096, type: 'Audit Operation Detail'),
      Status(id: 2000097, type: 'File Attachment'),
      Status(id: 2000098, type: 'File Attachment Folder'),
      Status(id: 2000099, type: 'Sms Server'),
      Status(id: 2000100, type: 'Movie Shoot Day Script File'),
      Status(id: 2000101, type: 'Movie Script File'),
      Status(id: 2000102, type: 'Digital Signature Server'),
      Status(id: 2000103, type: 'Statement Template'),
      Status(id: 2000104, type: 'Movie Voucher'),
      Status(id: 2000105, type: 'Chat'),
      Status(id: 2000106, type: 'Chat Message Status'),
      Status(id: 2000107, type: 'Chat User'),
      Status(id: 2000108, type: 'Chat Message'),
      Status(id: 2000109, type: 'Ledger Type'),
      Status(id: 2000110, type: 'Push Notification Server'),
      Status(id: 2000111, type: 'Voice Notification Server'),
      Status(id: 2000112, type: 'Whats App Notification Server'),
      Status(id: 2000113, type: 'Property'),
      Status(id: 2000114, type: 'Property Rate'),
      Status(id: 2000115, type: 'Property Type'),
      Status(id: 2000116, type: 'Property Type Rate'),
      Status(id: 2000117, type: 'Property Group Type'),
      Status(id: 2000118, type: 'Movie Property'),
      Status(id: 2000119, type: 'Movie Property Rate'),
      Status(id: 2000120, type: 'Movie Scene Property'),
      Status(id: 2000121, type: 'Movie Shoot Day Property'),
      Status(id: 2000122, type: 'Anonymous User'),
      Status(id: 2000123, type: 'Pre Production Status Type'),
      Status(id: 2000124, type: 'Production Status Type'),
      Status(id: 2000125, type: 'Post Production Status Type'),
      Status(id: 2000126, type: 'Department'),
      Status(id: 2000127, type: 'Movie Location Category'),
      Status(id: 2000128, type: 'Movie Location Candidate'),
      Status(id: 2000130, type: 'Movie Commitment Task'),
      Status(id: 2000131, type: 'Movie Status Notification Event User'),
      Status(id: 2000132, type: 'Movie Status Notification Event Session'),
      Status(id: 2000133, type: 'Movie Shoot Day Summary Session'),
      Status(id: 2000134, type: 'Color Type'),
      Status(id: 2000135, type: 'Default User Type Permission'),
      Status(id: 2000136, type: 'Client Log'),
      Status(id: 2000137, type: 'Equipment Transaction'),
      Status(id: 2000138, type: 'Property Transaction'),
      Status(id: 2000139, type: 'Resource Biometric Record'),
      Status(id: 2000140, type: 'Resource Identification Document'),
      Status(id: 2000141, type: 'Ml Model Training Session'),
    ];
  }

  List<Status> GetAllPredefinedSearchIndexServerTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 7500001, type: 'Lucence'),
      Status(id: 7500002, type: 'Elastic Search'),
      Status(id: 7500003, type: 'Azure Search'),
    ];
  }

  List<Status> GetWithBlankPredefinedSearchIndexServerTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 7500001, type: 'Lucence'),
      Status(id: 7500002, type: 'Elastic Search'),
      Status(id: 7500003, type: 'Azure Search'),
    ];
  }

  List<Status> GetPredefinedSearchIndexServerTypes() {
    return [
      Status(id: 7500001, type: 'Lucence'),
      Status(id: 7500002, type: 'Elastic Search'),
      Status(id: 7500003, type: 'Azure Search'),
    ];
  }

  List<Status> GetAllPredefinedSearchIndexTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 7500001, type: 'Contract'),
    ];
  }

  List<Status> GetWithBlankPredefinedSearchIndexTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 7500001, type: 'Contract'),
    ];
  }

  List<Status> GetPredefinedSearchIndexTypes() {
    return [
      Status(id: 7500001, type: 'Contract'),
    ];
  }

  List<Status> GetAllPredefinedShootingExpenseTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 1500001, type: 'Bata'),
      Status(id: 1500002, type: 'Per Day Expense'),
      Status(id: 1500003, type: 'Art Department'),
      Status(id: 1500004, type: 'Transport'),
      Status(id: 1500005, type: 'Costume'),
      Status(id: 1500006, type: 'Catering'),
      Status(id: 1500007, type: 'Vehicles'),
      Status(id: 1500008, type: 'Other'),
    ];
  }

  List<Status> GetWithBlankPredefinedShootingExpenseTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 1500001, type: 'Bata'),
      Status(id: 1500002, type: 'Per Day Expense'),
      Status(id: 1500003, type: 'Art Department'),
      Status(id: 1500004, type: 'Transport'),
      Status(id: 1500005, type: 'Costume'),
      Status(id: 1500006, type: 'Catering'),
      Status(id: 1500007, type: 'Vehicles'),
      Status(id: 1500008, type: 'Other'),
    ];
  }

  List<Status> GetPredefinedShootingExpenseTypes() {
    return [
      Status(id: 1500001, type: 'Bata'),
      Status(id: 1500002, type: 'Per Day Expense'),
      Status(id: 1500003, type: 'Art Department'),
      Status(id: 1500004, type: 'Transport'),
      Status(id: 1500005, type: 'Costume'),
      Status(id: 1500006, type: 'Catering'),
      Status(id: 1500007, type: 'Vehicles'),
      Status(id: 1500008, type: 'Other'),
    ];
  }

  List<Status> GetAllPredefinedSingleSignOnServerTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 5300001, type: 'Google'),
      Status(id: 5300002, type: 'Microsoft'),
      Status(id: 5300003, type: 'Office360Active Directory'),
      Status(id: 5300004, type: 'Self Hosted Active Directory'),
    ];
  }

  List<Status> GetWithBlankPredefinedSingleSignOnServerTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 5300001, type: 'Google'),
      Status(id: 5300002, type: 'Microsoft'),
      Status(id: 5300003, type: 'Office360Active Directory'),
      Status(id: 5300004, type: 'Self Hosted Active Directory'),
    ];
  }

  List<Status> GetPredefinedSingleSignOnServerTypes() {
    return [
      Status(id: 5300001, type: 'Google'),
      Status(id: 5300002, type: 'Microsoft'),
      Status(id: 5300003, type: 'Office360Active Directory'),
      Status(id: 5300004, type: 'Self Hosted Active Directory'),
    ];
  }

  List<Status> GetAllPredefinedSmsAndVoiceServerTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 5900001, type: 'Twilio'),
      Status(id: 5900002, type: 'Custom'),
    ];
  }

  List<Status> GetWithBlankPredefinedSmsAndVoiceServerTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 5900001, type: 'Twilio'),
      Status(id: 5900002, type: 'Custom'),
    ];
  }

  List<Status> GetPredefinedSmsAndVoiceServerTypes() {
    return [
      Status(id: 5900001, type: 'Twilio'),
      Status(id: 5900002, type: 'Custom'),
    ];
  }

  List<Status> GetAllPredefinedSMSNotificationStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 6800001, type: 'Not Needed'),
      Status(id: 6800002, type: 'Scheduled'),
      Status(id: 6800003, type: 'Sent'),
      Status(id: 6800004, type: 'Confirmed'),
      Status(id: 6800005, type: 'Not Confirmed'),
      Status(id: 6800006, type: 'Viewed And Not Confirmed'),
      Status(id: 6800007, type: 'Declined'),
      Status(id: 6800008, type: 'Notification Error'),
      Status(id: 6800009, type: 'Server Not Configured'),
    ];
  }

  List<Status> GetWithBlankPredefinedSMSNotificationStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 6800001, type: 'Not Needed'),
      Status(id: 6800002, type: 'Scheduled'),
      Status(id: 6800003, type: 'Sent'),
      Status(id: 6800004, type: 'Confirmed'),
      Status(id: 6800005, type: 'Not Confirmed'),
      Status(id: 6800006, type: 'Viewed And Not Confirmed'),
      Status(id: 6800007, type: 'Declined'),
      Status(id: 6800008, type: 'Notification Error'),
      Status(id: 6800009, type: 'Server Not Configured'),
    ];
  }

  List<Status> GetPredefinedSMSNotificationStatusTypes() {
    return [
      Status(id: 6800001, type: 'Not Needed'),
      Status(id: 6800002, type: 'Scheduled'),
      Status(id: 6800003, type: 'Sent'),
      Status(id: 6800004, type: 'Confirmed'),
      Status(id: 6800005, type: 'Not Confirmed'),
      Status(id: 6800006, type: 'Viewed And Not Confirmed'),
      Status(id: 6800007, type: 'Declined'),
      Status(id: 6800008, type: 'Notification Error'),
      Status(id: 6800009, type: 'Server Not Configured'),
    ];
  }

  List<Status> GetAllPredefinedStatementTemplateTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 6400001, type: 'Voucher'),
    ];
  }

  List<Status> GetWithBlankPredefinedStatementTemplateTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 6400001, type: 'Voucher'),
    ];
  }

  List<Status> GetPredefinedStatementTemplateTypes() {
    return [
      Status(id: 6400001, type: 'Voucher'),
    ];
  }

  List<Status> GetAllPredefinedTaskForTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 8400000, type: 'General'),
      Status(id: 8400001, type: 'Movie Artist'),
      Status(id: 8400002, type: 'Movie Technician'),
      Status(id: 8400003, type: 'Movie Equipment'),
      Status(id: 8400004, type: 'Movie Vendor'),
      Status(id: 8400006, type: 'Movie Location'),
      Status(id: 8400007, type: 'Movie Location Candidate'),
      Status(id: 84000084, type: 'Movie Property'),
    ];
  }

  List<Status> GetWithBlankPredefinedTaskForTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 8400000, type: 'General'),
      Status(id: 8400001, type: 'Movie Artist'),
      Status(id: 8400002, type: 'Movie Technician'),
      Status(id: 8400003, type: 'Movie Equipment'),
      Status(id: 8400004, type: 'Movie Vendor'),
      Status(id: 8400006, type: 'Movie Location'),
      Status(id: 8400007, type: 'Movie Location Candidate'),
      Status(id: 84000084, type: 'Movie Property'),
    ];
  }

  List<Status> GetPredefinedTaskForTypes() {
    return [
      Status(id: 8400000, type: 'General'),
      Status(id: 8400001, type: 'Movie Artist'),
      Status(id: 8400002, type: 'Movie Technician'),
      Status(id: 8400003, type: 'Movie Equipment'),
      Status(id: 8400004, type: 'Movie Vendor'),
      Status(id: 8400006, type: 'Movie Location'),
      Status(id: 8400007, type: 'Movie Location Candidate'),
      Status(id: 84000084, type: 'Movie Property'),
    ];
  }

  List<Status> GetAllPredefinedTechnicianGroupTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 3600001, type: 'Custom'),
      Status(id: 3600002, type: 'Production'),
      Status(id: 3600003, type: 'Direction'),
      Status(id: 3600004, type: 'Dop'),
      Status(id: 3600005, type: 'Production Design'),
      Status(id: 3600006, type: 'Wardrobe'),
      Status(id: 3600007, type: 'Hair And Makup'),
      Status(id: 3600008, type: 'On Set Communication'),
      Status(id: 3600009, type: 'Accounts'),
      Status(id: 3600010, type: 'Animal Handlers'),
      Status(id: 3600011, type: 'Special Effects'),
      Status(id: 3600012, type: 'Choreography And Stunt'),
      Status(id: 3600013, type: 'Publicity Stills And Making'),
      Status(id: 3600014, type: 'Vfx'),
      Status(id: 3600015, type: 'Special Equipments'),
      Status(id: 3600016, type: 'Sound'),
      Status(id: 3600017, type: 'Vehicles'),
      Status(id: 3600018, type: 'Catering'),
    ];
  }

  List<Status> GetWithBlankPredefinedTechnicianGroupTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 3600001, type: 'Custom'),
      Status(id: 3600002, type: 'Production'),
      Status(id: 3600003, type: 'Direction'),
      Status(id: 3600004, type: 'Dop'),
      Status(id: 3600005, type: 'Production Design'),
      Status(id: 3600006, type: 'Wardrobe'),
      Status(id: 3600007, type: 'Hair And Makup'),
      Status(id: 3600008, type: 'On Set Communication'),
      Status(id: 3600009, type: 'Accounts'),
      Status(id: 3600010, type: 'Animal Handlers'),
      Status(id: 3600011, type: 'Special Effects'),
      Status(id: 3600012, type: 'Choreography And Stunt'),
      Status(id: 3600013, type: 'Publicity Stills And Making'),
      Status(id: 3600014, type: 'Vfx'),
      Status(id: 3600015, type: 'Special Equipments'),
      Status(id: 3600016, type: 'Sound'),
      Status(id: 3600017, type: 'Vehicles'),
      Status(id: 3600018, type: 'Catering'),
    ];
  }

  List<Status> GetPredefinedTechnicianGroupTypes() {
    return [
      Status(id: 3600001, type: 'Custom'),
      Status(id: 3600002, type: 'Production'),
      Status(id: 3600003, type: 'Direction'),
      Status(id: 3600004, type: 'Dop'),
      Status(id: 3600005, type: 'Production Design'),
      Status(id: 3600006, type: 'Wardrobe'),
      Status(id: 3600007, type: 'Hair And Makup'),
      Status(id: 3600008, type: 'On Set Communication'),
      Status(id: 3600009, type: 'Accounts'),
      Status(id: 3600010, type: 'Animal Handlers'),
      Status(id: 3600011, type: 'Special Effects'),
      Status(id: 3600012, type: 'Choreography And Stunt'),
      Status(id: 3600013, type: 'Publicity Stills And Making'),
      Status(id: 3600014, type: 'Vfx'),
      Status(id: 3600015, type: 'Special Equipments'),
      Status(id: 3600016, type: 'Sound'),
      Status(id: 3600017, type: 'Vehicles'),
      Status(id: 3600018, type: 'Catering'),
    ];
  }

  List<Status> GetAllPredefinedTechnicianTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 1600000, type: 'Custom'),
      Status(id: 1600001, type: 'Executive Producer'),
      Status(id: 1600002, type: 'Line Producer'),
      Status(id: 1600003, type: 'Junior Line Producer'),
      Status(id: 1600004, type: 'Production Coordinator'),
      Status(id: 1600005, type: 'Production Controller'),
      Status(id: 1600010, type: 'Director'),
      Status(id: 1600011, type: 'Associate Directors'),
      Status(id: 1600012, type: 'Firstst AD'),
      Status(id: 1600013, type: 'Secondn AD'),
      Status(id: 1600014, type: 'Second Second AD'),
      Status(id: 1600015, type: 'Da And Script Supervisor'),
      Status(id: 1600016, type: 'Third AD'),
      Status(id: 1600017, type: 'Assistant Director'),
      Status(id: 1600020, type: 'DOP'),
      Status(id: 1600021, type: 'First AC'),
      Status(id: 1600022, type: 'Focus Puller'),
      Status(id: 1600023, type: 'Dop Assistants'),
      Status(id: 1600024, type: 'Camera Operator'),
      Status(id: 1600030, type: 'Production Designer'),
      Status(id: 1600031, type: 'Art Assistant'),
      Status(id: 1600032, type: 'Art Team'),
      Status(id: 1600040, type: 'Costume Designer'),
      Status(id: 1600041, type: 'Secondary Costume Designer'),
      Status(id: 1600042, type: 'Wardrobe Assistants'),
      Status(id: 1600043, type: 'Dressman Or Tailor'),
      Status(id: 1600044, type: 'Jewellery'),
      Status(id: 1600050, type: 'Hmu Designer'),
      Status(id: 1600051, type: 'Hmu Hod'),
      Status(id: 1600060, type: 'Walkie Set Up'),
      Status(id: 1600070, type: 'Location Accountants'),
      Status(id: 1600080, type: 'Horse Wranglers'),
      Status(id: 1600081, type: 'Elephant Mahout'),
      Status(id: 1600090, type: 'Truss'),
      Status(id: 1600091, type: 'Fire'),
      Status(id: 1600100, type: 'Choreography Designer'),
      Status(id: 1600101, type: 'Choreography Assistants'),
      Status(id: 1600102, type: 'Action Master'),
      Status(id: 1600103, type: 'Stunt Team'),
      Status(id: 1600110, type: 'Making'),
      Status(id: 1600111, type: 'Stills'),
      Status(id: 1600120, type: 'Supervisor'),
      Status(id: 1600121, type: 'Post Production Supervisor'),
      Status(id: 1600130, type: 'Jimmy Jib'),
      Status(id: 1600131, type: 'Steadi Cam'),
      Status(id: 1600132, type: 'Head Rigger'),
      Status(id: 1600133, type: 'Gaffer'),
      Status(id: 1600134, type: 'Drone'),
      Status(id: 1600135, type: 'Pather Dolly'),
      Status(id: 1600140, type: 'Location Sound'),
      Status(id: 1600141, type: 'Sound Assistant'),
      Status(id: 1600150, type: 'Vanity Van'),
      Status(id: 1600151, type: 'Generator'),
      Status(id: 1600152, type: 'Production Truck'),
      Status(id: 1600153, type: 'Jimmy Jib Vehicle'),
      Status(id: 1600154, type: 'Ambulance'),
      Status(id: 1600160, type: 'Breakfast Caterer'),
      Status(id: 1600161, type: 'Lunch Caterer'),
      Status(id: 1600162, type: 'Snacks Caterer'),
      Status(id: 1600163, type: 'Dinner Caterer'),
    ];
  }

  List<Status> GetWithBlankPredefinedTechnicianTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 1600000, type: 'Custom'),
      Status(id: 1600001, type: 'Executive Producer'),
      Status(id: 1600002, type: 'Line Producer'),
      Status(id: 1600003, type: 'Junior Line Producer'),
      Status(id: 1600004, type: 'Production Coordinator'),
      Status(id: 1600005, type: 'Production Controller'),
      Status(id: 1600010, type: 'Director'),
      Status(id: 1600011, type: 'Associate Directors'),
      Status(id: 1600012, type: 'Firstst AD'),
      Status(id: 1600013, type: 'Secondn AD'),
      Status(id: 1600014, type: 'Second Second AD'),
      Status(id: 1600015, type: 'Da And Script Supervisor'),
      Status(id: 1600016, type: 'Third AD'),
      Status(id: 1600017, type: 'Assistant Director'),
      Status(id: 1600020, type: 'DOP'),
      Status(id: 1600021, type: 'First AC'),
      Status(id: 1600022, type: 'Focus Puller'),
      Status(id: 1600023, type: 'Dop Assistants'),
      Status(id: 1600024, type: 'Camera Operator'),
      Status(id: 1600030, type: 'Production Designer'),
      Status(id: 1600031, type: 'Art Assistant'),
      Status(id: 1600032, type: 'Art Team'),
      Status(id: 1600040, type: 'Costume Designer'),
      Status(id: 1600041, type: 'Secondary Costume Designer'),
      Status(id: 1600042, type: 'Wardrobe Assistants'),
      Status(id: 1600043, type: 'Dressman Or Tailor'),
      Status(id: 1600044, type: 'Jewellery'),
      Status(id: 1600050, type: 'Hmu Designer'),
      Status(id: 1600051, type: 'Hmu Hod'),
      Status(id: 1600060, type: 'Walkie Set Up'),
      Status(id: 1600070, type: 'Location Accountants'),
      Status(id: 1600080, type: 'Horse Wranglers'),
      Status(id: 1600081, type: 'Elephant Mahout'),
      Status(id: 1600090, type: 'Truss'),
      Status(id: 1600091, type: 'Fire'),
      Status(id: 1600100, type: 'Choreography Designer'),
      Status(id: 1600101, type: 'Choreography Assistants'),
      Status(id: 1600102, type: 'Action Master'),
      Status(id: 1600103, type: 'Stunt Team'),
      Status(id: 1600110, type: 'Making'),
      Status(id: 1600111, type: 'Stills'),
      Status(id: 1600120, type: 'Supervisor'),
      Status(id: 1600121, type: 'Post Production Supervisor'),
      Status(id: 1600130, type: 'Jimmy Jib'),
      Status(id: 1600131, type: 'Steadi Cam'),
      Status(id: 1600132, type: 'Head Rigger'),
      Status(id: 1600133, type: 'Gaffer'),
      Status(id: 1600134, type: 'Drone'),
      Status(id: 1600135, type: 'Pather Dolly'),
      Status(id: 1600140, type: 'Location Sound'),
      Status(id: 1600141, type: 'Sound Assistant'),
      Status(id: 1600150, type: 'Vanity Van'),
      Status(id: 1600151, type: 'Generator'),
      Status(id: 1600152, type: 'Production Truck'),
      Status(id: 1600153, type: 'Jimmy Jib Vehicle'),
      Status(id: 1600154, type: 'Ambulance'),
      Status(id: 1600160, type: 'Breakfast Caterer'),
      Status(id: 1600161, type: 'Lunch Caterer'),
      Status(id: 1600162, type: 'Snacks Caterer'),
      Status(id: 1600163, type: 'Dinner Caterer'),
    ];
  }

  List<Status> GetPredefinedTechnicianTypes() {
    return [
      Status(id: 1600000, type: 'Custom'),
      Status(id: 1600001, type: 'Executive Producer'),
      Status(id: 1600002, type: 'Line Producer'),
      Status(id: 1600003, type: 'Junior Line Producer'),
      Status(id: 1600004, type: 'Production Coordinator'),
      Status(id: 1600005, type: 'Production Controller'),
      Status(id: 1600010, type: 'Director'),
      Status(id: 1600011, type: 'Associate Directors'),
      Status(id: 1600012, type: 'Firstst AD'),
      Status(id: 1600013, type: 'Secondn AD'),
      Status(id: 1600014, type: 'Second Second AD'),
      Status(id: 1600015, type: 'Da And Script Supervisor'),
      Status(id: 1600016, type: 'Third AD'),
      Status(id: 1600017, type: 'Assistant Director'),
      Status(id: 1600020, type: 'DOP'),
      Status(id: 1600021, type: 'First AC'),
      Status(id: 1600022, type: 'Focus Puller'),
      Status(id: 1600023, type: 'Dop Assistants'),
      Status(id: 1600024, type: 'Camera Operator'),
      Status(id: 1600030, type: 'Production Designer'),
      Status(id: 1600031, type: 'Art Assistant'),
      Status(id: 1600032, type: 'Art Team'),
      Status(id: 1600040, type: 'Costume Designer'),
      Status(id: 1600041, type: 'Secondary Costume Designer'),
      Status(id: 1600042, type: 'Wardrobe Assistants'),
      Status(id: 1600043, type: 'Dressman Or Tailor'),
      Status(id: 1600044, type: 'Jewellery'),
      Status(id: 1600050, type: 'Hmu Designer'),
      Status(id: 1600051, type: 'Hmu Hod'),
      Status(id: 1600060, type: 'Walkie Set Up'),
      Status(id: 1600070, type: 'Location Accountants'),
      Status(id: 1600080, type: 'Horse Wranglers'),
      Status(id: 1600081, type: 'Elephant Mahout'),
      Status(id: 1600090, type: 'Truss'),
      Status(id: 1600091, type: 'Fire'),
      Status(id: 1600100, type: 'Choreography Designer'),
      Status(id: 1600101, type: 'Choreography Assistants'),
      Status(id: 1600102, type: 'Action Master'),
      Status(id: 1600103, type: 'Stunt Team'),
      Status(id: 1600110, type: 'Making'),
      Status(id: 1600111, type: 'Stills'),
      Status(id: 1600120, type: 'Supervisor'),
      Status(id: 1600121, type: 'Post Production Supervisor'),
      Status(id: 1600130, type: 'Jimmy Jib'),
      Status(id: 1600131, type: 'Steadi Cam'),
      Status(id: 1600132, type: 'Head Rigger'),
      Status(id: 1600133, type: 'Gaffer'),
      Status(id: 1600134, type: 'Drone'),
      Status(id: 1600135, type: 'Pather Dolly'),
      Status(id: 1600140, type: 'Location Sound'),
      Status(id: 1600141, type: 'Sound Assistant'),
      Status(id: 1600150, type: 'Vanity Van'),
      Status(id: 1600151, type: 'Generator'),
      Status(id: 1600152, type: 'Production Truck'),
      Status(id: 1600153, type: 'Jimmy Jib Vehicle'),
      Status(id: 1600154, type: 'Ambulance'),
      Status(id: 1600160, type: 'Breakfast Caterer'),
      Status(id: 1600161, type: 'Lunch Caterer'),
      Status(id: 1600162, type: 'Snacks Caterer'),
      Status(id: 1600163, type: 'Dinner Caterer'),
    ];
  }

  List<Status> GetAllPredefinedUserPermissionActionTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 1, type: 'View'),
      Status(id: 2, type: 'Manage'),
      Status(id: 3, type: 'Delete'),
    ];
  }

  List<Status> GetWithBlankPredefinedUserPermissionActionTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 1, type: 'View'),
      Status(id: 2, type: 'Manage'),
      Status(id: 3, type: 'Delete'),
    ];
  }

  List<Status> GetPredefinedUserPermissionActionTypes() {
    return [
      Status(id: 1, type: 'View'),
      Status(id: 2, type: 'Manage'),
      Status(id: 3, type: 'Delete'),
    ];
  }

  List<Status> GetAllPredefinedUserPermissionModuleTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 1, type: 'Super Admin'),
      Status(id: 2, type: 'Company Admin'),
      Status(id: 3, type: 'Users'),
      Status(id: 4, type: 'Movie'),
      Status(id: 5, type: 'Contract'),
      Status(id: 6, type: 'Scenes'),
      Status(id: 7, type: 'Statement Template'),
      Status(id: 8, type: 'Department'),
      Status(id: 11, type: 'Company Artist'),
      Status(id: 12, type: 'Company Technician'),
      Status(id: 13, type: 'Company Equipment'),
      Status(id: 14, type: 'Company Vendor'),
      Status(id: 15, type: 'Company Property'),
      Status(id: 16, type: 'Company File Attachment'),
      Status(id: 17, type: 'Company Contract Template'),
      Status(id: 18, type: 'Company Contract'),
      Status(id: 21, type: 'Movie Artist'),
      Status(id: 22, type: 'Movie Technician'),
      Status(id: 23, type: 'Movie Equipment'),
      Status(id: 24, type: 'Movie Vendor'),
      Status(id: 25, type: 'Movie Property'),
      Status(id: 26, type: 'Movie File Attachment'),
      Status(id: 27, type: 'Movie Commitment Task'),
      Status(id: 28, type: 'Movie Shoot Day'),
      Status(id: 31, type: 'Pre Production'),
      Status(id: 32, type: 'Production'),
      Status(id: 33, type: 'Post Production'),
      Status(id: 34, type: 'Daily Status Report'),
      Status(id: 41, type: 'Budget'),
      Status(id: 42, type: 'Expense'),
      Status(id: 43, type: 'Other Budget And Expense'),
      Status(id: 44, type: 'Payment Status'),
      Status(id: 45, type: 'Financials'),
      Status(id: 51, type: 'Call Notification'),
      Status(id: 52, type: 'Analytics'),
      Status(id: 53, type: 'Chat'),
      Status(id: 55, type: 'Attendance'),
      Status(id: 56, type: 'Movie Location'),
      Status(id: 57, type: 'Movie Voucher'),
      Status(id: 58, type: 'Movie Artist Rate'),
      Status(id: 59, type: 'Movie Technician Rate'),
      Status(id: 60, type: 'Movie Equipment Rate'),
      Status(id: 61, type: 'Movie Vendor Rate'),
      Status(id: 62, type: 'Movie Property Rate'),
      Status(id: 63, type: 'Movie Shoot Day Artist'),
      Status(id: 64, type: 'Movie Shoot Day Technician'),
      Status(id: 65, type: 'Movie Shoot Day Equipment'),
      Status(id: 66, type: 'Movie Shoot Day Vendor'),
      Status(id: 67, type: 'Movie Shoot Day Property'),
      Status(id: 68, type: 'Movie Scene Artist'),
      Status(id: 69, type: 'Movie Scene Technician'),
      Status(id: 70, type: 'Movie Scene Equipment'),
      Status(id: 71, type: 'Movie Scene Vendor'),
      Status(id: 72, type: 'Movie Scene Property'),
      Status(id: 73, type: 'Movie Shoot Day Scenes'),
      Status(id: 74, type: 'Note Attachment'),
      Status(id: 75, type: 'Artist Rate'),
      Status(id: 76, type: 'Technician Rate'),
      Status(id: 77, type: 'Equipment Rate'),
      Status(id: 78, type: 'Vendor Rate'),
      Status(id: 79, type: 'Property Rate'),
      Status(id: 80, type: 'Budget Category'),
      Status(id: 81, type: 'Budget Division'),
      Status(id: 82, type: 'Ledger Type'),
      Status(id: 83, type: 'Movie Workflow Status Type'),
      Status(id: 84, type: 'Color Type'),
    ];
  }

  List<Status> GetWithBlankPredefinedUserPermissionModuleTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 1, type: 'Super Admin'),
      Status(id: 2, type: 'Company Admin'),
      Status(id: 3, type: 'Users'),
      Status(id: 4, type: 'Movie'),
      Status(id: 5, type: 'Contract'),
      Status(id: 6, type: 'Scenes'),
      Status(id: 7, type: 'Statement Template'),
      Status(id: 8, type: 'Department'),
      Status(id: 11, type: 'Company Artist'),
      Status(id: 12, type: 'Company Technician'),
      Status(id: 13, type: 'Company Equipment'),
      Status(id: 14, type: 'Company Vendor'),
      Status(id: 15, type: 'Company Property'),
      Status(id: 16, type: 'Company File Attachment'),
      Status(id: 17, type: 'Company Contract Template'),
      Status(id: 18, type: 'Company Contract'),
      Status(id: 21, type: 'Movie Artist'),
      Status(id: 22, type: 'Movie Technician'),
      Status(id: 23, type: 'Movie Equipment'),
      Status(id: 24, type: 'Movie Vendor'),
      Status(id: 25, type: 'Movie Property'),
      Status(id: 26, type: 'Movie File Attachment'),
      Status(id: 27, type: 'Movie Commitment Task'),
      Status(id: 28, type: 'Movie Shoot Day'),
      Status(id: 31, type: 'Pre Production'),
      Status(id: 32, type: 'Production'),
      Status(id: 33, type: 'Post Production'),
      Status(id: 34, type: 'Daily Status Report'),
      Status(id: 41, type: 'Budget'),
      Status(id: 42, type: 'Expense'),
      Status(id: 43, type: 'Other Budget And Expense'),
      Status(id: 44, type: 'Payment Status'),
      Status(id: 45, type: 'Financials'),
      Status(id: 51, type: 'Call Notification'),
      Status(id: 52, type: 'Analytics'),
      Status(id: 53, type: 'Chat'),
      Status(id: 55, type: 'Attendance'),
      Status(id: 56, type: 'Movie Location'),
      Status(id: 57, type: 'Movie Voucher'),
      Status(id: 58, type: 'Movie Artist Rate'),
      Status(id: 59, type: 'Movie Technician Rate'),
      Status(id: 60, type: 'Movie Equipment Rate'),
      Status(id: 61, type: 'Movie Vendor Rate'),
      Status(id: 62, type: 'Movie Property Rate'),
      Status(id: 63, type: 'Movie Shoot Day Artist'),
      Status(id: 64, type: 'Movie Shoot Day Technician'),
      Status(id: 65, type: 'Movie Shoot Day Equipment'),
      Status(id: 66, type: 'Movie Shoot Day Vendor'),
      Status(id: 67, type: 'Movie Shoot Day Property'),
      Status(id: 68, type: 'Movie Scene Artist'),
      Status(id: 69, type: 'Movie Scene Technician'),
      Status(id: 70, type: 'Movie Scene Equipment'),
      Status(id: 71, type: 'Movie Scene Vendor'),
      Status(id: 72, type: 'Movie Scene Property'),
      Status(id: 73, type: 'Movie Shoot Day Scenes'),
      Status(id: 74, type: 'Note Attachment'),
      Status(id: 75, type: 'Artist Rate'),
      Status(id: 76, type: 'Technician Rate'),
      Status(id: 77, type: 'Equipment Rate'),
      Status(id: 78, type: 'Vendor Rate'),
      Status(id: 79, type: 'Property Rate'),
      Status(id: 80, type: 'Budget Category'),
      Status(id: 81, type: 'Budget Division'),
      Status(id: 82, type: 'Ledger Type'),
      Status(id: 83, type: 'Movie Workflow Status Type'),
      Status(id: 84, type: 'Color Type'),
    ];
  }

  List<Status> GetPredefinedUserPermissionModuleTypes() {
    return [
      Status(id: 1, type: 'Super Admin'),
      Status(id: 2, type: 'Company Admin'),
      Status(id: 3, type: 'Users'),
      Status(id: 4, type: 'Movie'),
      Status(id: 5, type: 'Contract'),
      Status(id: 6, type: 'Scenes'),
      Status(id: 7, type: 'Statement Template'),
      Status(id: 8, type: 'Department'),
      Status(id: 11, type: 'Company Artist'),
      Status(id: 12, type: 'Company Technician'),
      Status(id: 13, type: 'Company Equipment'),
      Status(id: 14, type: 'Company Vendor'),
      Status(id: 15, type: 'Company Property'),
      Status(id: 16, type: 'Company File Attachment'),
      Status(id: 17, type: 'Company Contract Template'),
      Status(id: 18, type: 'Company Contract'),
      Status(id: 21, type: 'Movie Artist'),
      Status(id: 22, type: 'Movie Technician'),
      Status(id: 23, type: 'Movie Equipment'),
      Status(id: 24, type: 'Movie Vendor'),
      Status(id: 25, type: 'Movie Property'),
      Status(id: 26, type: 'Movie File Attachment'),
      Status(id: 27, type: 'Movie Commitment Task'),
      Status(id: 28, type: 'Movie Shoot Day'),
      Status(id: 31, type: 'Pre Production'),
      Status(id: 32, type: 'Production'),
      Status(id: 33, type: 'Post Production'),
      Status(id: 34, type: 'Daily Status Report'),
      Status(id: 41, type: 'Budget'),
      Status(id: 42, type: 'Expense'),
      Status(id: 43, type: 'Other Budget And Expense'),
      Status(id: 44, type: 'Payment Status'),
      Status(id: 45, type: 'Financials'),
      Status(id: 51, type: 'Call Notification'),
      Status(id: 52, type: 'Analytics'),
      Status(id: 53, type: 'Chat'),
      Status(id: 55, type: 'Attendance'),
      Status(id: 56, type: 'Movie Location'),
      Status(id: 57, type: 'Movie Voucher'),
      Status(id: 58, type: 'Movie Artist Rate'),
      Status(id: 59, type: 'Movie Technician Rate'),
      Status(id: 60, type: 'Movie Equipment Rate'),
      Status(id: 61, type: 'Movie Vendor Rate'),
      Status(id: 62, type: 'Movie Property Rate'),
      Status(id: 63, type: 'Movie Shoot Day Artist'),
      Status(id: 64, type: 'Movie Shoot Day Technician'),
      Status(id: 65, type: 'Movie Shoot Day Equipment'),
      Status(id: 66, type: 'Movie Shoot Day Vendor'),
      Status(id: 67, type: 'Movie Shoot Day Property'),
      Status(id: 68, type: 'Movie Scene Artist'),
      Status(id: 69, type: 'Movie Scene Technician'),
      Status(id: 70, type: 'Movie Scene Equipment'),
      Status(id: 71, type: 'Movie Scene Vendor'),
      Status(id: 72, type: 'Movie Scene Property'),
      Status(id: 73, type: 'Movie Shoot Day Scenes'),
      Status(id: 74, type: 'Note Attachment'),
      Status(id: 75, type: 'Artist Rate'),
      Status(id: 76, type: 'Technician Rate'),
      Status(id: 77, type: 'Equipment Rate'),
      Status(id: 78, type: 'Vendor Rate'),
      Status(id: 79, type: 'Property Rate'),
      Status(id: 80, type: 'Budget Category'),
      Status(id: 81, type: 'Budget Division'),
      Status(id: 82, type: 'Ledger Type'),
      Status(id: 83, type: 'Movie Workflow Status Type'),
      Status(id: 84, type: 'Color Type'),
    ];
  }

  List<Status> GetAllPredefinedUserPermissionTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 1900001, type: 'Configure System'),
      Status(id: 1900011, type: 'Configure Company'),
      Status(id: 1900012, type: 'View Company'),
      Status(id: 1900021, type: 'Configure Movie'),
      Status(id: 1900022, type: 'Manage Movie'),
      Status(id: 1900023, type: 'View Movie'),
      Status(id: 1900031, type: 'Manage Contract'),
      Status(id: 1900032, type: 'View Contract'),
      Status(id: 1900033, type: 'Approve Reject Contract'),
      Status(id: 1900034, type: 'Sign Contract'),
      Status(id: 1900041, type: 'Manage Movie Budget'),
      Status(id: 1900042, type: 'View Movie Budget'),
      Status(id: 1900051, type: 'Manage Movie Expense'),
      Status(id: 1900052, type: 'View Movie Expense'),
      Status(id: 1900061, type: 'Manage Movie Scenes'),
      Status(id: 1900062, type: 'View Movie Scenes'),
      Status(id: 1900071, type: 'View And Download Company File Attachment'),
      Status(id: 1900072, type: 'Upload Company File Attachment'),
      Status(id: 1900073, type: 'Delete Company File Attachment'),
      Status(id: 1900081, type: 'View And Download Movie File Attachment'),
      Status(id: 1900082, type: 'Upload Movie File Attachment'),
      Status(id: 1900083, type: 'Delete Movie File Attachment'),
      Status(id: 1900091, type: 'Manage Statement Template'),
      Status(id: 1900092, type: 'View Statement Template'),
      Status(id: 1900101, type: 'Manage Company Artist'),
      Status(id: 1900102, type: 'View Company Artist'),
      Status(id: 1900111, type: 'Manage Company Technician'),
      Status(id: 1900112, type: 'View Company Technician'),
      Status(id: 1900121, type: 'Manage Company Equipment'),
      Status(id: 1900122, type: 'View Company Equipment'),
      Status(id: 1900131, type: 'Manage Company Vendor'),
      Status(id: 1900132, type: 'View Company Vendor'),
      Status(id: 1900141, type: 'Manage Company Property'),
      Status(id: 1900142, type: 'View Company Property'),
      Status(id: 1900151, type: 'Manage Movie Artist'),
      Status(id: 1900152, type: 'View Movie Artist'),
      Status(id: 1900161, type: 'Manage Movie Technician'),
      Status(id: 1900162, type: 'View Movie Technician'),
      Status(id: 1900171, type: 'Manage Movie Equipment'),
      Status(id: 1900172, type: 'View Movie Equipment'),
      Status(id: 1900181, type: 'Manage Movie Vendor'),
      Status(id: 1900182, type: 'View Movie Vendor'),
      Status(id: 1900191, type: 'Manage Movie Property'),
      Status(id: 1900192, type: 'View Movie Property'),
      Status(id: 1900201, type: 'Manage Company Contract'),
      Status(id: 1900202, type: 'View Company Contract'),
      Status(id: 1900203, type: 'Sign Company Contract'),
      Status(id: 1900211, type: 'Manage Company Contract Template'),
      Status(id: 1900212, type: 'View Company Contract Template'),
      Status(id: 1900221, type: 'Manage User'),
      Status(id: 1900231, type: 'Manage Call Notification'),
      Status(id: 1900232, type: 'View Call Notification'),
      Status(id: 1900241, type: 'View Call Sheet'),
      Status(id: 1900242, type: 'Manage Call Sheet'),
      Status(id: 1900251, type: 'Manage Payment Status'),
      Status(id: 1900252, type: 'View Payment Status'),
      Status(id: 1900261, type: 'Manage Production'),
      Status(id: 1900262, type: 'View Production'),
      Status(id: 1900271, type: 'Manage Pre Production'),
      Status(id: 1900272, type: 'View Pre Production'),
      Status(id: 1900281, type: 'Manage Post Production'),
      Status(id: 1900282, type: 'View Post Production'),
      Status(id: 1900291, type: 'Manage Other Budget And Expense'),
      Status(id: 1900292, type: 'View Other Budget And Expense'),
      Status(id: 1900301, type: 'View Analytics'),
      Status(id: 1900311, type: 'View Chat'),
      Status(id: 1900321, type: 'View Financial Details'),
      Status(id: 1900331, type: 'View Daily Status Report'),
      Status(id: 1900341, type: 'Manage Movie Task Commitment'),
      Status(id: 1900342, type: 'View Movie Task Commitment'),
      Status(id: 1900351, type: 'Manage Movie Shoot Day'),
      Status(id: 1900352, type: 'View Movie Shoot Day'),
      Status(id: 1900361, type: 'Manage Department'),
      Status(id: 1900362, type: 'View Department'),
    ];
  }

  List<Status> GetWithBlankPredefinedUserPermissionTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 1900001, type: 'Configure System'),
      Status(id: 1900011, type: 'Configure Company'),
      Status(id: 1900012, type: 'View Company'),
      Status(id: 1900021, type: 'Configure Movie'),
      Status(id: 1900022, type: 'Manage Movie'),
      Status(id: 1900023, type: 'View Movie'),
      Status(id: 1900031, type: 'Manage Contract'),
      Status(id: 1900032, type: 'View Contract'),
      Status(id: 1900033, type: 'Approve Reject Contract'),
      Status(id: 1900034, type: 'Sign Contract'),
      Status(id: 1900041, type: 'Manage Movie Budget'),
      Status(id: 1900042, type: 'View Movie Budget'),
      Status(id: 1900051, type: 'Manage Movie Expense'),
      Status(id: 1900052, type: 'View Movie Expense'),
      Status(id: 1900061, type: 'Manage Movie Scenes'),
      Status(id: 1900062, type: 'View Movie Scenes'),
      Status(id: 1900071, type: 'View And Download Company File Attachment'),
      Status(id: 1900072, type: 'Upload Company File Attachment'),
      Status(id: 1900073, type: 'Delete Company File Attachment'),
      Status(id: 1900081, type: 'View And Download Movie File Attachment'),
      Status(id: 1900082, type: 'Upload Movie File Attachment'),
      Status(id: 1900083, type: 'Delete Movie File Attachment'),
      Status(id: 1900091, type: 'Manage Statement Template'),
      Status(id: 1900092, type: 'View Statement Template'),
      Status(id: 1900101, type: 'Manage Company Artist'),
      Status(id: 1900102, type: 'View Company Artist'),
      Status(id: 1900111, type: 'Manage Company Technician'),
      Status(id: 1900112, type: 'View Company Technician'),
      Status(id: 1900121, type: 'Manage Company Equipment'),
      Status(id: 1900122, type: 'View Company Equipment'),
      Status(id: 1900131, type: 'Manage Company Vendor'),
      Status(id: 1900132, type: 'View Company Vendor'),
      Status(id: 1900141, type: 'Manage Company Property'),
      Status(id: 1900142, type: 'View Company Property'),
      Status(id: 1900151, type: 'Manage Movie Artist'),
      Status(id: 1900152, type: 'View Movie Artist'),
      Status(id: 1900161, type: 'Manage Movie Technician'),
      Status(id: 1900162, type: 'View Movie Technician'),
      Status(id: 1900171, type: 'Manage Movie Equipment'),
      Status(id: 1900172, type: 'View Movie Equipment'),
      Status(id: 1900181, type: 'Manage Movie Vendor'),
      Status(id: 1900182, type: 'View Movie Vendor'),
      Status(id: 1900191, type: 'Manage Movie Property'),
      Status(id: 1900192, type: 'View Movie Property'),
      Status(id: 1900201, type: 'Manage Company Contract'),
      Status(id: 1900202, type: 'View Company Contract'),
      Status(id: 1900203, type: 'Sign Company Contract'),
      Status(id: 1900211, type: 'Manage Company Contract Template'),
      Status(id: 1900212, type: 'View Company Contract Template'),
      Status(id: 1900221, type: 'Manage User'),
      Status(id: 1900231, type: 'Manage Call Notification'),
      Status(id: 1900232, type: 'View Call Notification'),
      Status(id: 1900241, type: 'View Call Sheet'),
      Status(id: 1900242, type: 'Manage Call Sheet'),
      Status(id: 1900251, type: 'Manage Payment Status'),
      Status(id: 1900252, type: 'View Payment Status'),
      Status(id: 1900261, type: 'Manage Production'),
      Status(id: 1900262, type: 'View Production'),
      Status(id: 1900271, type: 'Manage Pre Production'),
      Status(id: 1900272, type: 'View Pre Production'),
      Status(id: 1900281, type: 'Manage Post Production'),
      Status(id: 1900282, type: 'View Post Production'),
      Status(id: 1900291, type: 'Manage Other Budget And Expense'),
      Status(id: 1900292, type: 'View Other Budget And Expense'),
      Status(id: 1900301, type: 'View Analytics'),
      Status(id: 1900311, type: 'View Chat'),
      Status(id: 1900321, type: 'View Financial Details'),
      Status(id: 1900331, type: 'View Daily Status Report'),
      Status(id: 1900341, type: 'Manage Movie Task Commitment'),
      Status(id: 1900342, type: 'View Movie Task Commitment'),
      Status(id: 1900351, type: 'Manage Movie Shoot Day'),
      Status(id: 1900352, type: 'View Movie Shoot Day'),
      Status(id: 1900361, type: 'Manage Department'),
      Status(id: 1900362, type: 'View Department'),
    ];
  }

  List<Status> GetPredefinedUserPermissionTypes() {
    return [
      Status(id: 1900001, type: 'Configure System'),
      Status(id: 1900011, type: 'Configure Company'),
      Status(id: 1900012, type: 'View Company'),
      Status(id: 1900021, type: 'Configure Movie'),
      Status(id: 1900022, type: 'Manage Movie'),
      Status(id: 1900023, type: 'View Movie'),
      Status(id: 1900031, type: 'Manage Contract'),
      Status(id: 1900032, type: 'View Contract'),
      Status(id: 1900033, type: 'Approve Reject Contract'),
      Status(id: 1900034, type: 'Sign Contract'),
      Status(id: 1900041, type: 'Manage Movie Budget'),
      Status(id: 1900042, type: 'View Movie Budget'),
      Status(id: 1900051, type: 'Manage Movie Expense'),
      Status(id: 1900052, type: 'View Movie Expense'),
      Status(id: 1900061, type: 'Manage Movie Scenes'),
      Status(id: 1900062, type: 'View Movie Scenes'),
      Status(id: 1900071, type: 'View And Download Company File Attachment'),
      Status(id: 1900072, type: 'Upload Company File Attachment'),
      Status(id: 1900073, type: 'Delete Company File Attachment'),
      Status(id: 1900081, type: 'View And Download Movie File Attachment'),
      Status(id: 1900082, type: 'Upload Movie File Attachment'),
      Status(id: 1900083, type: 'Delete Movie File Attachment'),
      Status(id: 1900091, type: 'Manage Statement Template'),
      Status(id: 1900092, type: 'View Statement Template'),
      Status(id: 1900101, type: 'Manage Company Artist'),
      Status(id: 1900102, type: 'View Company Artist'),
      Status(id: 1900111, type: 'Manage Company Technician'),
      Status(id: 1900112, type: 'View Company Technician'),
      Status(id: 1900121, type: 'Manage Company Equipment'),
      Status(id: 1900122, type: 'View Company Equipment'),
      Status(id: 1900131, type: 'Manage Company Vendor'),
      Status(id: 1900132, type: 'View Company Vendor'),
      Status(id: 1900141, type: 'Manage Company Property'),
      Status(id: 1900142, type: 'View Company Property'),
      Status(id: 1900151, type: 'Manage Movie Artist'),
      Status(id: 1900152, type: 'View Movie Artist'),
      Status(id: 1900161, type: 'Manage Movie Technician'),
      Status(id: 1900162, type: 'View Movie Technician'),
      Status(id: 1900171, type: 'Manage Movie Equipment'),
      Status(id: 1900172, type: 'View Movie Equipment'),
      Status(id: 1900181, type: 'Manage Movie Vendor'),
      Status(id: 1900182, type: 'View Movie Vendor'),
      Status(id: 1900191, type: 'Manage Movie Property'),
      Status(id: 1900192, type: 'View Movie Property'),
      Status(id: 1900201, type: 'Manage Company Contract'),
      Status(id: 1900202, type: 'View Company Contract'),
      Status(id: 1900203, type: 'Sign Company Contract'),
      Status(id: 1900211, type: 'Manage Company Contract Template'),
      Status(id: 1900212, type: 'View Company Contract Template'),
      Status(id: 1900221, type: 'Manage User'),
      Status(id: 1900231, type: 'Manage Call Notification'),
      Status(id: 1900232, type: 'View Call Notification'),
      Status(id: 1900241, type: 'View Call Sheet'),
      Status(id: 1900242, type: 'Manage Call Sheet'),
      Status(id: 1900251, type: 'Manage Payment Status'),
      Status(id: 1900252, type: 'View Payment Status'),
      Status(id: 1900261, type: 'Manage Production'),
      Status(id: 1900262, type: 'View Production'),
      Status(id: 1900271, type: 'Manage Pre Production'),
      Status(id: 1900272, type: 'View Pre Production'),
      Status(id: 1900281, type: 'Manage Post Production'),
      Status(id: 1900282, type: 'View Post Production'),
      Status(id: 1900291, type: 'Manage Other Budget And Expense'),
      Status(id: 1900292, type: 'View Other Budget And Expense'),
      Status(id: 1900301, type: 'View Analytics'),
      Status(id: 1900311, type: 'View Chat'),
      Status(id: 1900321, type: 'View Financial Details'),
      Status(id: 1900331, type: 'View Daily Status Report'),
      Status(id: 1900341, type: 'Manage Movie Task Commitment'),
      Status(id: 1900342, type: 'View Movie Task Commitment'),
      Status(id: 1900351, type: 'Manage Movie Shoot Day'),
      Status(id: 1900352, type: 'View Movie Shoot Day'),
      Status(id: 1900361, type: 'Manage Department'),
      Status(id: 1900362, type: 'View Department'),
    ];
  }

  List<Status> GetAllPredefinedUserTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 1800001, type: 'Super Admin'),
      Status(id: 1800101, type: 'Company Admin'),
      Status(id: 1800301, type: 'Producer'),
      Status(id: 1800302, type: 'Production Executive'),
      Status(id: 1800303, type: 'Production Manager'),
      Status(id: 1800401, type: 'Auditor'),
      Status(id: 1800402, type: 'Accounting Manager'),
      Status(id: 1800501, type: 'Director'),
      Status(id: 1800502, type: 'Assistant Director'),
      Status(id: 1800503, type: 'Executive Producer'),
      Status(id: 1800504, type: 'Production Controller'),
      Status(id: 1800506, type: 'Assistant Production Manager'),
    ];
  }

  List<Status> GetWithBlankPredefinedUserTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 1800001, type: 'Super Admin'),
      Status(id: 1800101, type: 'Company Admin'),
      Status(id: 1800301, type: 'Producer'),
      Status(id: 1800302, type: 'Production Executive'),
      Status(id: 1800303, type: 'Production Manager'),
      Status(id: 1800401, type: 'Auditor'),
      Status(id: 1800402, type: 'Accounting Manager'),
      Status(id: 1800501, type: 'Director'),
      Status(id: 1800502, type: 'Assistant Director'),
      Status(id: 1800503, type: 'Executive Producer'),
      Status(id: 1800504, type: 'Production Controller'),
      Status(id: 1800506, type: 'Assistant Production Manager'),
    ];
  }

  List<Status> GetPredefinedUserTypes() {
    return [
      Status(id: 1800001, type: 'Super Admin'),
      Status(id: 1800101, type: 'Company Admin'),
      Status(id: 1800301, type: 'Producer'),
      Status(id: 1800302, type: 'Production Executive'),
      Status(id: 1800303, type: 'Production Manager'),
      Status(id: 1800401, type: 'Auditor'),
      Status(id: 1800402, type: 'Accounting Manager'),
      Status(id: 1800501, type: 'Director'),
      Status(id: 1800502, type: 'Assistant Director'),
      Status(id: 1800503, type: 'Executive Producer'),
      Status(id: 1800504, type: 'Production Controller'),
      Status(id: 1800506, type: 'Assistant Production Manager'),
    ];
  }

  List<Status> GetAllPredefinedVendorGroupTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 4600001, type: 'Custom'),
      Status(id: 4600002, type: 'Food'),
      Status(id: 4600003, type: 'Vehicle'),
      Status(id: 4600004, type: 'Talent Management'),
    ];
  }

  List<Status> GetWithBlankPredefinedVendorGroupTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 4600001, type: 'Custom'),
      Status(id: 4600002, type: 'Food'),
      Status(id: 4600003, type: 'Vehicle'),
      Status(id: 4600004, type: 'Talent Management'),
    ];
  }

  List<Status> GetPredefinedVendorGroupTypes() {
    return [
      Status(id: 4600001, type: 'Custom'),
      Status(id: 4600002, type: 'Food'),
      Status(id: 4600003, type: 'Vehicle'),
      Status(id: 4600004, type: 'Talent Management'),
    ];
  }

  List<Status> GetAllPredefinedVendorTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 4100001, type: 'Custom'),
      Status(id: 4100002, type: 'Talent Management'),
      Status(id: 4100003, type: 'Food'),
    ];
  }

  List<Status> GetWithBlankPredefinedVendorTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 4100001, type: 'Custom'),
      Status(id: 4100002, type: 'Talent Management'),
      Status(id: 4100003, type: 'Food'),
    ];
  }

  List<Status> GetPredefinedVendorTypes() {
    return [
      Status(id: 4100001, type: 'Custom'),
      Status(id: 4100002, type: 'Talent Management'),
      Status(id: 4100003, type: 'Food'),
    ];
  }

  List<Status> GetAllPredefinedWhatsAppNotificationStatusTypes() {
    return [
      Status(id: null, type: 'All'),
      Status(id: 6900001, type: 'Not Needed'),
      Status(id: 6900002, type: 'Scheduled'),
      Status(id: 6900003, type: 'Sent'),
      Status(id: 6900004, type: 'Confirmed'),
      Status(id: 6900005, type: 'Not Confirmed'),
      Status(id: 6900006, type: 'Viewed And Not Confirmed'),
      Status(id: 6900007, type: 'Declined'),
      Status(id: 6900008, type: 'Notification Error'),
      Status(id: 6900009, type: 'Server Not Configured'),
    ];
  }

  List<Status> GetWithBlankPredefinedWhatsAppNotificationStatusTypes() {
    return [
      Status(id: null, type: ''),
      Status(id: 6900001, type: 'Not Needed'),
      Status(id: 6900002, type: 'Scheduled'),
      Status(id: 6900003, type: 'Sent'),
      Status(id: 6900004, type: 'Confirmed'),
      Status(id: 6900005, type: 'Not Confirmed'),
      Status(id: 6900006, type: 'Viewed And Not Confirmed'),
      Status(id: 6900007, type: 'Declined'),
      Status(id: 6900008, type: 'Notification Error'),
      Status(id: 6900009, type: 'Server Not Configured'),
    ];
  }

  List<Status> GetPredefinedWhatsAppNotificationStatusTypes() {
    return [
      Status(id: 6900001, type: 'Not Needed'),
      Status(id: 6900002, type: 'Scheduled'),
      Status(id: 6900003, type: 'Sent'),
      Status(id: 6900004, type: 'Confirmed'),
      Status(id: 6900005, type: 'Not Confirmed'),
      Status(id: 6900006, type: 'Viewed And Not Confirmed'),
      Status(id: 6900007, type: 'Declined'),
      Status(id: 6900008, type: 'Notification Error'),
      Status(id: 6900009, type: 'Server Not Configured'),
    ];
  }
}
