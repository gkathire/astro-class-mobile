// ** Warning ** this is a autogenerated code.
// Any changes made to this file will be removed.
// For making custom code changes, add code in custom enum class.

enum EnumGroupTypes{
  predefinedAuditOperationType(1),
  predefinedArtistGroupType(2),
  predefinedArtistType(3),
  predefinedBudgetCategoryType(4),
  predefinedBudgetDivisionType(5),
  predefinedCallSheetType(6),
  predefinedExpenseSubType(7),
  predefinedExpenseType(8),
  predefinedGenreType(9),
  predefinedLocationSubType(10),
  predefinedLocationType(11),
  predefinedMovieShootDayType(12),
  predefinedPostProductionExpenseType(13),
  predefinedRateType(14),
  predefinedShootingExpenseType(15),
  predefinedTechnicianType(16),
  predefinedCompanyType(17),
  predefinedUserType(18),
  predefinedUserPermissionType(19),
  predefinedResourceType(20),
  predefinedJobType(21),
  predefinedJobStatusType(22),
  predefinedMessageToSendType(23),
  predefinedFieldControlType(24),
  predefinedFieldType(25),
  predefinedFieldPopulatorType(26),
  predefinedMetaDataGroupType(27),
  predefinedMessagePriorityType(28),
  predefinedRealtimeMessageStatusType(29),
  predefinedNotificationMessageType(30),
  predefinedJobOrReportType(31),
  predefinedBugetValueSetType(32),
  predefinedBudgetCategoryExpenseType(33),
  predefinedFileStorageType(34),
  predefinedMessageTemplateType(35),
  predefinedTechnicianGroupType(36),
  predefinedEquipmentGroupType(37),
  predefinedEquipmentType(38),
  predefinedMovieStatusType(39),
  predefinedMovieStageType(40),
  predefinedVendorType(41),
  predefinedMovieShootDayStatusType(42),
  predefinedMovieShootDaySceneStatusType(43),
  predefinedContractAssignmentStatusType(44),
  predefinedContractStatusType(45),
  predefinedVendorGroupType(46),
  predefinedMovieApprovalStatusType(47),
  predefinedMovieShootDayApprovalType(48),
  predefinedRequirementType(49),
  predefinedBudgetOrExpenseType(50),
  predefinedContractTemplateForType(51),
  predefinedContractForType(52),
  predefinedSingleSignOnServerType(53),
  predefinedJobUsageForType(54),
  predefinedCallTimeValueType(55),
  predefinedCurrencyType(56),
  predefinedPhoneCallNotificationStatusType(57),
  predefinedEmailNotificationStatusType(58),
  predefinedSmsAndVoiceServerType(59),
  predefinedDigitalSignatureType(60),
  predefinedMovieScriptFileType(61),
  predefinedExpensePaymentType(62),
  predefinedExpensePaymentStatusType(63),
  predefinedStatementTemplateType(64),
  predefinedLedgerGroupType(65),
  predefinedPushNotificationServerType(66),
  predefinedPushNotificationStatusType(67),
  predefinedSMSNotificationStatusType(68),
  predefinedWhatsAppNotificationStatusType(69),
  predefinedPropertyGroupType(70),
  predefinedPropertyType(71),
  predefinedPaymentStatusType(72),
  predefinedMovieSceneStatusType(73),
  predefinedContractFileIndexType(74),
  predefinedSearchIndexServerType(75),
  predefinedPreProductionStatusType(76),
  predefinedPostProductionStatusType(77),
  predefinedProductionStatusType(78),
  predefinedMovieLocationVisitStatusType(79),
  predefinedDepartmentType(80),
  predefinedCommitmentTaskRecurrenceEndType(83),
  predefinedTaskForType(84),
  predefinedPropertyForType(85),
  predefinedEquipmentForType(86),
  predefinedRateUnitType(87),
  predefinedCommitmentTaskStatusType(88),
  predefinedCommitmentTaskPriorityType(89),
  predefinedMovieStatusNotificationEventType(90),
  predefinedBiometricType(91),
  predefinedIdentificationDocumentType(92),
  predefinedPropertyTransactionType(93),
  predefinedEquipmentTransactionType(94),
  predefinedPropertyOrEquipmentRequestedByType(95);

  const EnumGroupTypes(this.value);
  final int value;
}

enum PredefinedArtistGroupTypes{
  custom(200001),
  actors(200002),
  sides(200003),
  stunts(200004);

  const PredefinedArtistGroupTypes(this.value);
  final int value;
}

enum PredefinedArtistTypes{
  mainActor(300001),
  mainActress(300002),
  supportActor(300003),
  supportActress(300004),
  villain(300005),
  extras(300006),
  stuntDouble(300007),
  other(300008),
  leadActor(300009),
  leadActress(300010);

  const PredefinedArtistTypes(this.value);
  final int value;
}

enum PredefinedAuditOperationTypes{
  resourceCreated(100001),
  resourceUpdated(100002),
  resourceDeleted(100003),
  resourceUndeleted(100004),
  resourceHardDeleted(100005),
  resourceEnable(100006),
  resourceDisable(100007),
  superAdminLogin(101001),
  login(101002),
  logout(101003),
  loginFailed(101004),
  forgotPasswordFailedRequest(101005),
  resetPassword(101006),
  socialLogin(101007),
  socialLoginFailed(101008),
  alternateLogin(101009),
  alternateLoginFailed(101010),
  changedPassword(101011),
  forgotPasswordRequest(101012),
  userCreated(101015),
  userUpdated(101016),
  userDeleted(101017),
  loginEnabled(101018),
  loginDisabled(101019),
  updateConfiguration(101020),
  report(101021),
  runReport(101022),
  viewReport(101023),
  downloadReport(101024);

  const PredefinedAuditOperationTypes(this.value);
  final int value;
}

enum PredefinedBiometricTypes{
  fingerPrint(9100001);

  const PredefinedBiometricTypes(this.value);
  final int value;
}

enum PredefinedBudgetCategoryExpenseTypes{
  camera(3300001),
  dit(3300002),
  mixer(3300003),
  lightman(3300004),
  crane(3300005),
  unitTechnicians(3300006),
  makeUp(3300007),
  costumers(3300008),
  setAssistant(3300009),
  productionAssistant(3300010),
  productionAssistantLadies(3300011),
  driversBatta(3300012),
  photoFloodBatta(3300013),
  caravanDriverAndAssistant(3300015),
  carpenterAndPainter(3300016),
  heroEscort(3300017),
  assistantDirectorsBatta(3300018),
  assistantCameramansBatta(3300019),
  managersAndCashierBatta(3300020),
  artAssistantBatta(3300021),
  stillsBatta(3300022),
  heroAssistantBatta(3300023),
  diesel(3300024),
  animals(3300025),
  drone(3300026),
  caravan(3300027),
  gymBoys(3300028),
  goda(3300029),
  steadiCam(3300030),
  photoFloodHire(3300031),
  vehicleHire(3300032),
  custom(3309999);

  const PredefinedBudgetCategoryExpenseTypes(this.value);
  final int value;
}

enum PredefinedBudgetCategoryTypes{
  dailyBattas(400001),
  juniorArtistAndArtist(400002),
  shotVehicles(400003),
  locationHire(400004),
  mess(400005),
  teaAndSnacks(400006),
  dancers(400007),
  fightersAndDancers(400009),
  unitAndCameraHire(400010),
  locationHuntingRecce(400100),
  officeRent(400101),
  electricity(400102),
  officeMaintainance(400103),
  preProductionFood(400104),
  preProductionDailyBattas(400105),
  auditions(400106),
  auditionConveyances(400107),
  dubbing(400200),
  colorCorrectionDI(400201),
  vFX(400202),
  sFX(400203),
  music(400204),
  mixing(400205),
  animalWelfarepermission(400206),
  censor(400207),
  subtitles(400208),
  general(400209),
  miscellaneous(409901),
  custom(409902);

  const PredefinedBudgetCategoryTypes(this.value);
  final int value;
}

enum PredefinedBudgetDivisionTypes{
  preProduction(500001),
  production(500002),
  postProduction(500003),
  afterRelease(500004),
  artist(500005),
  technicians(500006),
  others(500007);

  const PredefinedBudgetDivisionTypes(this.value);
  final int value;
}

enum PredefinedBudgetOrExpenseTypes{
  movieArtist(5000001),
  movieTechnician(5000002),
  movieEquipment(5000003),
  movieVendor(5000004),
  movieProperty(5000005),
  movieLocation(5000006),
  custom(5000100);

  const PredefinedBudgetOrExpenseTypes(this.value);
  final int value;
}

enum PredefinedBugetValueSetTypes{
  directInput(3200001),
  autoRollup(3200002),
  both(3200003);

  const PredefinedBugetValueSetTypes(this.value);
  final int value;
}

enum PredefinedCallSheetTypes{
  single(600001),
  oneAndHalf(600002),
  double(600003),
  twoAndHalf(600004),
  three(600005),
  notApplicable(600006);

  const PredefinedCallSheetTypes(this.value);
  final int value;
}

enum PredefinedCallTimeValueTypes{
  nA(5500001),
  oC(5500002),
  nR(5500003),
  time(5500004);

  const PredefinedCallTimeValueTypes(this.value);
  final int value;
}

enum PredefinedCommitmentTaskPriorityTypes{
  high(8900001),
  medium(8900002),
  low(8900003);

  const PredefinedCommitmentTaskPriorityTypes(this.value);
  final int value;
}

enum PredefinedCommitmentTaskRecurrenceEndTypes{
  noEndDate(8300001),
  specificDate(8300002),
  contractExpiration(8300003),
  afterNthOccurrence(8300004);

  const PredefinedCommitmentTaskRecurrenceEndTypes(this.value);
  final int value;
}

enum PredefinedCommitmentTaskStatusTypes{
  noStarted(8800001),
  active(8800002),
  completed(8800003),
  ignored(8800004),
  willDoLater(8800005);

  const PredefinedCommitmentTaskStatusTypes(this.value);
  final int value;
}

enum PredefinedCompanyTypes{
  system(1700001),
  productionHouse(1700100);

  const PredefinedCompanyTypes(this.value);
  final int value;
}

enum PredefinedContractAssignmentStatusTypes{
  unAssigned(4400001),
  assigned(4400002),
  notNeeded(4400003);

  const PredefinedContractAssignmentStatusTypes(this.value);
  final int value;
}

enum PredefinedContractFieldWordTypes{
  text(1),
  table(2),
  image(3);

  const PredefinedContractFieldWordTypes(this.value);
  final int value;
}

enum PredefinedContractFileIndexTypes{
  latest(7400001),
  versioned(7400002),
  attachment(7400003);

  const PredefinedContractFileIndexTypes(this.value);
  final int value;
}

enum PredefinedContractForTypes{
  general(5200001),
  artist(5200002),
  technician(5200003),
  equipment(5200004),
  vendor(5200005),
  movieArtist(5200006),
  movieTechnician(5200007),
  movieEquipment(5200008),
  movieVendor(5200009),
  movieProperty(5200010),
  property(5200011),
  movieLocation(5200012);

  const PredefinedContractForTypes(this.value);
  final int value;
}

enum PredefinedContractStatusTypes{
  notStarted(4500001),
  inProgress(4500002),
  signatureInProgress(4500003),
  signed(4500004),
  cancelled(4500005);

  const PredefinedContractStatusTypes(this.value);
  final int value;
}

enum PredefinedContractTemplateForTypes{
  artistType(5100001),
  technicianType(5100002),
  equipmentType(5100003),
  vendorType(5100004),
  propertyType(5100005);

  const PredefinedContractTemplateForTypes(this.value);
  final int value;
}

enum PredefinedCurrencyTypes{
  iNR(5600001),
  uSD(5600002);

  const PredefinedCurrencyTypes(this.value);
  final int value;
}

enum PredefinedDepartmentTypes{
  custom(8000001),
  costume(8000002),
  art(8000003);

  const PredefinedDepartmentTypes(this.value);
  final int value;
}

enum PredefinedDigitalSignatureTypes{
  docusign(6000001);

  const PredefinedDigitalSignatureTypes(this.value);
  final int value;
}

enum PredefinedEmailNotificationStatusTypes{
  notNeeded(5800001),
  scheduled(5800002),
  sent(5800003),
  confirmed(5800004),
  notConfirmed(5800005),
  viewedAndNotConfirmed(5800006),
  declined(5800007),
  notificationError(5800008),
  serverNotConfigured(5800009);

  const PredefinedEmailNotificationStatusTypes(this.value);
  final int value;
}

enum PredefinedEquipmentForTypes{
  common(8600001),
  movieArtist(8600002),
  movieTechnician(8600003),
  movieVendor(8600004);

  const PredefinedEquipmentForTypes(this.value);
  final int value;
}

enum PredefinedEquipmentGroupTypes{
  custom(3700001),
  camera(3700002);

  const PredefinedEquipmentGroupTypes(this.value);
  final int value;
}

enum PredefinedEquipmentTransactionTypes{
  received(9400001),
  returned(9400002);

  const PredefinedEquipmentTransactionTypes(this.value);
  final int value;
}

enum PredefinedEquipmentTypes{
  custom(3800001),
  digicam(3800002);

  const PredefinedEquipmentTypes(this.value);
  final int value;
}

enum PredefinedExpensePaymentStatusTypes{
  notPaid(6300001),
  paid(6300002);

  const PredefinedExpensePaymentStatusTypes(this.value);
  final int value;
}

enum PredefinedExpensePaymentTypes{
  cash(6200001),
  cheque(6200002),
  bankTransfer(6200003);

  const PredefinedExpensePaymentTypes(this.value);
  final int value;
}

enum PredefinedExpenseSubTypes{
  other(701000);

  const PredefinedExpenseSubTypes(this.value);
  final int value;
}

enum PredefinedExpenseTypes{
  bata(800100),
  perDayExpense(800101),
  artDepartment(800102),
  transport(800103),
  costume(800104),
  catering(800105),
  vehicles(800106),
  dubbing(800200),
  dI(800201),
  vFX(800202),
  sFX(800203),
  mixingAndAtmos(800204),
  censor(800205),
  animalPermission(800206),
  other(801000);

  const PredefinedExpenseTypes(this.value);
  final int value;
}

enum PredefinedFieldControlTypes{
  singleLineText(2400001),
  multiLineText(2400002),
  checkBox(2400003),
  singleSelectionCombo(2400004),
  multipleSelectionCombo(2400005),
  integer(2400006),
  positiveInteger(2400007),
  double(2400008),
  positiveDouble(2400009),
  anyDateTime(2400010),
  futureDateTime(2400011),
  anyDate(2400012),
  futureDate(2400013),
  anyTime(2400014);

  const PredefinedFieldControlTypes(this.value);
  final int value;
}

enum PredefinedFieldPopulatorTypes{
  none(2600001),
  jsonStringListFromUrl(2600002),
  stringList(2600003);

  const PredefinedFieldPopulatorTypes(this.value);
  final int value;
}

enum PredefinedFieldTypes{
  string(2500001),
  stringList(2500002),
  integer(2500010),
  integerList(2500011),
  double(2500020),
  doubleList(2500021),
  boolean(2500030),
  dateTime(2500040);

  const PredefinedFieldTypes(this.value);
  final int value;
}

enum PredefinedFileAttachmentShowModeTypes{
  company(1001),
  movie(1002);

  const PredefinedFileAttachmentShowModeTypes(this.value);
  final int value;
}

enum PredefinedFileStorageTypes{
  reportServerFileStorage(3400001),
  profilePictureFileStorage(3400002),
  letterTemplateFileStorage(3400003),
  contractFileStorage(3400004),
  fileAttachmentFileStorage(3400005),
  statementFileStorage(3400006),
  mlModelFileStorage(3400007),
  resourceIdentificationDocumentFileStorage(3400008),
  resourceBiometricRecordFileStorage(3400009);

  const PredefinedFileStorageTypes(this.value);
  final int value;
}

enum PredefinedGenreTypes{
  action(900001),
  adventure(900002),
  animated(900003),
  comedy(900004),
  drama(900005),
  fantasy(900006),
  historical(900007),
  horror(900008),
  musical(900009),
  noir(900010),
  romance(900011),
  science(900012),
  thriller(900013),
  western(900014),
  mystry(900015),
  sports(900016),
  sciFi(900017),
  other(900018);

  const PredefinedGenreTypes(this.value);
  final int value;
}

enum PredefinedHasAdditionCountTypes{
  yes(0),
  no(1);

  const PredefinedHasAdditionCountTypes(this.value);
  final int value;
}

enum PredefinedIdentificationDocumentTypes{
  driversLicense(9200001),
  aadharCard(9200002),
  panCard(9200003);

  const PredefinedIdentificationDocumentTypes(this.value);
  final int value;
}

enum PredefinedJobOrReportTypes{
  none(3100001),
  userList(3100002);

  const PredefinedJobOrReportTypes(this.value);
  final int value;
}

enum PredefinedJobOutputFormatTypes{
  view(0),
  print(1),
  pdf(2),
  rtf(3),
  xls(4),
  xlsx(5),
  docx(6),
  odt(7),
  ods(8),
  pptx(9),
  csv(10),
  html(11),
  xhtml(12),
  xml(13),
  jrprint(14),
  zip(15),
  custom(16),
  datasource(17);

  const PredefinedJobOutputFormatTypes(this.value);
  final int value;
}

enum PredefinedJobStatusTypes{
  submitted(2200001),
  running(2200002),
  error(2200003),
  completed(2200004),
  waiting(2200005),
  cancelled(2200006),
  skipped(2200007),
  none(2200008);

  const PredefinedJobStatusTypes(this.value);
  final int value;
}

enum PredefinedJobTypes{
  none(2100001),
  report(2100002),
  job(2100003),
  userList(2100004),
  disableMovieProcessor(2100005),
  wakeupNotificationProcessor(2100006),
  contractContentIndexGenerator(2100007),
  movieStatusNotificationProcessor(2100008),
  saveMovieShootDaySummarySessionProcessor(2100009);

  const PredefinedJobTypes(this.value);
  final int value;
}

enum PredefinedJobUsageForTypes{
  all(5400001),
  superAdmins(5400002),
  companyAdmins(5400003);

  const PredefinedJobUsageForTypes(this.value);
  final int value;
}

enum PredefinedLedgerGroupTypes{
  bankAccounts(650000),
  bankOCCAccount(650001),
  bankODAccount(650002),
  branchDivisions(650003),
  cashInHand(650004),
  capitalAccount(650005),
  currentAssets(650006),
  currentLiabilities(650007),
  depositsAsset(650008),
  directExpenses(650009),
  directIncomes(650010),
  dutiesTaxes(650011),
  expensesDirect(650012),
  expensesIndirect(650013),
  fixedAssets(650014),
  incomeDirect(650015),
  incomeIndirect(650016),
  indirectExpenses(650017),
  indirectIncomes(650018),
  investments(650019),
  loansAdvancesAsset(650020),
  loansLiability(650021),
  miscExpensesAsset(650022),
  provisions(650023),
  purchaseAccounts(650024),
  reservesSurplus(650025),
  retainedEarnings(650026),
  salesAccounts(650027),
  securedLoans(650028),
  stockInHand(650029),
  sundryCreditors(650030),
  sundryDebtors(650031),
  suspenseAccount(650032),
  unsecuredLoans(650033);

  const PredefinedLedgerGroupTypes(this.value);
  final int value;
}

enum PredefinedLocationSubTypes{
  inCity(1000001),
  inState(1000002),
  outOfState(1000003),
  outOfCountry(1000004);

  const PredefinedLocationSubTypes(this.value);
  final int value;
}

enum PredefinedLocationTypes{
  indoor(1100001),
  outdoor(1100002);

  const PredefinedLocationTypes(this.value);
  final int value;
}

enum PredefinedLoggedInUserTypes{
  normalUser(7400001),
  anonymousUser(7400002);

  const PredefinedLoggedInUserTypes(this.value);
  final int value;
}

enum PredefinedMessagePriorityTypes{
  error(2800001),
  high(2800002),
  normal(2800003);

  const PredefinedMessagePriorityTypes(this.value);
  final int value;
}

enum PredefinedMessageTemplateTypes{
  userList(3500001),
  userCreation(3500002),
  forgotPassword(3500003),
  changedPassword(3500004),
  reportSuccess(3500005),
  reportError(3500006),
  memberOtp(3500007);

  const PredefinedMessageTemplateTypes(this.value);
  final int value;
}

enum PredefinedMessageToSendTypes{
  email(2300001),
  sms(2300002),
  realtimeMessage(2300003);

  const PredefinedMessageToSendTypes(this.value);
  final int value;
}

enum PredefinedMetaDataGroupTypes{
  actorType(270001);

  const PredefinedMetaDataGroupTypes(this.value);
  final int value;
}

enum PredefinedMovieApprovalStatusTypes{
  notApproved(4700001),
  inApproval(4700002),
  approved(4700003),
  rejected(4700004);

  const PredefinedMovieApprovalStatusTypes(this.value);
  final int value;
}

enum PredefinedMovieLocationVisitStatusTypes{
  visited(7900001),
  notVisited(7900002),
  scheduled(7900003),
  ignored(7900004);

  const PredefinedMovieLocationVisitStatusTypes(this.value);
  final int value;
}

enum PredefinedMovieResourceTypes{
  artist(1),
  technician(2),
  equipment(3),
  vendor(4),
  property(5);

  const PredefinedMovieResourceTypes(this.value);
  final int value;
}

enum PredefinedMovieSceneStatusTypes{
  planned(7300001),
  started(7300002),
  completed(7300003),
  partiallyCompleted(7300004),
  cancelled(7300005);

  const PredefinedMovieSceneStatusTypes(this.value);
  final int value;
}

enum PredefinedMovieScriptFileTypes{
  checkWithSuki(6100001);

  const PredefinedMovieScriptFileTypes(this.value);
  final int value;
}

enum PredefinedMovieShootDayApprovalTypes{
  callSheet(4800001),
  budget(4800002);

  const PredefinedMovieShootDayApprovalTypes(this.value);
  final int value;
}

enum PredefinedMovieShootDayResourceTypes{
  movieShootDayArtist(1),
  movieShootDayTechnician(2),
  movieShootDayEquipment(3),
  movieShootDayVendor(4),
  movieShootDayProperty(5);

  const PredefinedMovieShootDayResourceTypes(this.value);
  final int value;
}

enum PredefinedMovieShootDaySceneStatusTypes{
  planned(4300001),
  started(4300002),
  completed(4300003),
  partiallyCompleted(4300004),
  cancelled(4300005);

  const PredefinedMovieShootDaySceneStatusTypes(this.value);
  final int value;
}

enum PredefinedMovieShootDayStatusTypes{
  notPlanned(4200001),
  planning(4200002),
  planned(4200003),
  started(4200004),
  completed(4200005),
  cancelled(4200006);

  const PredefinedMovieShootDayStatusTypes(this.value);
  final int value;
}

enum PredefinedMovieShootDayTypes{
  actual(1200001),
  prepwork(1200002);

  const PredefinedMovieShootDayTypes(this.value);
  final int value;
}

enum PredefinedMovieStageTypes{
  notStarted(4000001),
  preProduction(4000002),
  production(4000003),
  postProduction(4000004),
  completed(4000005);

  const PredefinedMovieStageTypes(this.value);
  final int value;
}

enum PredefinedMovieStatusNotificationEventTypes{
  dailyExpenseAndBudgetReport(9000001),
  movieCommitmentTaskCompletionReport(9000002);

  const PredefinedMovieStatusNotificationEventTypes(this.value);
  final int value;
}

enum PredefinedMovieStatusTypes{
  notStarted(3900001),
  inProgress(3900002),
  completed(3900003),
  readOnly(3900004),
  archived(3900005);

  const PredefinedMovieStatusTypes(this.value);
  final int value;
}

enum PredefinedNotificationMessageTypes{
  taskAssigned(3000001);

  const PredefinedNotificationMessageTypes(this.value);
  final int value;
}

enum PredefinedNotificationTypes{
  voiceNotification(1),
  emailNotification(2),
  sMSNotification(3),
  whatsAppNotification(4),
  pushNotification(5);

  const PredefinedNotificationTypes(this.value);
  final int value;
}

enum PredefinedPaymentStatusTypes{
  notPaid(7200001),
  paid(7200002),
  partiallyPaid(7200003),
  shouldBePaidImmediately(7200004),
  canPayLater(7200005),
  manuallyPaid(7200006),
  dispute(7200007);

  const PredefinedPaymentStatusTypes(this.value);
  final int value;
}

enum PredefinedPhoneCallNotificationStatusTypes{
  notNeeded(5700001),
  scheduled(5700002),
  confirmed(5700003),
  notConfirmed(5700004),
  declined(5700006),
  notificationError(5700007),
  serverNotConfigured(5700008);

  const PredefinedPhoneCallNotificationStatusTypes(this.value);
  final int value;
}

enum PredefinedPostProductionExpenseTypes{
  dubbing(1300001),
  dI(1300002),
  vFX(1300003),
  sFX(1300004),
  mixingAndAtmos(1300005),
  censor(1300006),
  animalPermission(1300007);

  const PredefinedPostProductionExpenseTypes(this.value);
  final int value;
}

enum PredefinedPostProductionStatusTypes{
  notNeeded(7700000),
  notStarted(7700001),
  inProgress(7700002),
  completed(7700003),
  cancelled(7700004),
  custom(7700005);

  const PredefinedPostProductionStatusTypes(this.value);
  final int value;
}

enum PredefinedPreProductionStatusTypes{
  notNeeded(7600000),
  notStarted(7600001),
  inProgress(7600002),
  completed(7600003),
  cancelled(7600004),
  custom(7600005);

  const PredefinedPreProductionStatusTypes(this.value);
  final int value;
}

enum PredefinedProductionStatusTypes{
  notNeeded(7800000),
  notStarted(7800001),
  inProgress(7800002),
  completed(7800003),
  cancelled(7800004),
  custom(7800005);

  const PredefinedProductionStatusTypes(this.value);
  final int value;
}

enum PredefinedPropertyForTypes{
  common(8500001),
  movieArtist(8500002),
  movieTechnician(8500003),
  movieEquipment(8500004),
  movieVendor(8500005);

  const PredefinedPropertyForTypes(this.value);
  final int value;
}

enum PredefinedPropertyGroupTypes{
  custom(7000001),
  clothing(7000002),
  accessories(7000003),
  footwear(7000004),
  props(7000005),
  makeupAndGrooming(7000006),
  techEquipment(7000007);

  const PredefinedPropertyGroupTypes(this.value);
  final int value;
}

enum PredefinedPropertyOrEquipmentRequestedByTypes{
  movieArtist(9500001),
  movieTechnician(9500002),
  movieUser(9500003);

  const PredefinedPropertyOrEquipmentRequestedByTypes(this.value);
  final int value;
}

enum PredefinedPropertyTransactionTypes{
  received(9300001),
  returned(9300002);

  const PredefinedPropertyTransactionTypes(this.value);
  final int value;
}

enum PredefinedPropertyTypes{
  custom(7100001),
  shirt(7100002),
  pants(7100003),
  jacket(7100004),
  dress(7100005),
  hat(7100006),
  watch(7100007),
  sunglasses(7100008),
  necklace(7100009),
  belt(7100010),
  earrings(7100011),
  shoes(7100012),
  boots(7100013),
  sandals(7100014),
  sword(7100015),
  shield(7100016),
  book(7100017),
  glass(7100018),
  cigarette(7100019),
  lipstick(7100020),
  foundation(7100021),
  hairGel(7100022),
  perfume(7100023),
  walkieTalkie(7100024),
  laptop(7100025),
  drone(7100026),
  microphone(7100027),
  cameraRig(7100028);

  const PredefinedPropertyTypes(this.value);
  final int value;
}

enum PredefinedPushNotificationServerTypes{
  fCM(660000),
  azureNotificationHubs(660001),
  oneSignal(660002),
  applePushNotificationService(660003),
  customWebSocket(660004);

  const PredefinedPushNotificationServerTypes(this.value);
  final int value;
}

enum PredefinedPushNotificationStatusTypes{
  notNeeded(6700001),
  scheduled(6700002),
  sent(6700003),
  confirmed(6700004),
  notConfirmed(6700005),
  viewedAndNotConfirmed(6700006),
  declined(6700007),
  notificationError(6700008),
  serverNotConfigured(6700009);

  const PredefinedPushNotificationStatusTypes(this.value);
  final int value;
}

enum PredefinedRateTypes{
  perHour(1400001),
  perDay(1400002),
  perWeek(1400003),
  perMonth(1400004),
  perMovie(1400005),
  perEpisode(1400006),
  flat(1400007),
  allowance(1400008),
  notApplicable(1400040),
  custom(1400050);

  const PredefinedRateTypes(this.value);
  final int value;
}

enum PredefinedRateUnitTypes{
  hour(8700001),
  day(8700002),
  week(8700003),
  month(8700004),
  year(8700005);

  const PredefinedRateUnitTypes(this.value);
  final int value;
}

enum PredefinedRealtimeMessageStatusTypes{
  notYetSent(2900001),
  sent(2900002),
  viewed(2900003),
  deleted(2900004),
  error(2900005);

  const PredefinedRealtimeMessageStatusTypes(this.value);
  final int value;
}

enum PredefinedRequirementTypes{
  general(4900001),
  movieArtist(4900002),
  artistType(4900003),
  movieTechnician(4900004),
  technicianType(4900005),
  movieEquipment(4900006),
  equipmentType(4900007),
  movieVendor(4900008),
  vendorType(4900009),
  movieBudgetCategory(4900010),
  movieProperty(4900011),
  propertyType(4900012);

  const PredefinedRequirementTypes(this.value);
  final int value;
}

enum PredefinedResourceTypes{
  company(2000001),
  user(2000002),
  state(2000003),
  movie(2000004),
  movieArtistOrTechnician(2000005),
  movieUser(2000006),
  movieUnit(2000007),
  movieShootDayScene(2000008),
  movieShootDayRequirement(2000009),
  movieShootDayExpense(2000010),
  movieShootDayBudget(2000011),
  movieShootDayArtistOrTechnician(2000012),
  movieShootDay(2000013),
  movieSceneArtistOrTechnician(2000014),
  movieScene(2000015),
  movieLocation(2000016),
  movieGenre(2000017),
  contract(2000018),
  movieBudgetDivision(2000019),
  movieBudgetCategoryExpense(2000020),
  movieBudgetCategory(2000021),
  movieArtistOrTechnicianRate(2000022),
  userPermission(2000023),
  technicianTypeRate(2000024),
  technicianType(2000025),
  technicianRate(2000026),
  technician(2000027),
  genre(2000028),
  expenseType(2000029),
  contractTemplate(2000030),
  budgetDivision(2000031),
  budgetCategoryExpense(2000032),
  budgetCategory(2000033),
  artistType(2000034),
  artist(2000035),
  auditOperation(2000036),
  configurationGroup(2000037),
  configurationItem(2000038),
  enumGroup(2000039),
  enumType(2000040),
  job(2000041),
  jobAttachment(2000042),
  jobNotificationEmail(2000043),
  jobTemplate(2000044),
  jobTemplateParameter(2000045),
  metaData(2000046),
  metaDataGroup(2000047),
  metaDataGroupSection(2000048),
  realtimeMessage(2000049),
  scheduledJob(2000050),
  jobTemplateCategory(2000051),
  savedJob(2000052),
  messageToSend(2000053),
  artistRate(2000054),
  artistTypeRate(2000055),
  movieShootDaySceneArtistOrTechnician(2000056),
  savedJobNotificationEmail(2000057),
  scheduledJobHistory(2000058),
  scheduledJobNotificationEmail(2000059),
  companyStorageConfiguration(2000060),
  mailServer(2000061),
  artistGroupType(2000062),
  technicianGroupType(2000063),
  movieArtistRate(2000064),
  movieTechnician(2000065),
  movieArtist(2000066),
  movieEquipment(2000067),
  movieEquipmentRate(2000068),
  movieSceneEquipment(2000069),
  movieSceneTechnician(2000070),
  movieSceneRequirement(2000071),
  movieShootDayArtist(2000072),
  movieShootDayTechnician(2000073),
  movieShootDayEquipment(2000074),
  movieTechnicianRate(2000075),
  movieSceneArtist(2000076),
  equipment(2000077),
  equipmentRate(2000078),
  equipmentType(2000079),
  equipmentTypeRate(2000080),
  equipmentGroupType(2000081),
  vendor(2000082),
  vendorType(2000083),
  movieVendor(2000084),
  noteAttachment(2000085),
  vendorGroupType(2000086),
  movieSetting(2000087),
  movieShootDayApproval(2000088),
  movieSceneVendor(2000089),
  movieShootDayVendor(2000090),
  vendorTypeRate(2000091),
  vendorRate(2000092),
  movieVendorRate(2000093),
  singleSignOnServer(2000094),
  messageTemplate(2000095),
  auditOperationDetail(2000096),
  fileAttachment(2000097),
  fileAttachmentFolder(2000098),
  smsServer(2000099),
  movieShootDayScriptFile(2000100),
  movieScriptFile(2000101),
  digitalSignatureServer(2000102),
  statementTemplate(2000103),
  movieVoucher(2000104),
  chat(2000105),
  chatMessageStatus(2000106),
  chatUser(2000107),
  chatMessage(2000108),
  ledgerType(2000109),
  pushNotificationServer(2000110),
  voiceNotificationServer(2000111),
  whatsAppNotificationServer(2000112),
  property(2000113),
  propertyRate(2000114),
  propertyType(2000115),
  propertyTypeRate(2000116),
  propertyGroupType(2000117),
  movieProperty(2000118),
  moviePropertyRate(2000119),
  movieSceneProperty(2000120),
  movieShootDayProperty(2000121),
  anonymousUser(2000122),
  preProductionStatusType(2000123),
  productionStatusType(2000124),
  postProductionStatusType(2000125),
  department(2000126),
  movieLocationCategory(2000127),
  movieLocationCandidate(2000128),
  movieCommitmentTask(2000130),
  movieStatusNotificationEventUser(2000131),
  movieStatusNotificationEventSession(2000132),
  movieShootDaySummarySession(2000133),
  colorType(2000134),
  defaultUserTypePermission(2000135),
  clientLog(2000136),
  equipmentTransaction(2000137),
  propertyTransaction(2000138),
  resourceBiometricRecord(2000139),
  resourceIdentificationDocument(2000140),
  mlModelTrainingSession(2000141);

  const PredefinedResourceTypes(this.value);
  final int value;
}

enum PredefinedSearchIndexServerTypes{
  lucence(7500001),
  elasticSearch(7500002),
  azureSearch(7500003);

  const PredefinedSearchIndexServerTypes(this.value);
  final int value;
}

enum PredefinedSearchIndexTypes{
  contract(7500001);

  const PredefinedSearchIndexTypes(this.value);
  final int value;
}

enum PredefinedShootingExpenseTypes{
  bata(1500001),
  perDayExpense(1500002),
  artDepartment(1500003),
  transport(1500004),
  costume(1500005),
  catering(1500006),
  vehicles(1500007),
  other(1500008);

  const PredefinedShootingExpenseTypes(this.value);
  final int value;
}

enum PredefinedSingleSignOnServerTypes{
  google(5300001),
  microsoft(5300002),
  office360ActiveDirectory(5300003),
  selfHostedActiveDirectory(5300004);

  const PredefinedSingleSignOnServerTypes(this.value);
  final int value;
}

enum PredefinedSmsAndVoiceServerTypes{
  twilio(5900001),
  custom(5900002);

  const PredefinedSmsAndVoiceServerTypes(this.value);
  final int value;
}

enum PredefinedSMSNotificationStatusTypes{
  notNeeded(6800001),
  scheduled(6800002),
  sent(6800003),
  confirmed(6800004),
  notConfirmed(6800005),
  viewedAndNotConfirmed(6800006),
  declined(6800007),
  notificationError(6800008),
  serverNotConfigured(6800009);

  const PredefinedSMSNotificationStatusTypes(this.value);
  final int value;
}

enum PredefinedStatementTemplateTypes{
  voucher(6400001);

  const PredefinedStatementTemplateTypes(this.value);
  final int value;
}

enum PredefinedTaskForTypes{
  general(8400000),
  movieArtist(8400001),
  movieTechnician(8400002),
  movieEquipment(8400003),
  movieVendor(8400004),
  movieLocation(8400006),
  movieLocationCandidate(8400007),
  movieProperty(84000084);

  const PredefinedTaskForTypes(this.value);
  final int value;
}

enum PredefinedTechnicianGroupTypes{
  custom(3600001),
  production(3600002),
  direction(3600003),
  dop(3600004),
  productionDesign(3600005),
  wardrobe(3600006),
  hairAndMakup(3600007),
  onSetCommunication(3600008),
  accounts(3600009),
  animalHandlers(3600010),
  specialEffects(3600011),
  choreographyAndStunt(3600012),
  publicityStillsAndMaking(3600013),
  vfx(3600014),
  specialEquipments(3600015),
  sound(3600016),
  vehicles(3600017),
  catering(3600018);

  const PredefinedTechnicianGroupTypes(this.value);
  final int value;
}

enum PredefinedTechnicianTypes{
  custom(1600000),
  executiveProducer(1600001),
  lineProducer(1600002),
  juniorLineProducer(1600003),
  productionCoordinator(1600004),
  productionController(1600005),
  director(1600010),
  associateDirectors(1600011),
  firststAD(1600012),
  secondnAD(1600013),
  secondSecondAD(1600014),
  daAndScriptSupervisor(1600015),
  thirdAD(1600016),
  assistantDirector(1600017),
  dOP(1600020),
  firstAC(1600021),
  focusPuller(1600022),
  dopAssistants(1600023),
  cameraOperator(1600024),
  productionDesigner(1600030),
  artAssistant(1600031),
  artTeam(1600032),
  costumeDesigner(1600040),
  secondaryCostumeDesigner(1600041),
  wardrobeAssistants(1600042),
  dressmanOrTailor(1600043),
  jewellery(1600044),
  hmuDesigner(1600050),
  hmuHod(1600051),
  walkieSetUp(1600060),
  locationAccountants(1600070),
  horseWranglers(1600080),
  elephantMahout(1600081),
  truss(1600090),
  fire(1600091),
  choreographyDesigner(1600100),
  choreographyAssistants(1600101),
  actionMaster(1600102),
  stuntTeam(1600103),
  making(1600110),
  stills(1600111),
  supervisor(1600120),
  postProductionSupervisor(1600121),
  jimmyJib(1600130),
  steadiCam(1600131),
  headRigger(1600132),
  gaffer(1600133),
  drone(1600134),
  patherDolly(1600135),
  locationSound(1600140),
  soundAssistant(1600141),
  vanityVan(1600150),
  generator(1600151),
  productionTruck(1600152),
  jimmyJibVehicle(1600153),
  ambulance(1600154),
  breakfastCaterer(1600160),
  lunchCaterer(1600161),
  snacksCaterer(1600162),
  dinnerCaterer(1600163);

  const PredefinedTechnicianTypes(this.value);
  final int value;
}

enum PredefinedUserPermissionActionTypes{
  view(1),
  manage(2),
  delete(3);

  const PredefinedUserPermissionActionTypes(this.value);
  final int value;
}

enum PredefinedUserPermissionModuleTypes{
  superAdmin(1),
  companyAdmin(2),
  users(3),
  movie(4),
  contract(5),
  scenes(6),
  statementTemplate(7),
  department(8),
  companyArtist(11),
  companyTechnician(12),
  companyEquipment(13),
  companyVendor(14),
  companyProperty(15),
  companyFileAttachment(16),
  companyContractTemplate(17),
  companyContract(18),
  movieArtist(21),
  movieTechnician(22),
  movieEquipment(23),
  movieVendor(24),
  movieProperty(25),
  movieFileAttachment(26),
  movieCommitmentTask(27),
  movieShootDay(28),
  preProduction(31),
  production(32),
  postProduction(33),
  dailyStatusReport(34),
  budget(41),
  expense(42),
  otherBudgetAndExpense(43),
  paymentStatus(44),
  financials(45),
  callNotification(51),
  analytics(52),
  chat(53),
  attendance(55),
  movieLocation(56),
  movieVoucher(57),
  movieArtistRate(58),
  movieTechnicianRate(59),
  movieEquipmentRate(60),
  movieVendorRate(61),
  moviePropertyRate(62),
  movieShootDayArtist(63),
  movieShootDayTechnician(64),
  movieShootDayEquipment(65),
  movieShootDayVendor(66),
  movieShootDayProperty(67),
  movieSceneArtist(68),
  movieSceneTechnician(69),
  movieSceneEquipment(70),
  movieSceneVendor(71),
  movieSceneProperty(72),
  movieShootDayScenes(73),
  noteAttachment(74),
  artistRate(75),
  technicianRate(76),
  equipmentRate(77),
  vendorRate(78),
  propertyRate(79),
  budgetCategory(80),
  budgetDivision(81),
  ledgerType(82),
  movieWorkflowStatusType(83),
  colorType(84);

  const PredefinedUserPermissionModuleTypes(this.value);
  final int value;
}

enum PredefinedUserPermissionTypes{
  configureSystem(1900001),
  configureCompany(1900011),
  viewCompany(1900012),
  configureMovie(1900021),
  manageMovie(1900022),
  viewMovie(1900023),
  manageContract(1900031),
  viewContract(1900032),
  approveRejectContract(1900033),
  signContract(1900034),
  manageMovieBudget(1900041),
  viewMovieBudget(1900042),
  manageMovieExpense(1900051),
  viewMovieExpense(1900052),
  manageMovieScenes(1900061),
  viewMovieScenes(1900062),
  viewAndDownloadCompanyFileAttachment(1900071),
  uploadCompanyFileAttachment(1900072),
  deleteCompanyFileAttachment(1900073),
  viewAndDownloadMovieFileAttachment(1900081),
  uploadMovieFileAttachment(1900082),
  deleteMovieFileAttachment(1900083),
  manageStatementTemplate(1900091),
  viewStatementTemplate(1900092),
  manageCompanyArtist(1900101),
  viewCompanyArtist(1900102),
  manageCompanyTechnician(1900111),
  viewCompanyTechnician(1900112),
  manageCompanyEquipment(1900121),
  viewCompanyEquipment(1900122),
  manageCompanyVendor(1900131),
  viewCompanyVendor(1900132),
  manageCompanyProperty(1900141),
  viewCompanyProperty(1900142),
  manageMovieArtist(1900151),
  viewMovieArtist(1900152),
  manageMovieTechnician(1900161),
  viewMovieTechnician(1900162),
  manageMovieEquipment(1900171),
  viewMovieEquipment(1900172),
  manageMovieVendor(1900181),
  viewMovieVendor(1900182),
  manageMovieProperty(1900191),
  viewMovieProperty(1900192),
  manageCompanyContract(1900201),
  viewCompanyContract(1900202),
  signCompanyContract(1900203),
  manageCompanyContractTemplate(1900211),
  viewCompanyContractTemplate(1900212),
  manageUser(1900221),
  manageCallNotification(1900231),
  viewCallNotification(1900232),
  viewCallSheet(1900241),
  manageCallSheet(1900242),
  managePaymentStatus(1900251),
  viewPaymentStatus(1900252),
  manageProduction(1900261),
  viewProduction(1900262),
  managePreProduction(1900271),
  viewPreProduction(1900272),
  managePostProduction(1900281),
  viewPostProduction(1900282),
  manageOtherBudgetAndExpense(1900291),
  viewOtherBudgetAndExpense(1900292),
  viewAnalytics(1900301),
  viewChat(1900311),
  viewFinancialDetails(1900321),
  viewDailyStatusReport(1900331),
  manageMovieTaskCommitment(1900341),
  viewMovieTaskCommitment(1900342),
  manageMovieShootDay(1900351),
  viewMovieShootDay(1900352),
  manageDepartment(1900361),
  viewDepartment(1900362);

  const PredefinedUserPermissionTypes(this.value);
  final int value;
}

enum PredefinedUserTypes{
  superAdmin(1800001),
  companyAdmin(1800101),
  producer(1800301),
  productionExecutive(1800302),
  productionManager(1800303),
  auditor(1800401),
  accountingManager(1800402),
  director(1800501),
  assistantDirector(1800502),
  executiveProducer(1800503),
  productionController(1800504),
  assistantProductionManager(1800506);

  const PredefinedUserTypes(this.value);
  final int value;
}

enum PredefinedVendorGroupTypes{
  custom(4600001),
  food(4600002),
  vehicle(4600003),
  talentManagement(4600004);

  const PredefinedVendorGroupTypes(this.value);
  final int value;
}

enum PredefinedVendorTypes{
  custom(4100001),
  talentManagement(4100002),
  food(4100003);

  const PredefinedVendorTypes(this.value);
  final int value;
}

enum PredefinedWhatsAppNotificationStatusTypes{
  notNeeded(6900001),
  scheduled(6900002),
  sent(6900003),
  confirmed(6900004),
  notConfirmed(6900005),
  viewedAndNotConfirmed(6900006),
  declined(6900007),
  notificationError(6900008),
  serverNotConfigured(6900009);

  const PredefinedWhatsAppNotificationStatusTypes(this.value);
  final int value;
}

